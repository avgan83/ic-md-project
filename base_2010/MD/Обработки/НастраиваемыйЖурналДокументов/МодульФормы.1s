Перем гУсл1,гУсл2,гУсл3,гУсл4,гУсл5,гУсл6,гУсл7,гУсл8,гУсл9,гУсл10;
Перем гУсл11,гУсл12,гУсл13,гУсл14,гУсл15,гУсл16,гУсл17,гУсл18,гУсл19,гУсл20;
Перем гСпВариантов;
Перем гСписокПарам;
Перем гВидЖурнала;
Перем гВидЖурналаПрежн;
Перем гИмяФайла;
Перем гСтрПуть;
Перем гТабГрафа;
Перем гНачДата;
Перем гКонДата;
Перем гФункции;
Перем гТабВыборка;
Перем гВидыУсловий;

Процедура УстановитьИнтервал()
	Если флИнтервалЗадан = 0 Тогда                  
		Док = СоздатьОбъект("Документ");
		Док.ОбратныйПорядок(0);
		Док.ВыбратьДокументы();
		Пока Док.ПолучитьДокумент() = 1 Цикл
			гНачДата = Док.ДатаДок;
			Прервать;
		КонецЦикла;     
		Док.ОбратныйПорядок(1);
		Док.ВыбратьДокументы();
		Пока Док.ПолучитьДокумент() = 1 Цикл
			гКонДата = Док.ДатаДок;
			Прервать;
		КонецЦикла;			
	Иначе
		гНачДата = ФормДатаНач;
		гКонДата = ФормДатаКон;
		Если ПустоеЗначение(гНачДата) = 1 Тогда 
			Док = СоздатьОбъект("Документ");
			Док.ОбратныйПорядок(0);
			Док.ВыбратьДокументы();
			Пока Док.ПолучитьДокумент() = 1 Цикл
				гНачДата = Док.ДатаДок;
				Прервать;
			КонецЦикла;
		КонецЕсли; 
		Если ПустоеЗначение(гКонДата) = 1 Тогда 
			Док = СоздатьОбъект("Документ");
			Док.ОбратныйПорядок(1);
			Док.ВыбратьДокументы();
			Пока Док.ПолучитьДокумент() = 1 Цикл
				гКонДата = Док.ДатаДок;
				Прервать;
			КонецЦикла;				
		КонецЕсли;
	КонецЕсли;    
КонецПроцедуры

Функция ПрисвоитьУсловие(Ном,Значен)
	Если Ном=1 Тогда
		гУсл1=Значен;
	ИначеЕсли Ном=2 Тогда
		гУсл2=Значен;
	ИначеЕсли Ном=3 Тогда
		гУсл3=Значен;
	ИначеЕсли Ном=4 Тогда
		гУсл4=Значен;
	ИначеЕсли Ном=5 Тогда
		гУсл5=Значен;
	ИначеЕсли Ном=6 Тогда
		гУсл6=Значен;
	ИначеЕсли Ном=7 Тогда
		гУсл7=Значен;
	ИначеЕсли Ном=8 Тогда
		гУсл8=Значен;
	ИначеЕсли Ном=9 Тогда
		гУсл9=Значен;
	ИначеЕсли Ном=10 Тогда
		гУсл10=Значен;
	ИначеЕсли Ном=11 Тогда
		гУсл11=Значен;
	ИначеЕсли Ном=12 Тогда
		гУсл12=Значен;
	ИначеЕсли Ном=13 Тогда
		гУсл13=Значен;
	ИначеЕсли Ном=14 Тогда
		гУсл14=Значен;
	ИначеЕсли Ном=15 Тогда
		гУсл15=Значен;
	ИначеЕсли Ном=16 Тогда
		гУсл16=Значен;
	ИначеЕсли Ном=16 Тогда
		гУсл17=Значен;
	ИначеЕсли Ном=18 Тогда
		гУсл18=Значен;
	ИначеЕсли Ном=19 Тогда
		гУсл19=Значен;
	ИначеЕсли Ном=20 Тогда
		гУсл20=Значен;
	Иначе
		Возврат 0;
	КонецЕсли;
	Возврат 1;
КонецФункции

Функция ТипГрафы(ИденГрафы, Длина=0, Точность=0, ФлРеквТабЧасти=0, тзГрафа = "", ФлВычислять=0)
	Если ФлВычислять = 0 Тогда
		НомСтр = "";
		Если ФормТабГрафы.НайтиЗначение(ИденГрафы, НомСтр, "Графа") = 0 Тогда 
			Предупреждение("Не найдена графа!");						
		КонецЕсли;
		ФормТабГрафы.ПолучитьСтрокуПоНомеру(НомСтр);
		Длина          = ФормТабГрафы.Длина;
		Точность       = ФормТабГрафы.Точность;
		ФлРеквТабЧасти = ФормТабГрафы.ФлРеквТабЧасти;
		тзГрафа 	   = ФормТабГрафы.тзРеквизитов;
		Возврат ФормТабГрафы.ТипГрафы;
	КонецЕсли;
	ФлВыражения    = 0;
	ФлРеквТабЧасти = 0;
	сзТиповГрафы = СоздатьОбъект("СписокЗначений");	
	тзГрафа.ВыбратьСтроки();
	Пока тзГрафа.ПолучитьСтроку() = 1 Цикл
		Если СокрЛП(тзГрафа.Знак1) <> "" Тогда ФлВыражения = 1 КонецЕсли;
		РеквМД = Метаданные.ОбщийРеквизитДокумента(тзГрафа.Рекв1);
		Если РеквМД.Выбран() = 0 Тогда 
			РеквМД = Метаданные.Документ(тзГрафа.ИденДок).РеквизитШапки(тзГрафа.Рекв1);
			Если РеквМД.Выбран() = 0 Тогда
				РеквМД = Метаданные.Документ(тзГрафа.ИденДок).РеквизитТабличнойЧасти(тзГрафа.Рекв1);
				Если РеквМД.Выбран() = 0 Тогда Возврат "" КонецЕсли;
				ФлРеквТабЧасти = 1;
			КонецЕсли;
		КонецЕсли;				
		ТипМД = РеквМД.Тип;
		ВидМД = РеквМД.Вид;
		Если РеквМД.Длина > Длина Тогда 
			Длина = РеквМД.Длина;
		КонецЕсли;
		Если РеквМД.Точность > Точность Тогда 
			Точность = РеквМД.Точность;
		КонецЕсли;
		ТипМД = СокрЛП(ТипМД) + ?(СокрЛП(ВидМД)<>"", "." + СокрЛП(ВидМД), "");
		Если сзТиповГрафы.Принадлежит(СокрЛП(ТипМД)) = 0 Тогда 
			сзТиповГрафы.ДобавитьЗначение(ТипМД);				
		КонецЕсли;						
	КонецЦикла;
	Если сзТиповГрафы.РазмерСписка() <> 1 Тогда Возврат "" КонецЕсли;
	ТипГрафы = СокрЛП(сзТиповГрафы.ПолучитьЗначение(1));
	Если (ТипГрафы = "Число") И (ФлВыражения = 1) Тогда 
		Возврат "Выражение";							
	Иначе 
		Возврат ТипГрафы;
	КонецЕсли;    
КонецФункции

Функция СравнитьЗначения(СтрЗнак, Знач1, Знач2)
	Рез=1;
	Если ТипЗначенияСтр(Знач1) <> ТипЗначенияСтр(Знач2) Тогда
		Сообщить("Несовпадение типов!");                 
		Возврат 0;
	КонецЕсли;
	Если (СтрЗнак="<>") Тогда
		Рез=?(Знач1<>Знач2,1,0);
	ИначеЕсли (СтрЗнак="<=") Тогда
		Рез=?(Знач1<=Знач2,1,0);
	ИначеЕсли (СтрЗнак=">=") Тогда
		Рез=?(Знач1>=Знач2,1,0);
	ИначеЕсли (СтрЗнак=">") Тогда
		Рез=?(Знач1>Знач2,1,0);
	ИначеЕсли (СтрЗнак="<") Тогда
		Рез=?(Знач1<Знач2,1,0);
	ИначеЕсли (СтрЗнак="=") Тогда
		Рез=?(Знач1=Знач2,1,0);  
	ИначеЕсли (СтрЗнак="В") Тогда
		Если Знач2.ЭтоГруппа() = 1 Тогда 
			Рез = ?(Знач1.ПринадлежитГруппе(Знач2)=1, 1, 0);				
		Иначе 
			Рез=?(Знач1=Знач2,1,0);  							
		КонецЕсли;			
	КонецЕсли;
	Возврат Рез;
КонецФункции

Функция ВычислитьВыражение(СтрЗнак, Знач1, Знач2, Точность=2)
	Если ТипЗначенияСтр(Знач1) <> ТипЗначенияСтр(Знач2) Тогда
		Сообщить("Несовпадение типов!");                 
		Возврат 0;
	КонецЕсли;
	Если 	  СтрЗнак = "+" Тогда
		Рез = Знач1 + Знач2;
	ИначеЕсли СтрЗнак = "-" Тогда
		Рез = Знач1 - Знач2;
	ИначеЕсли СтрЗнак = "*" Тогда
		Рез = Знач1 * Знач2;
	ИначеЕсли СтрЗнак = "/" Тогда
		Попытка
		    Рез = Окр(Знач1 / Знач2, Точность, 1);
		Исключение
			Рез = 0;
		КонецПопытки;		
	КонецЕсли;
	Возврат Рез;
КонецФункции

Функция ЗначениеРевизитаДляДокумента(Док, Рекв)
	Если СокрЛП(Рекв) = "" Тогда Возврат "Пусто" КонецЕсли;
	ИденДок  = Док.Вид();
	РеквМД = Метаданные.Документ(ИденДок).РеквизитТабличнойЧасти(Рекв);
	Если РеквМД.Выбран() = 1 Тогда 
		Возврат Док.Итог(Рекв);
	Иначе
		Возврат Док.ПолучитьАтрибут(Рекв);		
	КонецЕсли;    
КонецФункции

Функция ЗначениеГрафыДляДокумента(Док, ИденГрафы)
	Если	  СокрЛП(ИденГрафы) = "ДатаДок" Тогда
		Возврат Док.ДатаДок;		
	ИначеЕсли СокрЛП(ИденГрафы) = "НомерДок" Тогда
		Возврат Док.НомерДок;
	ИначеЕсли СокрЛП(ИденГрафы) = "ВремяДок" Тогда
		ч = "";
		м = "";
		с = "";
		Возврат Док.ПолучитьВремя(ч, м, с);
	ИначеЕсли СокрЛП(ИденГрафы) = "ВидДок" Тогда
		Возврат Док.ПредставлениеВида();
	КонецЕсли;
	ИденДок  = Док.Вид();
	
	НомСтр = "";
	Если ФормТабГрафы.НайтиЗначение(ИденГрафы, НомСтр, "Графа") = 0 Тогда 
		Предупреждение("Не найдена графа!");						
	КонецЕсли;
	ФормТабГрафы.ПолучитьСтрокуПоНомеру(НомСтр);
	Точность       = ФормТабГрафы.Точность;
	тзГрафа 	   = ФормТабГрафы.тзРеквизитов;
	ТипГрафы	   = ФормТабГрафы.ТипГрафы;
	
	НомСтр		   = "";
	Если тзГрафа.НайтиЗначение(ИденДок, НомСтр, "ИденДок") = 0 Тогда 
		Возврат "Пусто";
	КонецЕсли; 
	тзГрафа.ПолучитьСтрокуПоНомеру(НомСтр);
	Если ТипГрафы <> "Выражение" Тогда 
		Возврат ЗначениеРевизитаДляДокумента(Док, СокрЛП(тзГрафа.Рекв1));
	Иначе
		Рекв1 = Число(ЗначениеРевизитаДляДокумента(Док, СокрЛП(тзГрафа.Рекв1)));
		Рекв2 = Число(ЗначениеРевизитаДляДокумента(Док, СокрЛП(тзГрафа.Рекв2)));
		Рекв3 = Число(ЗначениеРевизитаДляДокумента(Док, СокрЛП(тзГрафа.Рекв3)));
		Если СокрЛП(тзГрафа.Знак1) = "" Тогда Возврат Рекв1 КонецЕсли;
		Рез = ВычислитьВыражение(СокрЛП(тзГрафа.Знак1), Рекв1, Рекв2, Точность);
		Если СокрЛП(тзГрафа.Знак2) = "" Тогда Возврат Рез КонецЕсли;
		Рез = ВычислитьВыражение(СокрЛП(тзГрафа.Знак2), Рез, Рекв3, Точность);
		Возврат Рез;
	КонецЕсли;    
КонецФункции

Процедура Запрос() 
	Запрос = СоздатьОбъект("Запрос");
	Если ВклПомеч = 2  Тогда
		ТекстЗапроса = "Обрабатывать НеПомеченныеНаУдаление;";
	ИначеЕсли ВклПомеч = 3  Тогда
		ТекстЗапроса = "Обрабатывать ПомеченныеНаУдаление;";
	Иначе
		ТекстЗапроса = "Обрабатывать Все;";
	КонецЕсли;
	УстановитьИнтервал();
	ТекстЗапроса = ТекстЗапроса + "
				   |Период с гНачДата по гКонДата;";		
				   
	Если (ВклПроведенныеВсе = 2) И (Форма.ВклПроведенныеВсе.Доступность() = 1)  Тогда
		ТекстЗапроса = ТекстЗапроса + "
					   |ОбрабатыватьДокументы Проведенные;";
	ИначеЕсли (ВклПроведенныеВсе = 3) И (Форма.ВклПроведенныеВсе.Доступность() = 1)  Тогда
		ТекстЗапроса = ТекстЗапроса +"
					   |ОбрабатыватьДокументы Непроведенные;";
	Иначе
		ТекстЗапроса = ТекстЗапроса +"
					   |ОбрабатыватьДокументы Все;";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
					|Док = Документ." + ФормДокументы.ПолучитьЗначение(1) + ".ТекущийДокумент";
	Для Сч = 2 По ФормДокументы.РазмерСписка() Цикл
	    ТекстЗапроса = ТекстЗапроса + "
					|,Документ." + ФормДокументы.ПолучитьЗначение(Сч) + ".ТекущийДокумент";
	КонецЦикла;       
	ТекстЗапроса = ТекстЗапроса + ";	
				   |Группировка Док упорядочить по Док.ДатаДок;";
							
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		Если ТабУсловия.ФлВкл <> "+" Тогда Продолжить КонецЕсли;
		НомСтр   = ТабУсловия.НомерСтроки;
		Если ПрисвоитьУсловие(НомСтр, ТабУсловия.КолЗначение) = 0 Тогда
		     Предупреждение("Допустимо использовать не более " + НомСтр + " условий!");
			 Прервать;
		КонецЕсли;		
	КонецЦикла;			
				
	ФлСущВыражения = 0;
	сзДопУсловий = СоздатьОбъект("СписокЗначений");
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		Если СокрЛП(ТабУсловия.ФлВкл) <> "+" Тогда Продолжить КонецЕсли;
		НомСтр   = Строка(ТабУсловия.НомерСтроки);		
		Если СокрЛП(ТабУсловия.ВидУсловия) = "Графа" Тогда
			ФлРеквТабЧасти = 0;
			тзГрафа		   = "";
			ТипГрафы = СокрЛП(ТипГрафы(ТабУсловия.ИденОбъекта, , ,ФлРеквТабЧасти, тзГрафа));
			Если (ТипГрафы = "Выражение") Или (ТипГрафы = "") Или (ФлРеквТабЧасти = 1) Тогда 
				ФлСущВыражения = 1;
				Продолжить;
			КонецЕсли;			
			
			ПерваяСтрока = 1;
			ТекстЗапроса = ТекстЗапроса + "
							|Перем" + НомСтр + " = Документ." + тзГрафа.ПолучитьЗначение(ПерваяСтрока, "ИденДок") 
														+ "." + тзГрафа.ПолучитьЗначение(ПерваяСтрока, "Рекв1");
			Для Сч = ПерваяСтрока + 1 По тзГрафа.КоличествоСтрок() Цикл				
			    ТекстЗапроса = ТекстЗапроса + "
							|,Документ." + тзГрафа.ПолучитьЗначение(Сч, "ИденДок")
								   + "." + тзГрафа.ПолучитьЗначение(Сч, "Рекв1");
			КонецЦикла;
		Иначе
			ПолныйИден = "Документ." + ТабУсловия.ИденОбъекта.Идентификатор + "." + СокрЛП(ТабУсловия.КолИдентификатор);
			ТекстЗапроса = ТекстЗапроса + "
						   |Перем" + НомСтр + " = " + ПолныйИден;
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + ";
						   |Условие (Перем" + НомСтр + " " + ТабУсловия.КолУсловие + "гУсл" + НомСтр + ");";
	КонецЦикла;
	
	Запрос.ИспользоватьГрафуОтбора("");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 тогда
		Предупреждение("Запрос не выполнен!");
		Возврат;
	КонецЕсли;

	гТабВыборка = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(гТабВыборка, 0, 0);
	
	Если ФлСущВыражения = 1 Тогда 
		гТабВыборка.НоваяКолонка("Удалить");
		гТабВыборка.ВыбратьСтроки();
		Пока гТабВыборка.ПолучитьСтроку() = 1 Цикл
			Док = гТабВыборка.Док;
			гТабВыборка.Удалить = 0;
			ТабУсловия.ВыбратьСтроки();
			Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
				Если СокрЛП(ТабУсловия.ФлВкл) <> "+" Тогда Продолжить КонецЕсли;
				Если СокрЛП(ТабУсловия.ВидУсловия) <> "Графа" Тогда Продолжить КонецЕсли;
				ФлРеквТабЧасти = 0;
				ИденГрафы = ТабУсловия.ИденОбъекта;				
				ТипГрафы = СокрЛП(ТипГрафы(ИденГрафы, , ,ФлРеквТабЧасти));
				Если (ТипГрафы = "Выражение") Или (ТипГрафы = "") Или (ФлРеквТабЧасти = 1) Тогда
					Знач1 = ЗначениеГрафыДляДокумента(Док, ИденГрафы);
					Если СокрЛП(Знач1) = "Пусто" Тогда Продолжить КонецЕсли;
					Знач2 = ТабУсловия.КолЗначение;
					Если СравнитьЗначения(СокрЛП(ТабУсловия.КолУсловие), Знач1, Знач2) = 0 Тогда 
						гТабВыборка.Удалить = 1;									
					КонецЕсли;					
				Иначе
					Продолжить;	
				КонецЕсли;
			КонецЦикла;		
		КонецЦикла;						
		НомерСтр = "";
		Пока 1=1 Цикл
		    Если гТабВыборка.НайтиЗначение(1, НомерСтр, "Удалить") = 1 Тогда 
				гТабВыборка.УдалитьСтроку(НомерСтр);				    				
				НомерСтр = "";
		    Иначе 
				Прервать;	    				
		    КонецЕсли;
		КонецЦикла;		
		гТабВыборка.УдалитьКолонку("Удалить");
	КонецЕсли;	
КонецПроцедуры

Процедура ВывестиОбласть(Таб, НомСтр, НомКол, стрЗначение, Док="", ФлЗаголовок=0, ШиринаСтолбца=20)
	Если ФлЗаголовок = 1 Тогда 
		Если СокрЛП(ШиринаСтолбца) = "" Тогда ШиринаСтолбца = 20 КонецЕсли;
		РазмерШрифта			= 9;
		Полужирный				= 1;
		ВысотаСтроки			= 14;        
		ГоризонтальноеПоложение = 1;     
		ВертикальноеПоложение	= 3;  
		Контроль				= 4;
		ВидРамкиГоризонт		= 4;
		ВидРамкиВертикаль		= 6;
		ЦветФона				= 192;
	ИначеЕсли ФлЗаголовок = 2 Тогда 
		РазмерШрифта			= 10;
		Полужирный				= 1;
		ВысотаСтроки			= 15;        
		ГоризонтальноеПоложение = 2;     
		ВертикальноеПоложение	= 3;  
		Контроль				= 4;
		ВидРамкиГоризонт		= 0;
		ВидРамкиВертикаль		= 0;
		ЦветФона				= 255;		
	Иначе 
		РазмерШрифта			= 9;
		Полужирный				= 0;
		ВысотаСтроки			= "";        
		Если ТипЗначения(стрЗначение) = 1 Тогда 
			Если СокрЛП(ШиринаСтолбца) = "" Тогда ШиринаСтолбца = 12 КонецЕсли;
			ГоризонтальноеПоложение = 2;
			Если стрЗначение = 0 Тогда стрЗначение = ""	КонецЕсли;
		Иначе 
			Если (СокрЛП(ШиринаСтолбца) = "") И (стрЗначение <> "") Тогда ШиринаСтолбца = 20 КонецЕсли;
			ГоризонтальноеПоложение = 1;						
		КонецЕсли;		
		ВертикальноеПоложение	= 3;  
		Контроль				= 4;
		ВидРамкиГоризонт		= 2;
		ВидРамкиВертикаль		= 6;
		ЦветФона				= 255;
	КонецЕсли; 
	ТекОбласть = Таб.Область(НомСтр, НомКол);		
	ТекОбласть.Расшифровка(Док);
	ТекОбласть.Текст = СокрЛП(стрЗначение);	
	ТекОбласть.РазмерШрифта(РазмерШрифта);
	ТекОбласть.Полужирный(Полужирный);
	ТекОбласть.ГоризонтальноеПоложение(ГоризонтальноеПоложение);
	ТекОбласть.ВертикальноеПоложение(ВертикальноеПоложение);
	ТекОбласть.Контроль(Контроль);
	ТекОбласть.РамкаОбвести(ВидРамкиВертикаль, ВидРамкиГоризонт, ВидРамкиВертикаль, ВидРамкиГоризонт);  
	ТекОбласть.ВысотаСтроки(ВысотаСтроки);
	ТекОбласть.ШиринаСтолбца(ШиринаСтолбца);
	ТекОбласть.ЦветФона(ЦветФона, ЦветФона, ЦветФона);
КонецПроцедуры

Процедура Обновить()
	Таблица.Очистить();
    Запрос();
	Таблица.ИсходнаяТаблица("Таблица1");
	Таблица.ВывестиСекцию("Заг");
    Сч = 2;
	ФормТабГрафы.ВыбратьСтроки();
	Пока ФормТабГрафы.ПолучитьСтроку() = 1 Цикл
		Если СокрЛП(ФормТабГрафы.ФлВкл) = "" Тогда Продолжить КонецЕсли;
		ИденКолонки = ФормТабГрафы.Графа;
		ПредКолонки = ФормТабГрафы.ПредГрафы;
		Ширина		= ФормТабГрафы.Ширина;
		Если СокрЛП(ФормТабГрафы.Функция) <> "" Тогда 
			ТипКолонки = "Число";						
		Иначе 
			ТипКолонки = "";						
		КонецЕсли;
		гТабВыборка.НоваяКолонка(ИденКолонки, ТипКолонки, , , ПредКолонки);	
		ВывестиОбласть(Таблица, 1, Сч, ПредКолонки, , 1, Ширина);
		Сч = Сч + 1;
	КонецЦикла;
		
	Если ФлСортировки  = 1 Тогда 		
	  	Состояние("Заполняется таблица данных...");
		гТабВыборка.НоваяКолонка("Статус", "Строка", 8);
		гТабВыборка.ВыбратьСтроки();
		Пока гТабВыборка.ПолучитьСтроку() = 1 Цикл
			НомерСтроки = гТабВыборка.НомерСтроки;
			Док			= гТабВыборка.Док;
			Если Док.Вид() = "Операция" Тогда
				Если Док.ПометкаУдаления() = 1 Тогда
					гТабВыборка.Статус = "ОперУдал";
				ИначеЕсли Док.Операция.ВключитьПроводки() = 0 Тогда
				    гТабВыборка.Статус = "ОперВыкл";
				Иначе
					гТабВыборка.Статус = "ОперВкл";
				КонецЕсли;			
			ИначеЕсли Док.ПометкаУдаления() = 1 Тогда
				гТабВыборка.Статус = "Удален";
			ИначеЕсли Док.Проведен() = 0 Тогда
				гТабВыборка.Статус = "Записан";
			ИначеЕсли СокрЛП(Метаданные.Документ(Док.Вид()).ОперативныйУчет) = "0" Тогда			
				гТабВыборка.Статус = "БухДок";
			Иначе
				гТабВыборка.Статус = "Проведен";
			КонецЕсли;			
			ФормТабГрафы.ВыбратьСтроки();
			Пока ФормТабГрафы.ПолучитьСтроку() = 1 Цикл
				Если СокрЛП(ФормТабГрафы.ФлВкл) = "" Тогда Продолжить КонецЕсли;
				ИденКолонки = ФормТабГрафы.Графа;
				ЗначЯчейки  = ЗначениеГрафыДляДокумента(Док, ИденКолонки);
				Если (ЗначЯчейки = "Пусто") Или (ЗначЯчейки = 0) Тогда ЗначЯчейки = "" КонецЕсли;
				гТабВыборка.УстановитьЗначение(НомерСтроки, ИденКолонки, ЗначЯчейки);
			КонецЦикла;		 
		КонецЦикла;
	  	Состояние("Выполняется сортировка...");
		СтрСортировки  = "";
		ФормТабГрафы.ВыбратьСтроки();
		Пока ФормТабГрафы.ПолучитьСтроку() = 1 Цикл
			Если СокрЛП(ФормТабГрафы.ФлВкл) = "" Тогда Продолжить КонецЕсли;
			ИденКолонки = ФормТабГрафы.Графа;
			Если СокрЛП(ФормТабГрафы.Порядок) = "По возрастанию" Тогда 
				СтрНаправление = "+";
			ИначеЕсли СокрЛП(ФормТабГрафы.Порядок) = "По убыванию" Тогда 
				СтрНаправление = "-";
			Иначе
				Продолжить;
			КонецЕсли;		
			СтрСортировки = СтрСортировки + ИденКолонки + СтрНаправление + ",";
		КонецЦикла;
		СтрСортировки = Лев(СокрЛП(СтрСортировки), СтрДлина(СокрЛП(СтрСортировки))-1);	
		гТабВыборка.Сортировать(СтрСортировки);
	    Для Сч = 1 По гТабВыборка.КоличествоСтрок() Цикл
	   		Док		   = гТабВыборка.ПолучитьЗначение(Сч, "Док");
	   		ИмяСекции  = гТабВыборка.ПолучитьЗначение(Сч, "Статус");
	   		Таблица.ВывестиСекцию(ИмяСекции);   		
	   		НомКолонки = 2;
			ФормТабГрафы.ВыбратьСтроки();
			Пока ФормТабГрафы.ПолучитьСтроку() = 1 Цикл
				Если СокрЛП(ФормТабГрафы.ФлВкл) = "" Тогда Продолжить КонецЕсли;
				ИденКолонки = ФормТабГрафы.Графа;
				Ширина		= ФормТабГрафы.Ширина;
				ЗначКолонки = гТабВыборка.ПолучитьЗначение(Сч, ИденКолонки);			
				ВывестиОбласть(Таблица, Сч+1, НомКолонки, ЗначКолонки, Док, , Ширина);
				НомКолонки = НомКолонки + 1;
			КонецЦикла;
			Если Сч % 10 = 0 Тогда 
				Состояние("Обработано " + Сч + " документов");
			КонецЕсли;			
		КонецЦикла;			
	Иначе		
	    Для Сч = 1 По гТабВыборка.КоличествоСтрок() Цикл
			гТабВыборка.ПолучитьСтрокуПоНомеру(Сч);
			Док			= гТабВыборка.Док;			
			Если Док.Вид() = "Операция" Тогда
				Если Док.ПометкаУдаления() = 1 Тогда
					ИмяСекции = "ОперУдал";
				ИначеЕсли Док.Операция.ВключитьПроводки() = 0 Тогда
				    ИмяСекции = "ОперВыкл";
				Иначе
					ИмяСекции = "ОперВкл";
				КонецЕсли;			
			ИначеЕсли Док.ПометкаУдаления() = 1 Тогда
				ИмяСекции = "Удален";
			ИначеЕсли Док.Проведен() = 0 Тогда
				ИмяСекции = "Записан";
			ИначеЕсли СокрЛП(Метаданные.Документ(Док.Вид()).ОперативныйУчет) = "0" Тогда			
				ИмяСекции = "БухДок";
			Иначе
				ИмяСекции = "Проведен";
			КонецЕсли;
	   		Таблица.ВывестиСекцию(ИмяСекции);   		
	   		НомКолонки = 2;			
			ФормТабГрафы.ВыбратьСтроки();
			Пока ФормТабГрафы.ПолучитьСтроку() = 1 Цикл
				Если СокрЛП(ФормТабГрафы.ФлВкл) = "" Тогда Продолжить КонецЕсли;
				ИденКолонки = ФормТабГрафы.Графа;
				Ширина		= ФормТабГрафы.Ширина;
				ЗначЯчейки  = ЗначениеГрафыДляДокумента(Док, ИденКолонки);
				Если (ЗначЯчейки = "Пусто") Или (ЗначЯчейки = 0) Тогда ЗначЯчейки = "" КонецЕсли;
				Если ФормТабГрафы.Функция <> "" Тогда 
					гТабВыборка.УстановитьЗначение(Сч, ИденКолонки, ЗначЯчейки);				
				КонецЕсли;				
				ВывестиОбласть(Таблица, Сч+1, НомКолонки, ЗначЯчейки, Док, , Ширина);
				НомКолонки = НомКолонки + 1;				
			КонецЦикла;
			Если Сч % 10 = 0 Тогда 
				Состояние("Обработано " + Сч + " документов");
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	
	Если гТабВыборка.КоличествоСтрок() > 0 Тогда
		КолвоДок = гТабВыборка.КоличествоСтрок();
		НомСтрИтогов = КолвоДок + 2;
		Таблица.ВывестиСекцию("Итоги");
		НомКолонки = 1;
		ФормТабГрафы.ВыбратьСтроки();
		Пока ФормТабГрафы.ПолучитьСтроку() = 1 Цикл			
			Если СокрЛП(ФормТабГрафы.ФлВкл)   = "" Тогда Продолжить КонецЕсли;
			НомКолонки = НомКолонки + 1;
			Если СокрЛП(ФормТабГрафы.Функция) = "" Тогда Продолжить КонецЕсли;			
			ИденКолонки = СокрЛП(ФормТабГрафы.Графа);
			Ширина		= ФормТабГрафы.Ширина;
			Состояние("Расчет итогов");			
			Если СокрЛП(ФормТабГрафы.Функция) = "Сумма" Тогда
				ВывестиОбласть(Таблица, НомСтрИтогов, НомКолонки, гТабВыборка.Итог(ИденКолонки), , 2, Ширина);
			ИначеЕсли СокрЛП(ФормТабГрафы.Функция) = "Среднее" Тогда
				ВывестиОбласть(Таблица, НомСтрИтогов, НомКолонки, Окр(гТабВыборка.Итог(ИденКолонки) / (НомСтрИтогов - 2), 2, 1), , 2, Ширина);
			ИначеЕсли СокрЛП(ФормТабГрафы.Функция) = "Максимум" Тогда
				сзМакс = СоздатьОбъект("СписокЗначений");
				гТабВыборка.Выгрузить(сзМакс, 1, НомСтрИтогов-2, ИденКолонки);
				сзМакс.Сортировать(1);
				ВывестиОбласть(Таблица, НомСтрИтогов, НомКолонки, сзМакс.ПолучитьЗначение(1), , 2, Ширина);
			ИначеЕсли СокрЛП(ФормТабГрафы.Функция) = "Минимум" Тогда
				сзМакс = СоздатьОбъект("СписокЗначений");
				гТабВыборка.Выгрузить(сзМакс, 1, НомСтрИтогов-2, ИденКолонки);
				сзМакс.Сортировать(0);
				ВывестиОбласть(Таблица, НомСтрИтогов, НомКолонки, сзМакс.ПолучитьЗначение(1), , 2, Ширина);
			КонецЕсли;		
		КонецЦикла;		 
	КонецЕсли; 

	Таблица.Показать();	
КонецПроцедуры

Процедура ЗаписьВарианта(ИмяВарианта) Далее

Процедура Вверх()
	Поз = ФормТабГрафы.ТекущаяСтрока();
	Если Не(Поз = 1) Тогда 
		ФормТабГрафы.СдвинутьСтроку(- 1, Поз );
		ФормТабГрафы.ТекущаяСтрока(Поз - 1);
	Иначе
		ФормТабГрафы.СдвинутьСтроку(ФормТабГрафы.КоличествоСтрок(), Поз);
		ФормТабГрафы.ТекущаяСтрока(ФормТабГрафы.КоличествоСтрок());
	КонецЕсли;	
КонецПроцедуры

Процедура Вниз()
	Поз = ФормТабГрафы.ТекущаяСтрока();
	Если Не(Поз = ФормТабГрафы.КоличествоСтрок()) Тогда 
		ФормТабГрафы.СдвинутьСтроку(1, Поз);
		ФормТабГрафы.ТекущаяСтрока(Поз + 1);
	Иначе
		ФормТабГрафы.СдвинутьСтроку(- ФормТабГрафы.КоличествоСтрок(), Поз);
		ФормТабГрафы.ТекущаяСтрока(1);
	КонецЕсли;    
КонецПроцедуры

Процедура ПриИзменВключения()
	Если ВклПомеч=3 Тогда
		ВклПроведенныеВсе=3;
		Форма.ВклПроведенныеВсе.Доступность(0);
		Форма.ВклПроведенныеПров.Доступность(0);
		Форма.ВклПроведенныеНеПров.Доступность(0);
	Иначе
		Форма.ВклПроведенныеВсе.Доступность(1);
		Форма.ВклПроведенныеПров.Доступность(1);
		Форма.ВклПроведенныеНеПров.Доступность(1);
	КонецЕсли;
КонецПроцедуры

Процедура ПриВклСортировки()
	Если ФлСортировки = 1 Тогда 
		ФормТабГрафы.ВидимостьКолонки("Порядок", 1);
	Иначе 
		ФормТабГрафы.ВидимостьКолонки("Порядок", 0);					
	КонецЕсли;    
КонецПроцедуры

Процедура ПриВыбореФлагаИнтервала()
    Если флИнтервалЗадан = 0 Тогда 
		Форма.ВыбПериода.Доступность(0);
		Форма.ФормДатаНач.Доступность(0);
		Форма.ФормДатаКон.Доступность(0);
    Иначе 
		Форма.ВыбПериода.Доступность(1);
		Форма.ФормДатаНач.Доступность(1);
		Форма.ФормДатаКон.Доступность(1);    				
    КонецЕсли; 
КонецПроцедуры

Функция ВозможностьИтогов(ИденГрафы, тзГрафа)
	Если (СокрЛП(ИденГрафы) = "ДатаДок") Или
		 (СокрЛП(ИденГрафы) = "ВремяДок") Или
		 (СокрЛП(ИденГрафы) = "ВидДок") Или
		 (СокрЛП(ИденГрафы) = "НомерДок") Тогда 
		Возврат 0;
	КонецЕсли;	
	ФлИтога = 1;
	тзГрафа.ВыбратьСтроки();
	Пока тзГрафа.ПолучитьСтроку() = 1 Цикл			
		Если СокрЛП(тзГрафа.Рекв1) = "" Тогда Продолжить КонецЕсли;
		РеквМД = Метаданные.ОбщийРеквизитДокумента(тзГрафа.Рекв1);
		Если РеквМД.Выбран() = 0 Тогда 
			РеквМД = Метаданные.Документ(тзГрафа.ИденДок).РеквизитШапки(тзГрафа.Рекв1);
			Если РеквМД.Выбран() = 0 Тогда
				РеквМД = Метаданные.Документ(тзГрафа.ИденДок).РеквизитТабличнойЧасти(тзГрафа.Рекв1);
				Если РеквМД.Выбран() = 0 Тогда Возврат 0 КонецЕсли;
			КонецЕсли;
		Иначе
			Возврат 0;
		КонецЕсли;		
		Если РеквМД.Тип <> "Число" Тогда 
			Возврат 0;
		КонецЕсли;
	КонецЦикла;
	Возврат 1;
КонецФункции

Процедура ИзменитьГрафу(НомТекСтр) Далее 

Процедура ВыборГрафы(НомСтр)
	Если НомСтр = 0 Тогда Возврат КонецЕсли;    
	ФормТабГрафы.ПолучитьСтрокуПоНомеру(НомСтр);
	Если ФормТабГрафы.ТекущаяКолонка() = "ФлВкл" Тогда 
		Если СокрЛП(ФормТабГрафы.ФлВкл) = "" Тогда 
			ФормТабГрафы.ФлВкл = "+";									
		Иначе 
			ФормТабГрафы.ФлВкл = "";				
		КонецЕсли;			
	ИначеЕсли ФормТабГрафы.ТекущаяКолонка() = "Функция" Тогда
		Если ВозможностьИтогов(ФормТабГрафы.Графа, ФормТабГрафы.тзРеквизитов) = 0 Тогда Возврат КонецЕсли;
		Зн  = "";
		Поз = "";
		Если гФункции.ВыбратьЗначение(Зн, , Поз, , 1) = 1 Тогда 
			ФормТабГрафы.Функция = Зн;
		Иначе 
			Возврат;				
		КонецЕсли;	
	ИначеЕсли ФормТабГрафы.ТекущаяКолонка() = "Порядок" Тогда
		сзПорядок = СоздатьОбъект("СписокЗначений");
		сзПорядок.ДобавитьЗначение("По возрастанию");
		сзПорядок.ДобавитьЗначение("По убыванию");
		сзПорядок.ДобавитьЗначение("Не упорядочивать");		
		Зн  = "";
		Поз = "";
		Если сзПорядок.ВыбратьЗначение(Зн, , Поз, , 1) = 1 Тогда 
			ФормТабГрафы.Порядок = Зн;
		Иначе 
			Возврат;				
		КонецЕсли;			
	ИначеЕсли ФормТабГрафы.ТекущаяКолонка() = "ПредГрафы" Тогда
		ИзменитьГрафу(НомСтр);
	ИначеЕсли ФормТабГрафы.ТекущаяКолонка() = "Ширина" Тогда
		чШирина = ФормТабГрафы.Ширина;
		Если ВвестиЧисло(чШирина, "Введите ширину колонки (в символах)", 2, 0) = 1 Тогда 
			ФормТабГрафы.Ширина = чШирина;						
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СоставДокументов()
    сзВсехДокументов = СоздатьОбъект("СписокЗначений");
	Для Сч = 1 По Метаданные.Документ() Цикл      
		ИденМД = Метаданные.Документ(Сч).Идентификатор;
		ПредМД = Метаданные.Документ(Сч).Представление();		
		сзВсехДокументов.ДобавитьЗначение(ИденМД, ПредМД);						
		Если ФормДокументы.Принадлежит(ИденМД) = 1 Тогда 
			сзВсехДокументов.Пометка(сзВсехДокументов.РазмерСписка(), 1);
		Иначе 
			сзВсехДокументов.Пометка(сзВсехДокументов.РазмерСписка(), 0);						
		КонецЕсли;		
	КонецЦикла;
	Зн = "";
	Если сзВсехДокументов.ОтметитьЗначения(Зн, "Отметьте нужные виды документов") = 0 Тогда 
		Возврат;			
	КонецЕсли;
	ФормДокументы.УдалитьВсе();
	Для Сч  = 1 По сзВсехДокументов.РазмерСписка() Цикл		
	    Если сзВсехДокументов.Пометка(Сч) = 0 Тогда 
			Продолжить 
		Иначе
			Пред = "";
			ФормДокументы.ДобавитьЗначение(сзВсехДокументов.ПолучитьЗначение(Сч, Пред), Пред);
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

Процедура УдалитьГрафу(НомСтр=0)	
	Если НомСтр = 0 Тогда
		НомСтр = ФормТабГрафы.ТекущаяСтрока();
	КонецЕсли;
    ФормТабГрафы.УдалитьСтроку(НомСтр);	
КонецПроцедуры

Процедура ЗаполнитьВидыУсловий()
	гВидыУсловий.УдалитьВсе();
	ФормТабГрафы.ВыбратьСтроки();
	Пока ФормТабГрафы.ПолучитьСтроку() = 1 Цикл
		ПредГрафы = ФормТабГрафы.ПредГрафы;
		ИденГрафы = ФормТабГрафы.Графа;
		Если (СокрЛП(ИденГрафы) = "ДатаДок") Или
			 (СокрЛП(ИденГрафы) = "ВремяДок") Или
			 (СокрЛП(ИденГрафы) = "ВидДок") Или
			 (СокрЛП(ИденГрафы) = "НомерДок") Тогда 
			Продолжить;						
		КонецЕсли;
		Длина		   = 0;
		Точность	   = 0;		
		ФлРеквТабЧасти = 0;
		ФормТабГрафы.ТипГрафы = ТипГрафы(ИденГрафы, Длина, Точность, ФлРеквТабЧасти, ФормТабГрафы.тзРеквизитов, 1);
		ФормТабГрафы.Длина			= Длина;
		ФормТабГрафы.Точность		= Точность;		
		ФормТабГрафы.ФлРеквТабЧасти = ФлРеквТабЧасти;		
		Если ФормТабГрафы.ТипГрафы <> "" Тогда 
			гВидыУсловий.ДобавитьЗначение(СокрЛП(ИденГрафы), "для графы: " + ПредГрафы);
		КонецЕсли;			
	КонецЦикла;

	Для Сч = 1 По ФормДокументы.РазмерСписка() Цикл
		ПредДок = "";
		ИденДок = ФормДокументы.ПолучитьЗначение(Сч, ПредДок);
		гВидыУсловий.ДобавитьЗначение(СокрЛП(ИденДок), "для документа: " + ПредДок);	
	КонецЦикла;
	Если гВидыУсловий.РазмерСписка() > 0 Тогда гВидыУсловий.ТекущаяСтрока(1) КонецЕсли;
КонецПроцедуры

Процедура ДобавитьГрафу(НомТекСтр)
	Перем СтрИмяДиалога;
	Если НомТекСтр > ФормТабГрафы.КоличествоСтрок() Тогда
		НомТекСтр = 0;
	КонецЕсли;
	гСписокПарам = СоздатьОбъект("СписокЗначений");	
	СтрИмяДиалога = "DlgSelec.ert";
	РасположениеФайла(гСтрПуть, гИмяФайла);	
        
	гСписокПарам.ДобавитьЗначение(ФормДокументы, "сзДокументов");
	Если НомТекСтр > 0 Тогда
		ФормТабГрафы.ПолучитьСтрокуПоНомеру(НомТекСтр);
		ПредГрафы = ФормТабГрафы.ПредГрафы;
		ИденГрафы = ФормТабГрафы.Графа;
		Порядок	  = ФормТабГрафы.Порядок;
		Итог	  = ФормТабГрафы.Функция;
		Если СокрЛП(ФормТабГрафы.ФлВкл) = "+" Тогда 
			ФлВыводить = 1;
		Иначе 
			ФлВыводить = 0;
		КонецЕсли;
		гСписокПарам.ДобавитьЗначение(0, "ФлНовой");
		гСписокПарам.ДобавитьЗначение(ИденГрафы, "ИденГрафы");
		гСписокПарам.ДобавитьЗначение(ПредГрафы, "ПредГрафы");
		гСписокПарам.ДобавитьЗначение(ФормТабГрафы.тзРеквизитов, "ЗначГрафы");
		Ширина = ФормТабГрафы.Ширина;
	Иначе
		Порядок	   = "По возрастанию";
		Итог	   = "";
		ФлВыводить = 1;
		гСписокПарам.ДобавитьЗначение(1, "ФлНовой");
		Сч	   = 1;
		НомСтр = "";
		ИденНовой = "Графа"+Строка(Сч);		
		Пока ФормТабГрафы.НайтиЗначение(СокрЛП(ИденНовой), НомСтр, "Графа") = 1 Цикл
		    Сч = Сч + 1;
			ИденНовой = СокрЛП("Графа"+Строка(Сч));
			НомСтр = "";
		КонецЦикла;
		гСписокПарам.ДобавитьЗначение(ИденНовой, "ИденГрафы");	
		Ширина = 20;
	КонецЕсли;
	гСписокПарам.ДобавитьЗначение(Порядок, "Порядок");
	гСписокПарам.ДобавитьЗначение(Итог, "Итог");
	гСписокПарам.ДобавитьЗначение(ФлВыводить, "ФлВыводить");
	гСписокПарам.ДобавитьЗначение(ФлСортировки, "ФлСортировки");
	гСписокПарам.ДобавитьЗначение(Ширина, "Ширина");
	ПеремКонт = гСписокПарам;
    ОткрытьФормуМодально("Отчет", ПеремКонт, гСтрПуть + СтрИмяДиалога) ;
	
	Если ПустоеЗначение(ПеремКонт) = 1 Тогда
		Возврат;
	КонецЕсли;
	Если ПеремКонт.РазмерСписка() = 0 Тогда
		Возврат;
	КонецЕсли;
	                  
	Если НомТекСтр > 0 Тогда 
		УдалитьГрафу(НомТекСтр);
	Иначе
		НомТекСтр = ФормТабГрафы.КоличествоСтрок() + 1;
	КонецЕсли; 
	ИденГрафы = СокрЛП(ПеремКонт.Получить("ИденГрафы"));
	ПредГрафы = СокрЛП(ПеремКонт.Получить("ПредГрафы"));
	Порядок   = СокрЛП(ПеремКонт.Получить("Порядок"));
	Итог      = СокрЛП(ПеремКонт.Получить("Итог"));
	ФлВкл     = ПеремКонт.Получить("ФлВыводить");
	Ширина    = ПеремКонт.Получить("Ширина");
	тзГрафа	  = ПеремКонт.Получить("ЗначГрафы");
	    
	гТабГрафа.УдалитьСтроки();
	тзГрафа.ВыбратьСтроки();
	Пока тзГрафа.ПолучитьСтроку() = 1 Цикл
		Если СокрЛП(тзГрафа.ИденРекв1) = "" Тогда Продолжить КонецЕсли;
		гТабГрафа.НоваяСтрока();
		гТабГрафа.ИденДок = СокрЛП(тзГрафа.ИденДок);
		гТабГрафа.Рекв1   = СокрЛП(тзГрафа.ИденРекв1);
		гТабГрафа.Знак1   = СокрЛП(тзГрафа.Знак1);
		гТабГрафа.Рекв2   = СокрЛП(тзГрафа.ИденРекв2);
		гТабГрафа.Знак2   = СокрЛП(тзГрафа.Знак2);
		гТабГрафа.Рекв3   =	СокрЛП(тзГрафа.ИденРекв3);
	КонецЦикла;
	Длина	   	   = 0;
	Точность  	   = 0;
	ФлРеквТабЧасти = 0;
	ФормТабГрафы.ТипГрафы		= ТипГрафы(ИденГрафы, Длина, Точность, ФлРеквТабЧасти, гТабГрафа, 1);
	
	ФормТабГрафы.НоваяСтрока();
	ФормТабГрафы.тзРеквизитов = СоздатьОбъект("ТаблицаЗначений");
	ФормТабГрафы.тзРеквизитов.Загрузить(гТабГрафа);
	ФормТабГрафы.ФлВкл			= ?(ФлВкл = 1, "+", "");
	ФормТабГрафы.Графа			= ИденГрафы;
	ФормТабГрафы.ПредГрафы		= ПредГрафы;
	ФормТабГрафы.Порядок		= Порядок;
	ФормТабГрафы.Функция		= Итог;	
	ФормТабГрафы.Ширина			= Ширина;	
	ФормТабГрафы.Длина	   		= Длина;
	ФормТабГрафы.Точность  		= Точность;
	ФормТабГрафы.ФлРеквТабЧасти = ФлРеквТабЧасти;
	
	ФормТабГрафы.СдвинутьСтроку(НомТекСтр - ФормТабГрафы.КоличествоСтрок());	
	ФормТабГрафы.ТекущаяСтрока(НомТекСтр);
	ЗаполнитьВидыУсловий();
КонецПроцедуры

Процедура ИзменитьГрафу(НомТекСтр)
	Если НомТекСтр > 0 Тогда 
		ИденГрафы = ФормТабГрафы.ПолучитьЗначение(НомТекСтр, "Графа");
		Если (ИденГрафы = "ДатаДок") Или
	         (ИденГрафы = "ВремяДок") Или
			 (ИденГрафы = "ВидДок") Или
			 (ИденГрафы = "НомерДок") Тогда 
			Предупреждение("Нельзя изменять состав предопределенных граф!");						
			Возврат;
		Иначе 
			ДобавитьГрафу(НомТекСтр);				
		КонецЕсли;		
    КонецЕсли;
КонецПроцедуры

Процедура ВосстановитьВариант(НаимВарианта) Далее

Процедура ПриВыбореВидаЖурнала(ИденЖурнала="", ПредЖурнала="")
	Перем ИденПредопГрафы[4];
	Перем ПредПредопГрафы[4];
	Перем ШиринаПредопГрафы[4];
	Если ИденЖурнала="" Тогда 
		ПредЖурнала = "";
		гВидЖурнала = ФормВидЖурнала.ПолучитьЗначение(ФормВидЖурнала.ТекущаяСтрока(), ПредЖурнала);
	Иначе 
		гВидЖурнала = ИденЖурнала;
	КонецЕсли;

	Если гВидЖурнала <> гВидЖурналаПрежн Тогда 
		Если СокрЛП(гВидЖурналаПрежн) <> "" Тогда ЗаписьВарианта(гВидЖурналаПрежн)	КонецЕсли;		
		ТабУсловия.УдалитьСтроки();
		ФормДокументы.УдалитьВсе();
		ФормТабГрафы.УдалитьСтроки();
		гВидЖурналаПрежн = гВидЖурнала;
	Иначе
		Возврат;	
	КонецЕсли;
	
	Если ПустоеЗначение(гСпВариантов.Получить(гВидЖурнала)) = 0 Тогда 
		ВосстановитьВариант(гВидЖурнала);
		ПриИзменВключения();
		ПриВклСортировки();
		ЗаполнитьВидыУсловий();
		Возврат;
	КонецЕсли;	

	флСортировки = 0;	
	ПриВклСортировки();
	
	Если Метаданные.Журнал(гВидЖурнала).ТипЖурнала = "Общий" Тогда 
		Для Сч = 1 По Метаданные.Документ() Цикл      
			ИденМД = Метаданные.Документ(Сч).Идентификатор;
			ПредМД = Метаданные.Документ(Сч).Представление();
			ФормДокументы.ДобавитьЗначение(ИденМД, ПредМД);
			ФормДокументы.Пометка(ФормДокументы.РазмерСписка(), 1);
		КонецЦикла;					
	Иначе 
		Для Сч = 1 По Метаданные.Документ() Цикл      
			Если СокрЛП(Метаданные.Документ(Сч).Журнал) = СокрЛП(ПредЖурнала) Тогда 
				ИденМД = Метаданные.Документ(Сч).Идентификатор;
				ПредМД = Метаданные.Документ(Сч).Представление();
				ФормДокументы.ДобавитьЗначение(ИденМД, ПредМД);
				ФормДокументы.Пометка(ФормДокументы.РазмерСписка(), 1);
			КонецЕсли;
		КонецЦикла;					
	КонецЕсли;

	ИденПредопГрафы[1]   = "ДатаДок"; 
	ПредПредопГрафы[1] 	 = "Дата";
	ШиринаПредопГрафы[1] = 10;
	ИденПредопГрафы[2]   = "ВремяДок"; 
	ПредПредопГрафы[2]   = "Время";
	ШиринаПредопГрафы[2] = 9;
	ИденПредопГрафы[3]   = "ВидДок"; 
	ПредПредопГрафы[3]   = "Документ";
	ШиринаПредопГрафы[3] = 20;
	ИденПредопГрафы[4]   = "НомерДок"; 
	ПредПредопГрафы[4]   = "Номер";
	ШиринаПредопГрафы[4] = 12;
	                           
	Для Сч = 1 По 4 Цикл
		ФормТабГрафы.НоваяСтрока();
		ФормТабГрафы.ФлВкл     = "+";
		ФормТабГрафы.Графа     = ИденПредопГрафы[Сч];
		ФормТабГрафы.ПредГрафы = ПредПредопГрафы[Сч];
		ФормТабГрафы.Порядок   = "Не упорядочивать";
		ФормТабГрафы.Функция   = "";
		ФормТабГрафы.Ширина	   = ШиринаПредопГрафы[Сч];
	КонецЦикла;
	
	Если Метаданные.Журнал(гВидЖурнала).ТипЖурнала = "Общий" Тогда 
		Для Сч = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл
			ИденМД = Метаданные.ОбщийРеквизитДокумента(Сч).Идентификатор;
			ПредМД = Метаданные.ОбщийРеквизитДокумента(Сч).Представление();
			ФормТабГрафы.НоваяСтрока();
			ФормТабГрафы.ФлВкл     = "+";
			ФормТабГрафы.Графа     = ИденМД;
			ФормТабГрафы.ПредГрафы = ПредМД;
			ФормТабГрафы.Порядок   = "Не упорядочивать";
			гТабГрафа.УдалитьСтроки();
			Для СчВидовДок = 1 По ФормДокументы.РазмерСписка() Цикл			
				гТабГрафа.НоваяСтрока();
				гТабГрафа.ИденДок = ФормДокументы.ПолучитьЗначение(СчВидовДок);
				гТабГрафа.Рекв1   = ИденМД;
			КонецЦикла;
			ФормТабГрафы.тзРеквизитов = СоздатьОбъект("ТаблицаЗначений");
			ФормТабГрафы.тзРеквизитов.Загрузить(гТабГрафа);
		КонецЦикла;					
	КонецЕсли; 

	Для Сч = 1 По Метаданные.Журнал(гВидЖурнала).Графа() Цикл
		ГрафаМД = Метаданные.Журнал(гВидЖурнала).Графа(Сч);
		ИденМД = ГрафаМД.Идентификатор;
		ПредМД = ГрафаМД.Представление();
		ФормТабГрафы.НоваяСтрока();
		ФормТабГрафы.ФлВкл     = "+";
		ФормТабГрафы.Графа     = ИденМД;
		ФормТабГрафы.ПредГрафы = ПредМД;
		ФормТабГрафы.Порядок   = "Не упорядочивать";
		гТабГрафа.УдалитьСтроки();
		Для СчЗн = 1 По ГрафаМД.Ссылки.Количество() Цикл        
			ИденСсылки = ГрафаМД.Ссылки.Получить(СчЗн).Идентификатор;
			ПолнИден   = ГрафаМД.Ссылки.Получить(СчЗн).ПолныйИдентификатор();			    
			гТабГрафа.НоваяСтрока();
			гТабГрафа.ИденДок = СокрЛП(СтрЗаменить(СтрЗаменить(ПолнИден, "Документ.", ""), "."+ИденСсылки, ""));
			гТабГрафа.Рекв1   = ИденСсылки;
		КонецЦикла;
		ФормТабГрафы.тзРеквизитов = СоздатьОбъект("ТаблицаЗначений");
		ФормТабГрафы.тзРеквизитов.Загрузить(гТабГрафа);
	КонецЦикла;
	ЗаполнитьВидыУсловий();
	гВидЖурнала = ФормВидЖурнала.ПолучитьЗначение(ФормВидЖурнала.ТекущаяСтрока(), ПредЖурнала);
КонецПроцедуры

Процедура ПриВыбореЗакладки(Ном,Значен)
	Если Значен = "Общие" Тогда               
		гЗакладкаСтр = "Общие";
		Форма.ИспользоватьСлой("Общие, Интервал", 2);
		ПриИзменВключения();
	ИначеЕсли Значен = "Состав" Тогда
		гЗакладкаСтр = "Состав";
		Форма.ИспользоватьСлой("Общие, Документы", 2);		
	ИначеЕсли Значен = "Графы" Тогда
		гЗакладкаСтр = "Графы";
		Форма.ИспользоватьСлой("Общие, Графы", 2);
		ПриВклСортировки();		
	ИначеЕсли Значен = "Условия" Тогда
		гЗакладкаСтр = "Условия";
		Форма.ИспользоватьСлой("Общие, Условия", 2);		
	КонецЕсли;
КонецПроцедуры

Процедура ВыбратьУсловие(НомТекСтр) 	
	Перем СтрИмяДиалога, ВидУсловия, ИденОбъекта;

	Если НомТекСтр>ТабУсловия.КоличествоСтрок() Тогда
		НомТекСтр=0;
	КонецЕсли;

	Если (НомТекСтр>0)И(ТабУсловия.ТекущаяКолонка()="ФлВкл") Тогда
		Если  СокрЛП(ТабУсловия.ФлВкл)="" Тогда
			ТабУсловия.ФлВкл="+";
		Иначе
			ТабУсловия.ФлВкл="";
		КонецЕсли;
		Возврат;
	КонецЕсли;

	гСписокПарам=СоздатьОбъект("СписокЗначений");	
	СтрИмяДиалога="DlgQuery.ert";
	РасположениеФайла(гСтрПуть,гИмяФайла);
    
	Если НомТекСтр = 0 Тогда
		ПредВидаУсловия = "";
		Зн  = "";
		Поз = "";
		Если гВидыУсловий.ВыбратьЗначение(Зн, "Выберите графу/док-т для которого определяется условие", Поз, , 0) = 0 Тогда
			Возврат;						
		КонецЕсли;		
		ИденОбъекта = СокрЛП(гВидыУсловий.ПолучитьЗначение(Поз, ПредВидаУсловия));
		Если Найти(ПредВидаУсловия, "для графы:") = 0 Тогда 
			ВидУсловия  = "Документ";
			ИденОбъекта = Метаданные.Документ(ИденОбъекта);			
		Иначе 
			Длина	 = 0;
			Точность = 0;
			ВидУсловия = "Графа";
			ТипГрафы = ТипГрафы(ИденОбъекта, Длина, Точность);
			Если СокрЛП(ТипГрафы) = "" Тогда
				Предупреждение("Графа неизвестного типа!");
				Возврат;
			КонецЕсли;
			гСписокПарам.ДобавитьЗначение(ТипГрафы, "ТипГрафы");
			гСписокПарам.ДобавитьЗначение(Длина, "Длина");
			гСписокПарам.ДобавитьЗначение(Точность, "Точность");
			гСписокПарам.ДобавитьЗначение(ИденОбъекта,"Атрибут");
			гСписокПарам.ДобавитьЗначение(СокрЛП(СтрЗаменить(ПредВидаУсловия, "для графы: ", "")), "Представление");			
			гСписокПарам.ДобавитьЗначение(1, "ВклУсловие");
		КонецЕсли;					
	Иначе
		ВидУсловия  = СокрЛП(ТабУсловия.ВидУсловия);
		ИденОбъекта = ТабУсловия.ИденОбъекта;
		Если СокрЛП(ТабУсловия.ПолучитьЗначение(НомТекСтр,"ФлВкл"))="+" Тогда
			Вкл=1;
		Иначе
			Вкл=0;
		КонецЕсли;
		Если ВидУсловия = "Графа" Тогда 
			Длина	 = 0;
			Точность = 0;
			ТипГрафы = ТипГрафы(ИденОбъекта, Длина, Точность);
			Если СокрЛП(ТипГрафы) = "" Тогда
				Предупреждение("Графа неизвестного типа!");
				Возврат;
			КонецЕсли;
			гСписокПарам.ДобавитьЗначение(ТипГрафы, "ТипГрафы");						
			гСписокПарам.ДобавитьЗначение(Длина, "Длина");
			гСписокПарам.ДобавитьЗначение(Точность, "Точность");			
		КонецЕсли;
		гСписокПарам.ДобавитьЗначение(Вкл,"ВклУсловие");
		гСписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолИдентификатор"),"Атрибут");
		гСписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолПредставление"),"Представление");
		гСписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолУсловие"),"Условие");
		гСписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолЗначение"),"Значение");		
	КонецЕсли; 
	гСписокПарам.ДобавитьЗначение(ВидУсловия, "Режим");			
	гСписокПарам.ДобавитьЗначение(ИденОбъекта,"Объект");
	
	ПеремКонт = гСписокПарам;
    ОткрытьФормуМодально("Обработка.ВыборУсловия",ПеремКонт) ;
	Если ПустоеЗначение(ПеремКонт)=1 Тогда
		Возврат;
	КонецЕсли;
	Если ПеремКонт.РазмерСписка()=0 Тогда
		Возврат;
	КонецЕсли;
	ВыбАтриб=ПеремКонт.Получить("Атрибут");
	Если НомТекСтр=0 Тогда
		ТабУсловия.ВыбратьСтроки();
		Пока ТабУсловия.ПолучитьСтроку()=1  Цикл
	        Если (ВыбАтриб = ТабУсловия.КолИдентификатор) И
				 (ВыбАтриб <> "СубконтоДт") И 
				 (ВыбАтриб <> "СубконтоКт") И
				 (ТабУсловия.ВидУсловия <> "Документ") Тогда
				Предупреждение("Внимание,условие для "+Строка(ВыбАтриб)+" уже определено!");
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если НомТекСтр<=0 Тогда
		ТабУсловия.НоваяСтрока();
	КонецЕсли;
	СтрФл="";
	Если ПеремКонт.Получить("ВклУсловие")=1 Тогда
		СтрФл="+";
	КонецЕсли;
	ТабУсловия.ФлВкл			= СтрФл;
	ТабУсловия.КолИдентификатор = ВыбАтриб;
	ТабУсловия.КолУсловие		= ПеремКонт.Получить("Условие");
	ТабУсловия.КолПредставление = ПеремКонт.Получить("Представление");
	ТабУсловия.КолЗначение 		= ПеремКонт.Получить("Значение");
	ТабУсловия.КолВидСубконто 	= ПеремКонт.Получить("ВидСубконто");
	ТабУсловия.ВидУсловия 		= ВидУсловия;
	ТабУсловия.ИденОбъекта      = ИденОбъекта;
	Если НомТекСтр <= 0 Тогда
		ТабУсловия.ТекущаяСтрока(ТабУсловия.НомерСтроки);
	КонецЕсли;
КонецПроцедуры

Процедура УдалУсловие()
	Если ТабУсловия.ТекущаяСтрока() > 0 Тогда
		ТабУсловия.УдалитьСтроку(ТабУсловия.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Процедура ИзмУсловие()
	Если ТабУсловия.ТекущаяСтрока() > 0 Тогда
		ВыбратьУсловие(ТабУсловия.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры
Процедура СохранитьПараметрыФормы()
	Перем Путь,ИмяФайла;
	Перем СтрПредст;
	РасположениеФайла(Путь,ИмяФайла);
	ПараметрыУстановки	= СоздатьОбъект("СписокЗначений");
	СписВар				= СоздатьОбъект("СписокЗначений");
	ПараметрыУстановки.УдалитьВсе();
	Попытка
		гСпВариантов.Выгрузить(СписВар);
		ПараметрыУстановки.ДобавитьЗначение(СписВар,"СпВариантов");
		ИмяФайла = СокрЛП(КаталогПользователя()) + СокрЛП(Лев(ИмяФайла,СтрДлина(ИмяФайла)-4))+".prm";		
		ЗначениеВФайл(ИмяФайла, ПараметрыУстановки);
	Исключение		
	КонецПопытки;
КонецПроцедуры

Функция ВосстановитьПараметрыФормы()
	Перем Путь,ИмяФайла;
    РасположениеФайла(Путь,ИмяФайла);
	ИмяФайла = СокрЛП(Лев(ИмяФайла,СтрДлина(ИмяФайла)-4))+".prm";
	Если ФС.СуществуетФайл(КаталогПользователя()+ИмяФайла)=0 Тогда
	    Возврат 0;
	КонецЕсли;
	ПараметрыУстановки = СоздатьОбъект("СписокЗначений");
    ЗначениеИзФайла(КаталогПользователя()+ИмяФайла, ПараметрыУстановки);
	ПараметрыУстановки.Получить("СпВариантов").Выгрузить(гСпВариантов);
	Форма.Обновить(1);
	Возврат гСпВариантов.РазмерСписка();
КонецФункции

Процедура СоздатьВариант(ПараметрыУстановки)
	ПараметрыУстановки.УдалитьВсе();
	сзВидовУсловий	  = СоздатьОбъект("СписокЗначений");
	сзДокументов	  = СоздатьОбъект("СписокЗначений");
	тзНастройкаГраф   = СоздатьОбъект("ТаблицаЗначений");
	тзУсловий		  = СоздатьОбъект("ТаблицаЗначений");
	
	гВидыУсловий.Выгрузить(сзВидовУсловий);
	ФормДокументы.Выгрузить(сзДокументов);
	ТабУсловия.Выгрузить(тзУсловий);
	ФормТабГрафы.Выгрузить(тзНастройкаГраф);
	                                  
	тзУсловий.ВыбратьСтроки();
	Пока тзУсловий.ПолучитьСтроку() = 1 Цикл
		Если СокрЛП(тзУсловий.ВидУсловия) = "Документ" Тогда
			ИденМД = тзУсловий.ИденОбъекта.Идентификатор;
			тзУсловий.ИденОбъекта = ИденМД;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыУстановки.ДобавитьЗначение(ФормДатаНач,"ФормДатаНач");
	ПараметрыУстановки.ДобавитьЗначение(ФормДатаКон,"ФормДатаКон");
	ПараметрыУстановки.ДобавитьЗначение(ВклПроведенныеВсе,"ВклПроведенныеВсе");
	ПараметрыУстановки.ДобавитьЗначение(ВклПомеч,"ВклПомеч");
	ПараметрыУстановки.ДобавитьЗначение(флИнтервалЗадан,"флИнтервалЗадан");
	ПараметрыУстановки.ДобавитьЗначение(флСортировки,"флСортировки");
	
	ПараметрыУстановки.ДобавитьЗначение(сзВидовУсловий, "гВидыУсловий");	
	ПараметрыУстановки.ДобавитьЗначение(сзДокументов, "ФормДокументы");
	ПараметрыУстановки.ДобавитьЗначение(тзУсловий, "ТабУсловия");
	ПараметрыУстановки.ДобавитьЗначение(тзНастройкаГраф, "ФормТабГрафы");
КонецПроцедуры

Процедура ВосстановитьВариант(НаимВарианта)
	Перем Стр;	
	СпПарам = гСпВариантов.Получить(НаимВарианта);
	Если НаимВарианта = "СписокЖурналов" Тогда 
		Если ПустоеЗначение(СпПарам) = 1 Тогда
			Для Сч = 1 По Метаданные.Журнал() Цикл
				ИденМД = Метаданные.Журнал(Сч).Идентификатор;
				ПредМД = Метаданные.Журнал(Сч).Представление();
				ФормВидЖурнала.ДобавитьЗначение(ИденМД, ПредМД);
			КонецЦикла;			
			Возврат;
		Иначе
			СпПарам.Получить("ФормВидЖурнала").Выгрузить(ФормВидЖурнала);			
			ФормВидЖурнала.ТекущаяСтрока(СпПарам.Получить("НомСтр"));
			Попытка
			    ПриВыбореВидаЖурнала();
			Исключение
			КонецПопытки;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(СпПарам)=1 Тогда
	   Возврат;
	КонецЕсли;

	ФормДатаНач		  = СпПарам.Получить("ФормДатаНач");
	ФормДатаКон		  = СпПарам.Получить("ФормДатаКон");
	ВклПроведенныеВсе = СпПарам.Получить("ВклПроведенныеВсе");
	флИнтервалЗадан   = СпПарам.Получить("флИнтервалЗадан");	
	ВклПомеч          = СпПарам.Получить("ВклПомеч");
	флСортировки	  = СпПарам.Получить("флСортировки");
	ПриВклСортировки();
	ПриВыбореФлагаИнтервала();
	
	СпПарам.Получить("гВидыУсловий").Выгрузить(гВидыУсловий);
	СпПарам.Получить("ТабУсловия").Выгрузить(ТабУсловия);
	СпПарам.Получить("ФормДокументы").Выгрузить(ФормДокументы);
	СпПарам.Получить("ФормТабГрафы").Выгрузить(ФормТабГрафы);
                                                
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку() = 1 Цикл
		Если СокрЛП(ТабУсловия.ВидУсловия) = "Документ" Тогда
			ОбъектМД = Метаданные.Документ(СокрЛП(ТабУсловия.ИденОбъекта));
			ТабУсловия.ИденОбъекта = ОбъектМД;
		КонецЕсли;
	КонецЦикла;
	
	ТабУсловия.ВидимостьКолонки("КолИдентификатор",0);
	ТабУсловия.ВидимостьКолонки("КолВидСубконто",0);
	ТабУсловия.ВидимостьКолонки("ВидУсловия",0);
	ТабУсловия.ВидимостьКолонки("ИденОбъекта",0);
	
	ФормТабГрафы.ВидимостьКолонки("Графа", 0);
	ФормТабГрафы.ВидимостьКолонки("ТипГрафы", 0);
	ФормТабГрафы.ВидимостьКолонки("Длина", 0);
	ФормТабГрафы.ВидимостьКолонки("Точность", 0);
	ФормТабГрафы.ВидимостьКолонки("ФлРеквТабЧасти", 0);
	ФормТабГрафы.ВидимостьКолонки("тзРеквизитов", 0);
КонецПроцедуры

Процедура ЗаписьВарианта(ИмяВарианта)
	Если СокрЛП(ИмяВарианта)="" Тогда	    
		Возврат;
	КонецЕсли;
	
	Если ИмяВарианта = "СписокЖурналов" Тогда 
		СпПарам=СоздатьОбъект("СписокЗначений");
		СпПарам.ДобавитьЗначение(ФормВидЖурнала, "ФормВидЖурнала");
		СпПарам.ДобавитьЗначение(ФормВидЖурнала.ТекущаяСтрока(), "НомСтр");
		Если ПустоеЗначение(гСпВариантов.Получить(СокрЛП(ИмяВарианта))) = 1 Тогда 
			гСпВариантов.ДобавитьЗначение(СпПарам,СокрЛП(ИмяВарианта));			
		Иначе 
			гСпВариантов.Установить(СокрЛП(ИмяВарианта),СпПарам);			
		КонецЕсли; 
	Иначе                
		СпПарам=гСпВариантов.Получить(СокрЛП(ИмяВарианта));	
		Если ПустоеЗначение(СпПарам) = 1 Тогда
			СпПарам = СоздатьОбъект("СписокЗначений");
			СоздатьВариант(СпПарам);
			гСпВариантов.ДобавитьЗначение(СпПарам,СокрЛП(ИмяВарианта));
		Иначе
			СоздатьВариант(СпПарам);
			гСпВариантов.Установить(СокрЛП(ИмяВарианта),СпПарам);
		КонецЕсли;		
	КонецЕсли; 	
 	
    гСпВариантов.ТекущаяСтрока(гСпВариантов.НайтиЗначение(СпПарам));
	СохранитьПараметрыФормы();
КонецПроцедуры

Процедура УдалитьВариант(ИмяВарианта)
	ТекСпис = гСпВариантов.Получить(СокрЛП(ИмяВарианта));
	Ном		= гСпВариантов.НайтиЗначение(ТекСпис);
	
	ИмяВарианта="";
	Если Ном>0 Тогда
		гСпВариантов.УдалитьЗначение(Ном);
		СохранитьПараметрыФормы();     
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЖурнал()
	ЗаписьВарианта(гВидЖурнала);
	Если ФормВидЖурнала.РазмерСписка() = 0 Тогда 
		Ответ = Вопрос("В списке нет ни одного журнала. Добавить все журналы?", 3);
		Если Ответ = 6 Тогда			
			Для Сч = 1 По Метаданные.Журнал() Цикл
				ИденМД = Метаданные.Журнал(Сч).Идентификатор;
				ПредМД = Метаданные.Журнал(Сч).Представление();
				ФормВидЖурнала.ДобавитьЗначение(ИденМД, ПредМД);
			КонецЦикла;
			ФормВидЖурнала.ТекущаяСтрока(1);
			гВидЖурналаПрежн = "";
			ПриВыбореВидаЖурнала();
			ЗаписьВарианта("СписокЖурналов");
			Возврат;
		ИначеЕсли Ответ = 2 Тогда 
			Возврат;               
		КонецЕсли;					
	КонецЕсли;
    Если ФормВидЖурнала.РазмерСписка() <> 0 Тогда 
		Если Вопрос("Копировать настройки текущего журнала?", 4)  = 6 Тогда 
			Сч	   = 1;
			ИденНового = "Журнал" + Строка(Сч);		
			Пока ФормВидЖурнала.Принадлежит(ИденНового) = 1 Цикл
			    Сч = Сч + 1;
				ИденНового = СокрЛП("Журнал"+Строка(Сч));
			КонецЦикла;
			Пред = "";
			Иден = ФормВидЖурнала.ПолучитьЗначение(ФормВидЖурнала.ТекущаяСтрока(), Пред);			
			Имя = Пред;
			ВвестиСтроку(Имя, "Введите имя нового журнала", 40);
			ФормВидЖурнала.ДобавитьЗначение(ИденНового, СокрЛП(Имя));
			ФормВидЖурнала.ТекущаяСтрока(ФормВидЖурнала.РазмерСписка());
			гВидЖурналаПрежн = ИденНового;
			гВидЖурнала		 = ИденНового;
			ЗаписьВарианта("СписокЖурналов");			
			Возврат;
		КонецЕсли;    				
    КонецЕсли; 
	сзВидовЖурналов = СоздатьОбъект("СписокЗначений");
	Для Сч = 1 По Метаданные.Журнал() Цикл
		ИденМД = Метаданные.Журнал(Сч).Идентификатор;
		ПредМД = Метаданные.Журнал(Сч).Представление();
		сзВидовЖурналов.ДобавитьЗначение(ИденМД, ПредМД);
	КонецЦикла;
	Зн  = "";
	Поз = "";
	Если сзВидовЖурналов.ВыбратьЗначение(Зн, "Выберите журнал", Поз, , 0) = 1 Тогда
		Пред = "";
		Иден = сзВидовЖурналов.ПолучитьЗначение(Поз, Пред);		
		Сч	   = 1;
		ИденНового = "Журнал" + Строка(Сч);		
		Пока ФормВидЖурнала.Принадлежит(ИденНового) = 1 Цикл
		    Сч = Сч + 1;
			ИденНового = СокрЛП("Журнал"+Строка(Сч));
		КонецЦикла;
		Имя = Пред;
		ВвестиСтроку(Имя, "Введите имя нового журнала", 40);
		ФормВидЖурнала.ДобавитьЗначение(ИденНового, СокрЛП(Имя));
		ФормВидЖурнала.ТекущаяСтрока(ФормВидЖурнала.РазмерСписка());
		гВидЖурналаПрежн = "";
		ПриВыбореВидаЖурнала(Иден, Пред);		
		гВидЖурналаПрежн = ИденНового;
		ЗаписьВарианта("СписокЖурналов");
		флИнтервалЗадан = 1;
		ПриВыбореФлагаИнтервала();
	КонецЕсли;	
КонецПроцедуры

Процедура УдалитьЖурнал(НомСтр)
	Если НомСтр = 0 Тогда 
		Если Вопрос("Вы действительно хотите удалить все журналы из списка?", 4)  = 6 Тогда 
			ФормВидЖурнала.УдалитьВсе();
			гСпВариантов.УдалитьВсе();
			ЗаписьВарианта("СписокЖурналов");			
			ТабУсловия.УдалитьСтроки();
			ФормДокументы.УдалитьВсе();
			ФормТабГрафы.УдалитьСтроки();			
		КонецЕсли;
		Возврат;
	КонецЕсли;
	Если Вопрос("Удалить текущий журнал из списка?", 4)  = 6 Тогда 
		УдалитьВариант(гВидЖурнала);
		ФормВидЖурнала.УдалитьЗначение(НомСтр);
		ЗаписьВарианта("СписокЖурналов");
		гВидЖурналаПрежн = "";
		Попытка
			ФормВидЖурнала.ТекущаяСтрока(НомСтр);
			ПриВыбореВидаЖурнала();
		Исключение
		КонецПопытки;
	КонецЕсли;	
КонецПроцедуры

Процедура ПриОткрытии()
	Таблица.Опции(0, 0, 1, 1);
	ВклПомеч 		  = 1;
	ВклПроведенныеВсе = 1;
	ФлСортировки	  = 0;
	ПриВклСортировки();
	гЗакладкаСтр = "Общие";

	Форма.Закладки.УдалитьВсе();
	Форма.Закладки.ДобавитьЗначение("Общие", "Основная");
	Форма.Закладки.ДобавитьЗначение("Состав", "Документы");
	Форма.Закладки.ДобавитьЗначение("Графы", "Графы");
	Форма.Закладки.ДобавитьЗначение("Условия", "Условия");
	Форма.ИспользоватьСлой("Общие, Интервал", 2);
	Если ВосстановитьПараметрыФормы() <> 0 Тогда
		ВосстановитьВариант("СписокЖурналов");
	Иначе
		Для Сч = 1 По Метаданные.Журнал() Цикл
			ИденМД = Метаданные.Журнал(Сч).Идентификатор;
			ПредМД = Метаданные.Журнал(Сч).Представление();
			ФормВидЖурнала.ДобавитьЗначение(ИденМД, ПредМД);
		КонецЦикла;		
		ФормВидЖурнала.ТекущаяСтрока(1);
	КонецЕсли;
	Попытка		
		ПриВыбореВидаЖурнала();
	Исключение
	КонецПопытки;
	
	Таблица.ИсходнаяТаблица("Таблица1");
	Таблица.ВывестиСекцию("Заг");	
	
	ПриВыбореФлагаИнтервала();
	Активизировать("ФормВидЖурнала", 0);
КонецПроцедуры

Процедура ПриЗакрытии()
	ЗаписьВарианта(гВидЖурнала);
	ЗаписьВарианта("СписокЖурналов");	
	СохранитьПараметрыФормы();
КонецПроцедуры

Процедура ОбработкаЯчейкиТаблицы(Зн, Фл, Конт, Ячейка)
	Если СокрЛП(Зн) = "" Тогда
		КолПоз = Найти(Ячейка, "C");
		Стр = Число(Сред(Ячейка, 2, КолПоз-2));
		Кол = Число(Сред(Ячейка, КолПоз+1, СтрДлина(Ячейка)-КолПоз));
		Если (Стр = 1) И (Кол = 1) Тогда 
			Обновить();						
		ИначеЕсли Стр = 1 Тогда
			СчВкл = 0;
			Для Сч = 1 По ФормТабГрафы.КоличествоСтрок() Цикл
				ФормТабГрафы.ПолучитьСтрокуПоНомеру(Сч);
				Если СокрЛП(ФормТабГрафы.ФлВкл) = "" Тогда Продолжить КонецЕсли;
				СчВкл = СчВкл + 1; 
				Если СчВкл = Кол-1 Тогда
					Прервать;								
				КонецЕсли;
			КонецЦикла;
			Попытка
				ИзменитьГрафу(Сч);			    
			Исключение			
			КонецПопытки;			
		КонецЕсли;
	Иначе
		ОткрытьФорму(Зн);
	КонецЕсли;
КонецПроцедуры
Форма.ИспользоватьЗакладки(1);
Форма.КнопкаПоУмолчанию("кнОбновить");
          

гСпВариантов		= СоздатьОбъект("СписокЗначений");
гСписокПарам		= СоздатьОбъект("СписокЗначений");
гФункции			= СоздатьОбъект("СписокЗначений");
гВидыУсловий		= СоздатьОбъект("СписокЗначений");
гВидЖурналаПрежн	= "";    
                                                      
гФункции.ДобавитьЗначение("Сумма");
гФункции.ДобавитьЗначение("Среднее");
гФункции.ДобавитьЗначение("Минимум");
гФункции.ДобавитьЗначение("Максимум");
гФункции.ДобавитьЗначение("", "Без итогов");                          

ТабУсловия.НоваяКолонка("ФлВкл",,3,,"+",2,,);
ТабУсловия.НоваяКолонка("КолПредставление",,12,,"Данные",10);
ТабУсловия.НоваяКолонка("КолУсловие","Строка","3",,"Условие",5);
ТабУсловия.НоваяКолонка("КолЗначение",,,,"Значение",14);
ТабУсловия.НоваяКолонка("КолИдентификатор");
ТабУсловия.НоваяКолонка("КолВидСубконто");
ТабУсловия.НоваяКолонка("ВидУсловия");
ТабУсловия.НоваяКолонка("ИденОбъекта");

ТабУсловия.ВидимостьКолонки("КолИдентификатор",0);
ТабУсловия.ВидимостьКолонки("КолВидСубконто",0);
ТабУсловия.ВидимостьКолонки("ВидУсловия",0);
ТабУсловия.ВидимостьКолонки("ИденОбъекта",0);
                           
ФормТабГрафы.НоваяКолонка("ФлВкл", , , , "+", 2);
ФормТабГрафы.НоваяКолонка("ПредГрафы", , , , "Графа", 10);
ФормТабГрафы.НоваяКолонка("Порядок", , , , "Сортировка", 11);
ФормТабГрафы.НоваяКолонка("Функция", , , , "Итог", 6);
ФормТабГрафы.НоваяКолонка("Ширина", , , , "Ширина", 4);

ФормТабГрафы.НоваяКолонка("Графа");
ФормТабГрафы.НоваяКолонка("ТипГрафы");
ФормТабГрафы.НоваяКолонка("Длина", "Число", 2, 0);
ФормТабГрафы.НоваяКолонка("Точность", "Число", 1, 0);
ФормТабГрафы.НоваяКолонка("ФлРеквТабЧасти", "Число", 1, 0);
ФормТабГрафы.НоваяКолонка("тзРеквизитов");

ФормТабГрафы.ВидимостьКолонки("Графа", 0);
ФормТабГрафы.ВидимостьКолонки("ТипГрафы", 0);
ФормТабГрафы.ВидимостьКолонки("Длина", 0);
ФормТабГрафы.ВидимостьКолонки("Точность", 0);
ФормТабГрафы.ВидимостьКолонки("ФлРеквТабЧасти", 0);
ФормТабГрафы.ВидимостьКолонки("тзРеквизитов", 0);

гТабГрафа = СоздатьОбъект("ТаблицаЗначений");
гТабГрафа.НоваяКолонка("ИденДок");
гТабГрафа.НоваяКолонка("Рекв1");
гТабГрафа.НоваяКолонка("Знак1");
гТабГрафа.НоваяКолонка("Рекв2");
гТабГрафа.НоваяКолонка("Знак2");
гТабГрафа.НоваяКолонка("Рекв3");

флИнтервалЗадан = 1;
ПриВыбореФлагаИнтервала();
ФормДатаНач = РабочаяДата();
ФормДатаКон = РабочаяДата();