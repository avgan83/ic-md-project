Перем Авто,Соединение;
//******************************************************************************
//  ДоступностьЗагрузки()
//
//	Описание:  Осуществляет проверку возможности загрузки курсов валют 
//             Если есть помеченные строки, возвращает 1, если нет - 0
Функция ДоступностьЗагрузки()
	Д=0;
	Для Н=1 По СписокВалют.РазмерСписка() Цикл  
		Д=Д+СписокВалют.Пометка(Н);
		Если Д=1 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Д;
КонецФункции  // ДоступностьЗагрузки      
//******************************************************************************
//  ОткрытьСправочник()
//
//	Описание:  Осуществляет открытие справочника валют
Процедура ОткрытьСправочник()
	Перем Конт;
	ОткрытьФорму("Справочник.Валюты",Конт);
	Конт.АктивизироватьОбъект(СписокВалют.ПолучитьЗначение(СписокВалют.ТекущаяСтрока()));
КонецПроцедуры  // ОткрытьСправочник
//******************************************************************************
//	Установить(Режим="") 
//
//	Параметры: Режим - строка, режим работы: "Все" - отметить все строки
//					   "Сброс" - снять отметку всех строк
//					   "" - инвертировать отметку всех строк
//
//	Описание: Устанавливает, снимает или инвертирует отметки выбора строк 
Процедура Установить(Режим="") 
	Для Н=1 По СписокВалют.РазмерСписка() Цикл
		Если Режим="Все" Тогда
			СписокВалют.Пометка(Н,1);
		ИначеЕсли Режим="Сброс" Тогда
			СписокВалют.Пометка(Н,0); 
		Иначе
			СписокВалют.Пометка(Н,?(СписокВалют.Пометка(Н)=1,0,1)); 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры  //  Установить
//******************************************************************************
//	ОбновитьСписокВалют()
//
//	Описание:  Обновляет список валют (значения курсов и даты курсов)
Процедура ОбновитьСписокВалют()     
	
	Для Н=1 По СписокВалют.РазмерСписка() Цикл  
		Если СписокВалют.Пометка(Н)=1 Тогда
			СписокВалют.УстановитьЗначение(Н,СписокВалют.ПолучитьЗначение(Н),);
			Курсы=СоздатьОбъект("Периодический");    
			Курсы.ИспользоватьОбъект("ТекКурс",СписокВалют.ПолучитьЗначение(Н)); 
			Курсы.ОбратныйПорядок();
			Если Курсы.ВыбратьЗначения()=1 Тогда    
				Курсы.ПолучитьЗначение();
				ДатаЗнач = Курсы.ДатаЗнач; 
			Иначе 
				ДатаЗнач = 0;       
			КонецЕсли;
			СписокВалют.УстановитьЗначение(Н,СписокВалют.ПолучитьЗначение(Н),"     "+СокрЛП(СписокВалют.ПолучитьЗначение(Н).Наименование)+";     на: "+Строка(ДатаЗнач)+"  =  "+Формат(Курсы.Значение,"Ч10.4")); 
			СписокВалют.Пометка(Н,1);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры   //  ОбновитьСписокВалют


Процедура ЗагрузитьКурсыНаДату ( ДатаЗагрузки ) 
	// данные обрабатываются в строке но не в xml изза ряда недуобств связанных с этим (xml только для записанных
	// файлов и в xml нет поиска)
	Стр = "";  
	Попытка                    
		Соединение.Получить ("http://www.bnm.org/md/official_exchange_rates?get_xml=1&date=" + //Формат(ДатаЗагрузки,"Д(0)ДДММГГГГ"), Стр, 2);
		Формат(ДатаЧисло ( ДатаЗагрузки ),"Ч(0)2") + "." + Формат(ДатаМесяц ( ДатаЗагрузки ),"Ч(0)2") + "." + Строка ( ДатаГод ( ДатаЗагрузки )), Стр, 2 );
	Исключение 
		Сообщить("Неудачная попытка соединения.");
		Возврат;
	КонецПопытки;
	
	Стр = СокрЛП ( Стр );
	Если ( Найти ( Стр, "No information for the date" ) <> 0 ) Тогда
		Если ( Результат = 1 ) Тогда
			Сообщить ( "На дату " + ДатаЗагрузки + " информация отсутсвует." );
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если (Результат=1)И(Авто=0) Тогда
		Сообщить("Загрузка курсов валют на дату: "+ДатаЗагрузки); 
		Сообщить("Валюта"+СимволТабуляции+СимволТабуляции+"ТекКурс"+СимволТабуляции+"Кратность"); 
	КонецЕсли;
	Если Авто=1 Тогда
		Состояние("Загрузка курсов валюты на дату: "+ДатаЗагрузки); 
	КонецЕсли;
	
	Валюта=СоздатьОбъект("Справочник.Валюты");
	Курсы=СоздатьОбъект("Периодический");
	Кратности=СоздатьОбъект("Периодический");
	
	Для Н=1 По СписокВалют.РазмерСписка() Цикл 
		Если СписокВалют.Пометка(Н)=0 Тогда
			Продолжить;
		КонецЕсли;    
		
		ВалютаТМП = СписокВалют.ПолучитьЗначение(Н);
		
		Позиция = Найти ( Стр, "<NumCode>" + ВалютаТМП.Код + "</NumCode>" );
		ТемпСтр = Сред ( Стр, Позиция );
		
		// кратность
		СтрокаКратности = СтрПолучитьСтроку ( ТемпСтр, 3 );
		Позиция = Найти ( СтрокаКратности, "<Nominal>" );
		Кратность = Сред ( СтрокаКратности, Позиция + 9 );
		Позиция = Найти ( Кратность, "</Nominal>" );
		Кратность = Число ( Лев ( Кратность, Позиция - 1 ));
		
		// курс
		СтрокаКурса = СтрПолучитьСтроку ( ТемпСтр, 5 );
		Позиция = Найти ( СтрокаКурса, "<Value>" );
		ТекКурс = Сред ( СтрокаКурса, Позиция + 7 );
		Позиция = Найти ( ТекКурс, "</Value>" );
		ТекКурс = Число ( Лев ( ТекКурс, Позиция - 1 ));
		
		Кратности.ИспользоватьОбъект("Кратность",ВалютаТМП);
		Курсы.ИспользоватьОбъект("ТекКурс",ВалютаТМП);
		
		// получить значение периодического реквизита значительно быстрее чем записывать его
		Кратности.ДатаЗнач=ДатаЗагрузки;
		Кратности.Значение=Кратность;
		//Если ВалютаТМП.Кратность.Получить(ДатаЗагрузки)<>Кратность Тогда
			Кратности.Записать();
		//КонецЕсли;
		Курсы.ДатаЗнач=ДатаЗагрузки;
		Курсы.Значение=ТекКурс;
		//Если ВалютаТМП.ТекКурс.Получить(ДатаЗагрузки)<>ТекКурс Тогда
			Курсы.Записать();
		//КонецЕсли;
		
		Если (Результат=1)И(Авто=0) Тогда
			Сообщить(Строка(ВалютаТМП.Наименование)+СимволТабуляции+СимволТабуляции+СимволТабуляции+ТекКурс  +СимволТабуляции+СимволТабуляции+ Кратность,"I");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//******************************************************************************
//	Сформировать ()
//
//	Описание:  Осуществляет загрузку курсов валют с сервера банка
Процедура Сформировать ()
	Если ДоступностьЗагрузки()=0 Тогда
		Если Авто=0 Тогда
			Предупреждение("Необходимо указать валюты, "+РазделительСтрок+"по которым требуется получить курсы!");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	Если НачДата>КонДата Тогда
		Если Авто=0 Тогда
			Предупреждение("Неверно указан период!");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ТекущаяДатаКурса = НачДата;
	Пока ( ТекущаяДатаКурса <= КонДата ) Цикл
		ЗагрузитьКурсыНаДату ( ТекущаяДатаКурса );
		ТекущаяДатаКурса = ТекущаяДатаКурса + 1;
	КонецЦикла;
	
	ОбновитьСписокВалют(); 
	Если Авто=0 Тогда
		Предупреждение("Загрузка курсов закончена!",3);
	Иначе
		Состояние("Загрузка курсов закончена!");
	КонецЕсли;
КонецПроцедуры   //  Сформировать                                             
//******************************************************************************
//	ЗагрузитьСписокВалют()
//
//	Описание:  Осуществляет загрузку списка валют при открытии формы
Процедура ЗагрузитьСписокВалют()
	
	ДатаЗнач=СоздатьОбъект("Периодический");
	Валюта=СоздатьОбъект("Справочник.Валюты");
	Валюта.ВыбратьЭлементы(); 
	ДатаМин = ТекущаяДата();
	Пока Валюта.ПолучитьЭлемент()=1 Цикл
		// 498 это MDL
		Если (Прав(Валюта.Код,3)="001")ИЛИ(Прав(Валюта.Код,3)="000")ИЛИ(Прав(Валюта.Код,3)="0")
		ИЛИ(Прав(Валюта.Код,3)="810")ИЛИ(Прав(Валюта.Код,3)="498") Тогда
			Продолжить;
		Иначе
			Курсы=СоздатьОбъект("Периодический");    
			Курсы.ИспользоватьОбъект("ТекКурс",Валюта.ТекущийЭлемент()); 
			Курсы.ОбратныйПорядок();
			Если Курсы.ВыбратьЗначения()=1 Тогда    
				Курсы.ПолучитьЗначение();
				ДатаЗнач = Курсы.ДатаЗнач; 
			Иначе 
				ДатаЗнач = 0;       
			КонецЕсли;
			ДатаМин=?(ДатаЗнач<ДатаМин,ДатаЗнач,ДатаМин);
			СписокВалют.ДобавитьЗначение(Валюта.ТекущийЭлемент(),"     "+СокрЛП(Валюта.Наименование)+";     на: "+Строка(ДатаЗнач)+"  =  "+Формат(Курсы.Значение,"Ч10.4")); 
			СписокВалют.Пометка(СписокВалют.РазмерСписка(),1);
		КонецЕсли;
	КонецЦикла;
	НачДата = ДатаМин;
КонецПроцедуры  // ЗагрузитьСписокВалют
//******************************************************************************
Функция УстановитьКомпоненту()
	Если ЗагрузитьВнешнююКомпоненту(КаталогИБ()+"ExtForms\v7plus.dll")=0 Тогда
		Если ЗагрузитьВнешнююКомпоненту("v7plus.dll")=0 Тогда
			Сообщить("Не удалось обнаружить компоненту V7Plus.dll!"); 
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	Попытка
		Соединение = СоздатьОбъект("Addin.V7HttpReader");
		Соединение.КоличествоПопытокАвторизации = 3;
	Исключение 
		Сообщить("Не удалось создать объект Addin.V7HttpReader!");
		Возврат 0;
	КонецПопытки; 
	Возврат 1;
КонецФункции  // УстановитьКомпоненту
//--------------------------------
Процедура ПриОткрытии(ФлагЧтенияНастройки)  // Предопределенная
	Если ФлагЧтенияНастройки=0 Тогда
		КонДата=ТекущаяДата();
		НачДата=ТекущаяДата()-30;
	КонецЕсли;
	
	Если Метаданные.Справочник("Валюты").Выбран()=0 Тогда
		Предупреждение("Не существует справочника ""Валюты""");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если Метаданные.Справочник("Валюты").Реквизит("ТекКурс").Выбран()=0 Тогда
		Предупреждение("Не существует реквизит ""ТекКурс"" справочника ""Валюты""");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	
	Если Метаданные.Справочник("Валюты").Реквизит("Кратность").Выбран()=0 Тогда
		Предупреждение("Не существует реквизит ""Кратность"" справочника ""Валюты""");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
	Авто = 0;  
	УстановитьКомпоненту();
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если ТипЗначенияСтр(Форма.Параметр)="СписокЗначений" Тогда
			Если Форма.Параметр.Получить("Автоматически")=1 Тогда
				Авто = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Результат = ?(ПустоеЗначение(Результат)=1,1,Результат);
	ЗагрузитьСписокВалют();   
	// Если запуск обработки осуществляется при запуске программы, то диалог не выводится, 
	// а прозводится автоматическая загрузка курсов всех валют справочника
	Если Авто=1 Тогда
		Сформировать ();
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;
КонецПроцедуры // ПриОткрытии
//---------------------- 

Процедура ПриПовторномОткрытии()  // Предопределенная
	ЗагрузитьСписокВалют();   
КонецПроцедуры // ПриОткрытии
//----------------------