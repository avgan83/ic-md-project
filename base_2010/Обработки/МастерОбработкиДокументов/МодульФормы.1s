//Станислав Залозный 
// 14.03.03 - Мастер обработки документов Версия 0.01;
// 17.03.03 + обработка выбранных документов + по условию + массовая обработка Версия 1.00;
// 18.03.03 незначительные усовершенствования; версия 1.03 + значительные :) Версия 1.04;
// 19.03.03 исправление ошибок (не критичных) + новые возможности интрефейса Версия 1.08;
// 22.03.03 исправление ошибок + помощь Версия 1.09;
// 08.04.03 изменение возможностей интерфейса + доп. возможности Версия 1.10; 
// 15.04.03 возможность авто создания спр и документов Версия 1.22;
// 16.04.03 возможность печати реквизитов документов Версия 1.32;
// 17.04.03 возможность сохранения реквизитов и их пометок Версия 1.33;

Перем 	ТаблТ,						// табличная часть документа
		спНужРеквТ,					// выбранные реквизиты табличной части документа				
		Версия,						// версия обработки
		ВозможноВосстановление,		// есть ли возможность восстановления контрагентов?
		Таб,						// печатная часть помощи
		ТабПечать,					// печатная часть документов
		ИмяЛогФайла,				// имя файла отчета
		ИмяФайлаОтката,				// имя файла отката
		КаталогИБПереноса,			// каталог ИБ откуда выгружали док-ты (служит для восстановления рекв.)
		ИБПр,						// ИБ откуда берем реквизиты
		ТекстЛог,					// лог файл
		Индикатор,					// процентный индикатор
		ДатаДокумента;				// для пер. величин дата текущего док.

// ==============================
Функция ПолучитьДок(ВидДок,НомДок,ДатаДок) Далее
Функция ПолучитьЭл(ВидСпр,Наим,Код,Влад) Далее		

// ===============================
Процедура ПоказатьИндикатор(Процент)
	стрИндикатор = "";
	
	КвоДелений = Цел(Процент*10/100);
	Если КвоДелений > 0 Тогда
	    Для Поз = 1 По КвоДелений Цикл
			стрИндикатор = стрИндикатор + Симв(3);
		КонецЦикла;	
	КонецЕсли;	
	Индикатор = стрИндикатор+СокрЛП(Процент)+"%";
	Форма.Обновить();
КонецПроцедуры

// ===============================
// Назначение:
//		
// Аргументы:
//		
Функция ВыполнитьРезерв(Пометка=1) 
	Индикатор = "";
	Форма.Обновить();
	
	Текст = СоздатьОбъект("Текст");
	Текст.Очистить();
	
	тДок = СоздатьОбъект("ТаблицаЗначений");
	тДок.Очистить();
	тДок.НоваяКолонка("Док");
	Инд = 0;		
	Для Инд = 1 По спТекДок.РазмерСписка() Цикл			
		Если спТекДок.Пометка(Инд) = 0 Тогда
		    Продолжить;
		КонецЕсли;
		тДок.НоваяСтрока();
		тДок.Док = спТекДок.ПолучитьЗначение(Инд);
	КонецЦикла;	
	
	Если Инд = 0 Тогда
	    Возврат 0;
	КонецЕсли;  	
	
	МД = Метаданные.Документ (спДок.ПолучитьЗначение (спДок.ТекущаяСтрока()));
	// ----    
	тДок.ВыбратьСтроки();
	Пока тДок.ПолучитьСтроку() = 1 Цикл
		Текст.ДобавитьСтроку("В"+СокрЛП(тДок.Док.Вид()));          // вид документа
		Текст.ДобавитьСтроку("Д"+ЗначениеВСтрокуВнутр(тДок.Док));  // новый документ
		Для Инд = 1 По спРеквШ.РазмерСписка() Цикл
			Док = тДок.Док;               
			Рекв = спРеквШ.ПолучитьЗначение(Инд);
			Зн = Док.ПолучитьАтрибут(СокрЛП(Рекв));                 
			Текст.ДобавитьСтроку("Р"+СокрЛП(Рекв));                 //реквизит
			Текст.ДобавитьСтроку("З"+ЗначениеВСтрокуВнутр(Зн));     // значение
		КонецЦикла;	
		Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			Текст.ДобавитьСтроку("Н");                              // новая строка
			Для Ном = 1 По спРеквТ.РазмерСписка() Цикл              
				Рекв = спРеквТ.ПолучитьЗначение(Ном);
				Зн = Док.ПолучитьАтрибут(СокрЛП(Рекв));
				Текст.ДобавитьСтроку("Р"+СокрЛП(Рекв)); 			//реквизит
				Текст.ДобавитьСтроку("З"+ЗначениеВСтрокуВнутр(Зн)); // значение
				Процент = Цел(тДок.НомерСтроки/тДок.КоличествоСтрок()*100);		
				Состояние("Резервирование документов: ["+СокрЛП(Процент)+"%]");
				ПоказатьИндикатор(Процент);
			КонецЦикла;	
		КонецЦикла;				
		Текст.ДобавитьСтроку("С"); // записать
		Если Пометка = 1 Тогда
		    Поз = спТекДок.НайтиЗначение(Док.ТекущийДокумент());
			Если Поз <> 0 Тогда
		   		спТекДок.Пометка(Поз,0);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Если ФС.СуществуетФайл(КаталогИБ()+"NEW_STRU") = 0 Тогда
	    ФС.СоздатьКаталог(КаталогИБ()+"NEW_STRU");
	КонецЕсли; 
	
	Текст.Записать(ИмяФайлаОтката);                         
	Сообщить("Создан резерв для ["+тДок.КоличествоСтрок()+"] документов в файл: "+ИмяФайлаОтката,"i");
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": + Резерв для ["+тДок.КоличествоСтрок()+"/"+СокрЛП(спТекДок.РазмерСписка())+"] документов в файл: "+СокрЛП(ИмяФайлаОтката));		
	Если спВид.НайтиЗначение(7) = 0 Тогда
	    спВид.ДобавитьЗначение(7,"Откат изменений");
	КонецЕсли;
	Возврат 1;
КонецФункции //ВыполнитьРезерв

// ===============================
Процедура СохранитьРеквизиты(Вид = 1) 
	ВидДок = СокрЛП(спДок.ПолучитьЗначение(спДок.ТекущаяСтрока()));
	
	Если Вид = 0 Тогда // условия
		Условия = ЗначениеВСтроку(тУсл);
		СохранитьЗначение(ВидДок+"У",Условия); 		
		Возврат;
	КонецЕсли;  
	
	// сохраним настройки реквизитов
	РеквШ = ЗначениеВСтроку(спРеквШ);
	РеквТ = ЗначениеВСтроку(спРеквТ);
	СохранитьЗначение(ВидДок+"Ш",РеквШ); 
	СохранитьЗначение(ВидДок+"Т",РеквТ); 
КонецПроцедуры          

// ===============================
Процедура ВосстановитьРеквизиты(Вид=1)   
	ВидДок = СокрЛП(спДок.ПолучитьЗначение(спДок.ТекущаяСтрока()));
	
	Если Вид = 0 Тогда // условия		
		Условия = ВосстановитьЗначение(ВидДок+"У");
		Если ПустоеЗначение(Условия)=1 Тогда
		    Возврат;
		КонецЕсли;  
		тУсл.УдалитьСтроки();
		тУсловия = ЗначениеИзСтроки(Условия);
		тУсловия.Выгрузить(тУсл);
		Возврат;
	КонецЕсли;                         
	
	// восстановим настройки реквизитов	
	РеквШ = ВосстановитьЗначение(ВидДок+"Ш");
	РеквТ = ВосстановитьЗначение(ВидДок+"Т");     
	Если (1-ПустоеЗначение (РеквТ)) * (1-ПустоеЗначение(РеквШ)) = 0 Тогда
	    Возврат;
	КонецЕсли;  
	спРеквШ.УдалитьВсе();
	спРеквТ.УдалитьВсе();
	спРеквНовШ = ЗначениеИзСтроки(РеквШ);
	спРеквНовТ = ЗначениеИзСтроки(РеквТ);
	спРеквНовШ.Выгрузить(спРеквШ);
	спРеквНовТ.Выгрузить(спРеквТ);
КонецПроцедуры

// ======================================
Функция РазобратьСтроку(Стр,Табл,Разд)
	//*      Разобрать строку (разделитель "Разд") *
	//*  Вход (параметры): 
	//*      Стр - строка с разделителями, Табл - таблица значений (Пустая) 
	//*      в Табл - должна быть колонка "ЗН"
	//*  Возврат:  
	//*      заполненная таблица значений переданная в параметре "Табл" 
	
	//* Например: "РазобратьСтроку ("Плитка,труб,пласт",таблПодбор,",")" 
	//* вернёт "таблПодбор.ЗН = "Плитка"" 
	//*        "таблПодбор.ЗН =  "труб"" 
	//*        "таблПодбор.ЗН =  "пласт"" 
	
	Табл.УдалитьСтроки();
	Чис = СтрЧислоВхождений(Стр,Разд);
	Если Чис = 0 Тогда
		Табл.НоваяСтрока();
		Зн = СокрЛП(Строка(Стр));
		Если СтрДлина (Зн) > 3 Тогда
		    Зн = Нрег (Зн);
		КонецЕсли;
		Табл.Зн = Зн;
		Возврат (Табл);
	КонецЕсли;             
	
    Зн = "";
	Тов = СокрЛП(Строка(Стр));
	
	Пока Чис > 0 Цикл
		Чис = Найти (Тов,Разд);
		Зн = Сред (Тов,1,?(Чис=0,СтрДлина (Тов),Чис-1));
		Табл.НоваяСтрока();		
		Табл.Зн = ?(ПустоеЗначение (Зн)=1,ПолучитьПустоеЗначение (ТипЗначенияСтр(Зн)),Зн);
		Тов = Сред (Тов,Чис+1,СтрДлина(Тов));
	КонецЦикла;      
	Возврат (Табл);
КонецФункции    

// ===============================
Процедура ИзмСписокДействий()  
	Инд = спВид.ТекущаяСтрока();
	Инд = Макс(Инд,1);         
	Зн = спВид.ПолучитьЗначение(Инд);
	спВид.УдалитьВсе();        
	спВид.ДобавитьЗначение(1,"Выгрузка док");
	спВид.ДобавитьЗначение(2,"Загрузка док");	
	спВид.ДобавитьЗначение(3,"Обработка рекв.");
	спВид.ДобавитьЗначение(4,"Снять пометки уд-ния");	
	спВид.ДобавитьЗначение(5,"Пометка удаления");	
	Если ВозможноВосстановление = 1 Тогда
		спВид.ДобавитьЗначение(6,"Восст. контрагентов");	    
	КонецЕсли;
	Если ФС.СуществуетФайл (ИмяФайлаОтката) = 1 Тогда
	    спВид.ДобавитьЗначение(7,"Откат изменений");	
	КонецЕсли;	                               
	спВид.ДобавитьЗначение(8,"Резерв документов");		
	
	Инд = Макс(1,спВид.НайтиЗначение(Зн));
	спВид.ТекущаяСтрока(Инд);
КонецПроцедуры

// ===============================
Процедура ПриВыбореЗакладки(Ном,Значен);
	ТипДействия = спВид.ПолучитьЗначение(спВид.ТекущаяСтрока());
	Если (Значен = "Условия") и (ТипДействия = 2) Тогда
		ОчиститьОкноСообщений();
		Сообщить ("Условия не работают в режиме 'загрузка документов'""i");
	    Возврат;
	КонецЕсли;
	Форма.ИспользоватьСлой(Значен+", Общий",2);
КонецПроцедуры  

// ======================================
Процедура ИзмВидКолонок(Зн)
	тУсл.ВидимостьКолонки("Представление,Значение",1);
	тУсл.ВидимостьКолонки("НовоеЗначение",Зн);     	
	тУсл.ВидимостьКолонки("Тип,Реквизит,Длина,Точность,Шапка",0);	
КонецПроцедуры 

// ===============================
Процедура ИзмДействие(Зн = 0)  
	ТипДействия = спВид.ПолучитьЗначение(спВид.ТекущаяСтрока());		
	Вид = 0;
	Фл = ?(спТекДок.РазмерСписка()=0,0,1);
	Форма.кПечать.Доступность(Фл);
	Форма.кнНовЗн.Доступность(0);
	
	Форма.кПечать.Доступность(0);
	Если Зн = 0 Тогда
	    спПорядок.УдалитьВсе();
	КонецЕсли;	               	
	Если ТипДействия = 1 Тогда      
		рЗамещать = 0;
	    Форма.кВыгр.Доступность(Фл);			
		Форма.кПечать.Доступность(Фл);
		Форма.кЗагр.Доступность(0);
		Форма.кОбр.Доступность(0);      		
		Если Зн = 0 Тогда
			спПорядок.ДобавитьЗначение(1,"Вид док");
			спПорядок.ДобавитьЗначение(2,"Период");   
			спПорядок.ДобавитьЗначение(3,"ИмяФайла");   
			спПорядок.ДобавитьЗначение(4,"Условия(не обяз.)");   
			спПорядок.ДобавитьЗначение(5,"кн'Сформировать'");
			спПорядок.ДобавитьЗначение(6,"кн'Выгрузить'");
		КонецЕсли;	
	ИначеЕсли ТипДействия = 2 Тогда  
		ПриВыбореЗакладки(1,"Основной");		
		Форма.кВыгр.Доступность(0);
		Форма.кЗагр.Доступность(1);                                          		
		Форма.кОбр.Доступность(0);                                        				
		Если Зн = 0 Тогда
			спПорядок.ДобавитьЗначение(3,"ИмяФайла");     
			спПорядок.ДобавитьЗначение(9,"контроль переключателей");
			спПорядок.ДобавитьЗначение(7,"кн'Загрузить'");			
		КонецЕсли;	
	Иначе		     
		Если ТипДействия  = 3 Тогда
			рЗамещать = 0;
			Вид = 1;           
			Форма.кнНовЗн.Доступность(1);			
		КонецЕсли;
		
		Если Зн = 0 Тогда
		    	Если ТипДействия <> 7 Тогда			
			    спПорядок.ДобавитьЗначение(1,"Вид док");
				спПорядок.ДобавитьЗначение(2,"Период");   		
				спПорядок.ДобавитьЗначение(4,"Условия(не обяз.)");   
				спПорядок.ДобавитьЗначение(5,"кн'Сформировать'");
			КонецЕсли;
			спПорядок.ДобавитьЗначение(8,"кн'Обработать'");
		КонецЕсли;		
		Форма.спТекДок.Доступность(1);
		Форма.кВыгр.Доступность(0);
		Форма.кЗагр.Доступность(0);
		Фл3 = Фл + ?(ТипДействия=7,1,0);
		Фл3 = ?(Фл3=0,0,1);
		Форма.кОбр.Доступность(Фл3);
	КонецЕсли;            	   
	Инд = спПорядок.ТекущаяСтрока();
	Инд = Макс(1,Инд);
	спПорядок.ТекущаяСтрока(Инд);
	
	ФлЗагр = Форма.кЗагр.Доступность();
	ФлОбр  = Форма.кОбр.Доступность();
	ФлВыгр = Форма.кВыгр.Доступность();	
		
	Форма.спУсл.Доступность(1-ФлЗагр);	
	Форма.кСформ.Доступность(1-ФлЗагр);
	Форма.НачДата.Доступность(1-ФлЗагр);
	Форма.КонДата.Доступность(1-ФлЗагр);
	Форма.ВыбПериода.Доступность(1-ФлЗагр);
	
	Форма.спДок.Доступность(1-ФлЗагр);
	Форма.рЗамещать.Доступность(ФлЗагр);
	Форма.рПроводить.Доступность(1-ФлВыгр); 
	Форма.рСозд.Доступность(ФлЗагр);
	
	Форма.кЗагрНастр.Доступность((1-ФлЗагр)*?(ТипДействия>2,0,1));
	Форма.кУмНастр.Доступность((1-ФлЗагр)*?(ТипДействия>2,0,1));
	Форма.кСохрНастр.Доступность((1-ФлЗагр)*?(ТипДействия>2,0,1));
	Форма.спРеквШ.Доступность((1-ФлЗагр)*?(ТипДействия>2,0,1));
	Форма.спРеквТ.Доступность((1-ФлЗагр)*?(ТипДействия>2,0,1));
	
	Если ТипДействия = 5 Тогда
		рЗамещать = 0;
	    Форма.рПроводить.Доступность(0);
		рПроводить = 0;
	Иначе
		Форма.рПроводить.Доступность(1);
	КонецЕсли;    
	
	ИзмВидКолонок(Вид);
КонецПроцедуры

// ===============================
Процедура ВводУсловия(Колонка="")
	
	Если тУсл.КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	Если ПустоеЗначение (Колонка) = 1 Тогда
		ТипДействия = спВид.ПолучитьЗначение(спВид.ТекущаяСтрока());
		Если ТипДействия = 3 Тогда
			Колонка = "НовоеЗначение";
		Иначе
			Колонка = "Значение";
		КонецЕсли;		
	КонецЕсли;
	
	Значение = тУсл.ПолучитьЗначение (тУсл.ТекущаяСтрока(), Колонка);
	Рекв = тУсл.ПолучитьЗначение (тУсл.ТекущаяСтрока(),"Представление");
	Тип  = тУсл.ПолучитьЗначение (тУсл.ТекущаяСтрока(),"Тип");
	Дл = тУсл.ПолучитьЗначение (тУсл.ТекущаяСтрока(),"Длина");
	Точ = тУсл.ПолучитьЗначение (тУсл.ТекущаяСтрока(),"Точность");
	Описание = "Введите "+Колонка+" для "+Симв(34)+Рекв+Симв(34)+":";
	
	Если Колонка = "Х" Тогда
	    Тип = "Перечисление.ДаНет";				
		Значение = тУсл.ПолучитьЗначение (тУсл.ТекущаяСтрока(),"Х");
		Описание = "'Да'-учитывать пустые значения:";
	КонецЕсли; 
	
	Если ВвестиЗначение (Значение,Описание,Тип,Дл,Точ) = 0 Тогда
	    Возврат;
	КонецЕсли;	
	тУсл.УстановитьЗначение (тУсл.ТекущаяСтрока(),Колонка ,Значение);
КонецПроцедуры

// ===============================
// Назначение:
//		
// Аргументы:
//		
// Возвращает:
//		
Функция Проверка(Док,Тип,Флаг)	
	тУсл.ВыбратьСтроки();
	Пока тУсл.ПолучитьСтроку() = 1 Цикл
		Если тУсл.Шапка <> Тип Тогда // рекв шапки или табл.части
		    Продолжить;
		КонецЕсли;     
		
		Рекв = СокрЛП(тУсл.Реквизит);
		Значение = тУсл.Значение; 		// значение для сверки
		Если (ПустоеЗначение (Значение) = 1) и (тУсл.Х <> Перечисление.ДаНет.Да) Тогда
		    Продолжить;
		КонецЕсли;
		// --                  
		Если Флаг = 1 Тогда
		    ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": - Условие: ["+Рекв+" = "+Значение+"] "+СокрЛП(Док));
		КонецЕсли;		
		
		ДокЗначение = Док.ПолучитьАтрибут(Рекв); // значение док
		
		Если (ПустоеЗначение(тУсл.Значение)=1) и (тУсл.Х = Перечисление.ДаНет.Да) и (ПустоеЗначение(ДокЗначение)=1) Тогда 
			// поиск пустых реквизитов
			Возврат 1;    
		КонецЕсли;                    
		
		// сверим значение документа с условием
		Если ТипЗначенияСтр(Значение) = "Строка" Тогда
			Если рРег = 1 Тогда
			    Значение = Нрег (Значение);				
				ДокЗначение = Нрег(ДокЗначение);
			КонецЕсли;                     
		    ДокЗначение = СокрЛП(ДокЗначение);			
			Значение = СокрЛП(Значение);			
			Тип = спСтр.ПолучитьЗначение (спСтр.ТекущаяСтрока()); // тип сверки
			Если (Тип = 0) и (Значение <> ДокЗначение) Тогда
			    Возврат 0;                              
			ИначеЕсли (Тип = 1) и (Найти (ДокЗначение,Значение)=0) Тогда
				Возврат 0;
			КонецЕсли;
			Возврат 1;
		ИначеЕсли ТипЗначенияСтр(Значение) = "Число" Тогда
			Тип = спБолМен.ПолучитьЗначение (спБолМен.ТекущаяСтрока()); // тип сверки
			Если (Тип = 0) и (Значение<>Число(ДокЗначение)) Тогда
			    Возврат 0;
			ИначеЕсли (Тип = 1) и (Число(ДокЗначение)>Значение) Тогда
			    Возврат 0;
			ИначеЕсли (Тип = 2) и (Число(ДокЗначение)<Значение) Тогда
			    Возврат 0;
			КонецЕсли;
			Возврат 1;		
		ИначеЕсли ТипЗначения(ДокЗначение) = 11 Тогда // справочник   			 
		     спПров = СоздатьОбъект("СписокЗначений");
			 спПров.УдалитьВсе();
			 спПров.ДобавитьЗначение(Значение);			 
			 Если спПров.Принадлежит (ДокЗначение) = 0 Тогда // принадлежит ли группе спр. или = элементу ?
			     Возврат 0;
		 	 КонецЕсли;
	         Возврат 1;
		ИначеЕсли ДокЗначение <> Значение Тогда
             Возврат 0;        
		КонецЕсли;
	КонецЦикла;	
    Возврат 1;
КонецФункции //Проверка

// ===============================
Функция ПроверитьУсл(Док,Флаг=0)
	Если тУсл.КоличествоСтрок() = 0 Тогда
	    Возврат 1;
	КонецЕсли;    
	
	// шапка
	Фл =  Проверка(Док,1,Флаг);
	
	Если Фл = 0 Тогда
		// для шапки проверяем: если хотя бы одно не верно, то не включаем
	    Возврат 0;
	КонецЕсли;
	
	Фл = 0; // если док пустые строки то он не включается по умолчанию
	Фл = ?(спРеквТ.РазмерСписка() = 0,1,Фл); // Если строк в принципе нет, то включаем док	                                                
	                                            
	// табл часть
	Док.ВыбратьСтроки();
	Пока Док.ПолучитьСтроку() = 1 Цикл
		ФлСтроки = Проверка(Док,0,Флаг);
		// для табличной части проверяем: если хотя бы одно верно в документе, то включаем
		Фл = Фл + ФлСтроки;
	КонецЦикла;       
	
	Фл = ?(Фл = 0,0,Фл);
	Возврат Фл;
КонецФункции

// ===============================
Процедура ВыбрФайл()  
	
	ИмяФ = "";
	ИмяП = "";
	
	ФС.ВыбратьФайл(1,ИмяФ,ИмяП,"Выберите файл для выгрузки/загрузки данных","дата файлы:*.ddf|*.ddf");
	ИмяФайла = ИмяП+ИмяФ;
КонецПроцедуры

// ===============================
Процедура Кнопки(Зн)                
	ИзмДействие(1);
	Форма.кПом.Доступность(Зн);	
	Форма.кПечать.Доступность(Зн*Форма.кПечать.Доступность());		
КонецПроцедуры

// ===============================
Функция ОбработатьРеквизит(Рекв,Тип)
	Зн = Рекв;
    
	Если Тип = "Неопределенный" Тогда
	    Тип = "Справочник";
	КонецЕсли;   
	Если Тип = "Справочник" Тогда // справочник
	    Зн = ПолучитьЭл(Рекв.Владелец,Рекв.Вид(),Рекв.Наименование,Рекв.ПолныйКод());
	ИначеЕсли Тип = "Документ" Тогда // документ
		Зн = ПолучитьДок(Рекв.Вид(),Рекв.НомерДок,Рекв.ДатаДок); 
	ИначеЕсли Тип = "Перечисление" Тогда // перечисление
		Вид = Строка(Рекв.Вид());		
		Попытка
			ПеречПр = Перечисление.ПолучитьАтрибут(Вид);
			Зн = ПеречПр.ЗначениеПоИдентификатору(Рекв.Идентификатор());
		Исключение
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка нахождения перечисления "+Вид+"."+Рекв.Идентификатор());
		КонецПопытки; 			 
	ИначеЕсли Тип = "Счет" Тогда
		Зн = СчетПоКоду(СокрЛП(Рекв.Код));
	ИначеЕсли Тип = "Число" Тогда 		
		Зн = Число(Рекв);		
	ИначеЕсли Тип = "Дата" Тогда 
	    Зн = Дата(Рекв);
	ИначеЕсли Тип = "Счет" Тогда 
		Зн = СчетПоКоду(СокрЛП(Рекв));
	ИначеЕсли Тип = "Строка" Тогда 
		Зн= СокрЛП(Рекв);
	Иначе
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": - неизвестный тип данных!");			
	КонецЕсли;

	Возврат Зн;
КонецФункции

// ===============================
Функция ПолучитьЭл(ВидСпр,Наим,Код,Влад);     
	Если (ВидСпр = "-") или (ПустоеЗначение(ВидСпр)=1) или (Наим="-") Тогда
	    Возврат ПустоеЗначение("Справочник."+СокрЛП(ВидСпр));
	КонецЕсли;     
	
	Если ТипЗначения(ВидСпр) = 100 Тогда
	    ВидСпр = ВидСпр.Вид();
	КонецЕсли;
	
	спрСущ = СоздатьОбъект("Справочник."+ВидСпр);
	
	Если (ПустоеЗначение(Влад) = 0) и (Влад <> "-") Тогда
	    спрСущ.ИспользоватьВладельца(Влад);
	КонецЕсли;
	Если спрСущ.НайтиПоНаименованию(Наим,0,1) = 1 Тогда		 	
	    Возврат спрСущ.ТекущийЭлемент();
	КонецЕсли;
	Если спрСущ.НайтиПоКоду(Код,2) = 1 Тогда
	    Возврат спрСущ.ТекущийЭлемент();
	КонецЕсли;
	
	// не нашли создаём новый!
	Если рСозд = 0 Тогда
		Сообщить ("Ошибка нахождения/создания спр:"+СокрЛП(ВидСпр)+" №"+СокрЛП(Код)+" Наименование: "+СокрЛП(Наим),"!");
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! Ошибка нахождения спр:"+СокрЛП(ВидСпр)+" №"+СокрЛП(Код)+" Наименование: "+СокрЛП(Наим)+" Владелец: "+СокрЛП(Влад));				 
	    Возврат ПустоеЗначение("Справочник."+СокрЛП(ВидСпр));
	КонецЕсли;  
	
	ИБспр = ИБПр.CreateObject("Справочник."+ВидСпр);
	
	// владелец
	Если (ПустоеЗначение(Влад) = 0) и (Влад <> "-") Тогда
	    Вл = ИБПр.CreateObject("Справочник."+Влад.Вид());
		Если Вл.НайтиПоКоду(Влад.ПолныйКод(),2) = 1 Тогда
			Влад = Вл.ТекущийЭлемент();
		    ИБспр.ИспользоватьВладельца();
		КонецЕсли;
	КонецЕсли;
	Если ИБспр.НайтиПоКоду(Код,2) = 0 Тогда
	    ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! не обнаружен элемент: "+ВидСпр+":"+Код+":"+Наим+":"+Влад+" в базе выгрузки!");
		Возврат "";
	КонецЕсли;               
	
	// поиск родителя       
	Родитель = "";
	Если спрСущ.НайтиПоНаименованию(ИБспр.Родитель.Наименование,0,1) = 1 Тогда
	    Если спрСущ.ЭтоГруппа() = 1 Тогда
	        Родитель = спрСущ.ТекущийЭлемент();
	    КонецЕсли;
	КонецЕсли;
	
	// новый элемент/группа
	спр = СоздатьОбъект("Справочник."+ВидСпр);
	Если ИБспр.ЭтоГруппа() = 1 Тогда
		спр.НоваяГруппа();
	Иначе
		спр.Новый();
	КонецЕсли;
	
	спр.УстановитьНовыйКод();
	спр.ИспользоватьДату(РабочаяДата());
	Если ПустоеЗначение(Родитель) = 0 Тогда
	    спр.Родитель = Родитель;
	КонецЕсли;	
	спр.Наименование = ИБспр.Наименование;
	ИБспр.ИспользоватьДату(ДатаДокумента);
	
	// скопируем реквизиты           
	МД = Метаданные.Справочник(ВидСпр);
	Для Инд = 1 По МД.Реквизит() Цикл
		Рекв = СокрЛП(МД.Реквизит(Инд).Идентификатор);    
		Попытка
			РеквЗн = ИБспр.ПолучитьАтрибут(Рекв);
		Исключение   
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка получения реквизита: "+Рекв+" у спр:"+ВидСпр+" из ИБ выгрузки!");
		КонецПопытки;	
		// ---------- обработка рекв
		Тип =  МД.Реквизит(Инд).Тип;
	    Зн = ОбработатьРеквизит(РеквЗн,Тип);
		
		// установим реквизит
		Попытка              			
			спр.УстановитьАтрибут(СокрЛП(Рекв),Зн);
		Исключение   
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! тип:"+ВидСпр+" - ошибка установки реквизита: "+Рекв+" = "+СокрЛП(Зн));
		КонецПопытки;	
	КонецЦикла;	   	
	Попытка
		спр.Записать();
	Исключение   
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка записи спр:"+ВидСпр+":"+спр.Наименование+":"+спр.Код+" - "+ОписаниеОшибки());		
		Возврат "";
	КонецПопытки;	
	Возврат спр.ТекущийЭлемент();
КонецФункции

// ===============================
Функция ПолучитьДок(ВидДок,НомДок,ДатаДок);
	Если (ВидДок = "-") или (ПустоеЗначение(ВидДок)=1) или (НомДок="-") Тогда
	    Возврат ПолучитьПустоеЗначение("Документ."+СокрЛП(ВидДок));
	КонецЕсли; 
	
	Если ТипЗначения(ВидДок) = 100 Тогда
	    ВидДок = ВидДок.Вид();
	КонецЕсли;
	
	Док = СоздатьОбъект("Документ."+ВидДок);

	Если Док.НайтиПоНомеру(НомДок,ДатаДок,ВидДок) = 1 Тогда		 	
          Возврат Док.ТекущийДокумент();
    КонецЕсли;
	
	// не нашли создаём новый!
	Если рСозд = 0 Тогда
		Сообщить ("Ошибка нахождения док:"+СокрЛП(ВидДок)+" №"+СокрЛП(НомДок)+" от "+СокрЛП(ДатаДок),"!");
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! Ошибка нахождения док:"+СокрЛП(ВидДок)+" №"+СокрЛП(НомДок)+" от "+СокрЛП(ДатаДок)); 
	    Возврат ПолучитьПустоеЗначение("Документ."+СокрЛП(ВидДок));
	КонецЕсли;  
	
	ИБдок = ИБПр.CreateObject("Документ."+ВидДок);             
	
	Если ИБдок.НайтиПоНомеру(НомДок,ДатаДок,ВидДок) = 0 Тогда		 	
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": не обнаружен документ в ИБ выгрузке! "+НомДок+":"+ДатаДок+":"+ВидДок);
		Возврат "";
	КонецЕсли;
	
	// новый документ	
	Док.Новый();
	Док.НомерДок = НомДок;
	Док.ДатаДок = ДатаДок;
	
	// скопируем реквизиты шапки
	МД = Метаданные.Документ(ВидДок);
	Для Инд = 1 По МД.РеквизитШапки() Цикл
		Рекв = СокрЛП(МД.РеквизитШапки(Инд).Идентификатор);    
		Тип = МД.РеквизитШапки(Инд).Тип;
		Попытка
			ЗнИБ = ИБдок.ПолучитьАтрибут(Рекв);
			Зн = ОбработатьРеквизит(ЗнИБ,Тип);
		Исключение   
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка получения реквизита: "+Рекв+" у док:"+ВидДок+" из ИБ выгрузки!"+" - "+ОписаниеОшибки());
		КонецПопытки;	
		// установка рекв
		Попытка      
			Док.УстановитьАтрибут(Рекв,Зн);
		Исключение                         
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка установки реквизита: "+Рекв+"="+Зн+" - "+ОписаниеОшибки());		
		КонецПопытки;
	КонецЦикла;  	
	// табличная часть
	Для Инд = 1 По МД.РеквизитТабличнойЧасти() Цикл
		Рекв = СокрЛП(МД.РеквизитТабличнойЧасти(Инд).Идентификатор);    
		Тип = МД.РеквизитТабличнойЧасти(Инд).Тип;
		Попытка
			ЗнИБ = ИБдок.ПолучитьАтрибут(Рекв);
			Зн = ОбработатьРеквизит(ЗнИБ,Тип);
		Исключение   
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка получения реквизита: "+Рекв+" у док:"+ВидДок+" из ИБ выгрузки!"+" - "+ОписаниеОшибки());
		КонецПопытки;
		Попытка      
			Док.УстановитьАтрибут(Рекв,Зн);
		Исключение                         
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка установки реквизита: "+Рекв+"="+Зн+" - "+ОписаниеОшибки());		
		КонецПопытки;
	КонецЦикла;	           
	// общие реквизиты
	Для Инд = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл		
		Рекв = СокрЛП(Метаданные.ОбщийРеквизитДокумента(Инд).Идентификатор);    
		Тип = Метаданные.ОбщийРеквизитДокумента(Инд).Тип;
		Попытка
			ЗнИБ = ИБдок.ПолучитьАтрибут(Рекв);
			Зн = ОбработатьРеквизит(ЗнИБ,Тип);
		Исключение   
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка получения реквизита: "+Рекв+" у док:"+ВидДок+" из ИБ выгрузки!"+" - "+ОписаниеОшибки());
		КонецПопытки;
		Попытка      
			Док.УстановитьАтрибут(Рекв,Зн);
		Исключение                         
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка установки реквизита: "+Рекв+"="+Зн+" - "+ОписаниеОшибки());		
		КонецПопытки;
	КонецЦикла;  
	// запись
	Попытка  
		Док.Записать();
	Исключение
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка создания нового документа! док:"+ВидДок+":"+НомДок+":"+ДатаДок+" - "+ОписаниеОшибки());
	КонецПопытки;
	Возврат Док.ТекущийДокумент();	
КонецФункции

// ===============================
Функция Преобразовать(Значение,Вид)
	// Вид = 1 - загрузка, иначе наоборот  
	// "-" означает пустое значение
	Если Вид <> 1 Тогда	                                                                         
		Если ТипЗначенияСтр(Значение) = "Счет" Тогда                                       
			Если ПустоеЗначение (Значение) = 1 Тогда
			    НовЗначение = "-";
			Иначе
				НовЗначение = СокрЛП(Значение);
			КонецЕсли;                         
			Преф = "сче:";
	    ИначеЕсли ТипЗначенияСтр(Значение) = "Справочник" Тогда                                       			
			Если ПустоеЗначение(Значение) = 0 Тогда
				Если ПустоеЗначение(Значение.Владелец) = 0 Тогда
				    ВладВид = СокрЛП(Значение.Владелец.Вид());
					НаимВлад = СокрЛП(Значение.Владелец.Наименование);
					ВладКод = СокрЛП(Значение.Владелец.ПолныйКод());
				Иначе
					ВладВид = "-";
					ВладКод = "-";                                  
					НаимВлад = "-";
				КонецЕсли;              
			
				ВидСпр = Вид;
				Если Вид = "-" Тогда
				    ВидСпр = Значение.Вид();
				КонецЕсли;
				КодСпр = СокрЛП(Значение.ПолныйКод());
				Наим = СокрЛП(Значение.Наименование);
			Иначе			
				ВладВид = "-";
				ВладКод = "-";                                  
				НаимВлад = "-";
			
				КодСпр = "-";
			    ВидСпр = Вид;                      
				Наим = "-";
			КонецЕсли;
		    НовЗначение = ВидСпр+"|"+Наим+"|"+КодСпр+"|"+ВладВид+"|"+НаимВлад+"|"+ВладКод;
			Преф = "спр:";
		ИначеЕсли ТипЗначенияСтр(Значение) = "Документ" Тогда
			Если ПустоеЗначение(Значение) = 0 Тогда
				ВидДок = Вид;
				Если Вид = "-" Тогда
				    ВидДок = Значение.Вид();
				КонецЕсли;
				НомДок = СокрЛП(Значение.НомерДок);
				ДатДок = СокрЛП(Значение.ДатаДок);
			Иначе
				ВидДок = Вид;
				НомДок = "-";
				ДатДок = "-";
			КонецЕсли;
			НовЗначение = ВидДок+"|"+НомДок+"|"+ДатДок;
			Преф = "док:";
		ИначеЕсли ТипЗначенияСтр(Значение) = "Строка" Тогда
			Если ПустоеЗначение (Значение) = 1 Тогда
				НовЗначение = "-";    
			Иначе				
				НовЗначение = СокрЛП(Значение);    
			КонецЕсли;
			Преф = "стр:";
		ИначеЕсли ТипЗначенияСтр(Значение) = "Число" Тогда
			Если ПустоеЗначение (Значение) = 1 Тогда
				НовЗначение = "-";    
			Иначе				
				НовЗначение = СокрЛП(Значение);    
			КонецЕсли;
			Преф = "чис:";
		ИначеЕсли ТипЗначенияСтр(Значение) = "Дата" Тогда
			Если ПустоеЗначение(Значение) = 0 Тогда
			    НовЗначение = СокрЛП(Значение);
			Иначе
				НовЗначение = "-";
			КонецЕсли;			
			Преф = "дат:";
		Иначе                 
			Если ПустоеЗначение(Значение) = 0 Тогда
			    НовЗначение = СокрЛП(Вид)+"|"+СокрЛП(Значение.Идентификатор());
			Иначе
				НовЗначение = СокрЛП(Вид)+"|"+"-";
			КонецЕсли;			
			Преф = "пер:";			
		КонецЕсли;            
				
		НовЗначение = Преф+СокрЛП(НовЗначение);
	Иначе
		// загрузка данных
		Тип = Лев(Значение,4);
		Если Тип = "стр:" Тогда 
			Зн = Сред(Значение,5);
			Если Зн = "-" Тогда
			    Зн = "";
			КонецЕсли;
			НовЗначение = СокрЛП(Зн);		    
		ИначеЕсли Тип = "чис:" Тогда
			Зн = Сред(Значение,5);
			Если Зн = "-" Тогда
			    Зн = 0;
			КонецЕсли;
			НовЗначение = Число(Зн);
		ИначеЕсли Тип = "дат:" Тогда
			Зн = Сред(Значение,5);
			Если Зн = "-" Тогда
			    Зн = ПолучитьПустоеЗначение("Дата");
			КонецЕсли;
			НовЗначение = Дата(Зн);
		ИначеЕсли Тип = "пер:" Тогда
			Поз = Найти(Значение,"|");
			ВидПереч = Сред(Значение,5,Поз-1-4); 						
			Зн = Сред(Значение,Поз+1); 					
			Если (Зн = "-") или (ВидПереч = "-") Тогда
			    НовЗначение = ПолучитьПустоеЗначение("Перечисление");
			Иначе
				Пере = Перечисление.ПолучитьАтрибут(ВидПереч);
				НовЗначение = Пере.ЗначениеПоИдентификатору(СокрЛП(Зн));
			КонецЕсли;			
		ИначеЕсли Тип = "спр:" Тогда                   
			Т = СоздатьОбъект("ТаблицаЗначений");
			Т.Очистить();
			Т.НоваяКолонка("Зн");
			
			Значение = Сред(Значение,5);
			РазобратьСтроку(Значение,Т,"|");     
			
			ВидСпр = Т.ПолучитьЗначение(1,"Зн");
			Наим = Т.ПолучитьЗначение(2,"Зн");
			КодСпр = Т.ПолучитьЗначение(3,"Зн");
			ВидВлад = Т.ПолучитьЗначение(4,"Зн");
			НаимВлад = Т.ПолучитьЗначение(5,"Зн");
			КодВлад = Т.ПолучитьЗначение(6,"Зн");
			
			Влад = ПолучитьЭл(ВидВлад,НаимВлад,КодВлад,"");						
			
			НовЗначение = ПолучитьЭл(ВидСпр,Наим,КодСпр,Влад);						
			
		ИначеЕсли Тип = "док:" Тогда                                    
			Т = СоздатьОбъект("ТаблицаЗначений");
			Т.Очистить();
			Т.НоваяКолонка("Зн");
			
			Значение = Сред(Значение,5);
			РазобратьСтроку(Значение,Т,"|");     
			
			ВидДок = Т.ПолучитьЗначение(1,"Зн");
			НомДок = Т.ПолучитьЗначение(2,"Зн");
			ДатДок = Т.ПолучитьЗначение(3,"Зн");			
			
			НовЗначение = ПолучитьДок(ВидДок,НомДок,ДатДок);			
			     
		ИначеЕсли Тип = "сче:" Тогда   
			Значение = Сред(Значение,5);
			Если НовЗначение = "-" Тогда
			    Значение = ПолучитьПустоеЗначение ("Счет");
			Иначе
				НовЗначение = СчетПоКоду(Значение);
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
	
	Возврат НовЗначение;
КонецФункции

// ===============================
Процедура ЗаполнитьСписокРекв (Восст="УР")       
	
//	спТекДок.УдалитьВсе();
	спРеквШ.УдалитьВсе();     
	спРеквТ.УдалитьВсе();     
	
	МД = Метаданные.Документ (спДок.ПолучитьЗначение (спДок.ТекущаяСтрока()));
	
	МаксДлина = 0;
	тУсл.УдалитьСтроки();
    
	тУсл.НоваяСтрока();
	тУсл.Реквизит = "НомерДок";
	тУсл.Представление = "Номер";     		
	тУсл.Тип = "Строка";
	тУсл.Длина = 20;
	тУсл.Точность = 0;		
	тУсл.Х = Перечисление.ДаНет.Нет;
	тУсл.Шапка = 1;
	
	тУсл.НоваяСтрока();
	тУсл.Реквизит = "ДатаДок";
	тУсл.Представление = "Дата";     		
	тУсл.Тип = "Дата";
	тУсл.Длина = 0;
	тУсл.Точность = 0;		
	тУсл.Х = Перечисление.ДаНет.Нет;
	тУсл.Шапка = 1;
	
	// шапка	
	Для Инд = 1 По МД.РеквизитШапки() Цикл
		спРеквШ.ДобавитьЗначение (МД.РеквизитШапки(Инд).Идентификатор,МД.РеквизитШапки(Инд).Представление());
		
		// условия
		Тип = МД.РеквизитШапки(Инд).Тип;		               		
		тУсл.НоваяСтрока ();         
		тУсл.Реквизит = СокрЛП(МД.РеквизитШапки(Инд).Идентификатор);
		РеквПр = СокрЛП(МД.РеквизитШапки(Инд).Представление());
				
		Если (Тип = "Справочник") или (Тип = "Документ") или (Тип = "Перечисление") Тогда
		    Вид = "."+СокрЛП(МД.РеквизитШапки(Инд).Вид);
		Иначе
			Вид = "";
		КонецЕсли;
	
		тУсл.Представление = СокрЛП(РеквПр);     		
		тУсл.Тип = Тип+Вид;
		тУсл.Длина = МД.РеквизитШапки(Инд).Длина;
		тУсл.Точность = МД.РеквизитШапки(Инд).Точность;		
		тУсл.Х = Перечисление.ДаНет.Нет;
		тУсл.Шапка = 1;
		
		МаксДлина = Макс (МаксДлина,СтрДлина(СокрЛП(РеквПр)));
	КонецЦикла;                                               
	
	// табличная часть
	Для Инд = 1 По МД.РеквизитТабличнойЧасти() Цикл
		спРеквТ.ДобавитьЗначение (МД.РеквизитТабличнойЧасти(Инд).Идентификатор,МД.РеквизитТабличнойЧасти(Инд).Представление());
		
		// условия
		Тип = МД.РеквизитТабличнойЧасти(Инд).Тип;		               		
		тУсл.НоваяСтрока ();         
		тУсл.Реквизит = СокрЛП(МД.РеквизитТабличнойЧасти(Инд).Идентификатор);
		РеквПр = СокрЛП(МД.РеквизитТабличнойЧасти(Инд).Представление());
				
		Если (Тип = "Справочник") или (Тип = "Документ") или (Тип = "Перечисление") Тогда
		    Вид = "."+СокрЛП(МД.РеквизитТабличнойЧасти(Инд).Вид);
		Иначе
			Вид = "";
		КонецЕсли;
	
		тУсл.Представление = СокрЛП(РеквПр);     		
		тУсл.Тип = Тип+Вид;
		тУсл.Длина = МД.РеквизитТабличнойЧасти(Инд).Длина;
		тУсл.Точность = МД.РеквизитТабличнойЧасти(Инд).Точность;		
		тУсл.Х = Перечисление.ДаНет.Нет;
		тУсл.Шапка = 0;
		
		МаксДлина = Макс (МаксДлина,СтрДлина(СокрЛП(РеквПр)));
	КонецЦикла;                 
	
	// общие реквизиты
	Для Инд = 1 По Метаданные.ОбщийРеквизитДокумента() Цикл		
		спРеквШ.ДобавитьЗначение (Метаданные.ОбщийРеквизитДокумента(Инд).Идентификатор,Метаданные.ОбщийРеквизитДокумента(Инд).Представление());
		
		// условия                                         
		Тип = Метаданные.ОбщийРеквизитДокумента(Инд).Тип;		               		
		тУсл.НоваяСтрока ();         
		тУсл.Реквизит = СокрЛП(Метаданные.ОбщийРеквизитДокумента(Инд).Идентификатор);
		РеквПр = СокрЛП(Метаданные.ОбщийРеквизитДокумента(Инд).Представление());
				
		Если (Тип = "Справочник") или (Тип = "Документ") или (Тип = "Перечисление") Тогда
		    Вид = "."+СокрЛП(Метаданные.ОбщийРеквизитДокумента(Инд).Вид);
		Иначе
			Вид = "";
		КонецЕсли;
	
		тУсл.Представление = СокрЛП(РеквПр);     		
		тУсл.Тип = Тип+Вид;
		тУсл.Длина = Метаданные.ОбщийРеквизитДокумента(Инд).Длина;
		тУсл.Точность = Метаданные.ОбщийРеквизитДокумента(Инд).Точность;		
		тУсл.Х = Перечисление.ДаНет.Нет;
		тУсл.Шапка = 0;
		
		МаксДлина = Макс (МаксДлина,СтрДлина(СокрЛП(РеквПр)));
	КонецЦикла;	
	
	тУсл.УстановитьПараметрыКолонки ("Представление","Строка",,,,МаксДлина,,1);
	тУсл.УстановитьПараметрыКолонки ("Х","Перечисление.ДаНет",1,,,3,,1);
	
	ТипДействия = спВид.ПолучитьЗначение(спВид.ТекущаяСтрока());
	Зн = ?(ТипДействия=3,1,0);
	ИзмВидКолонок(Зн);            
	ВозможноВосстановление = 0;
	Если спРеквШ.НайтиЗначение("Контрагент") <> 0  Тогда
		Если (спРеквШ.НайтиЗначение("Договор") <> 0) или (спРеквШ.НайтиЗначение("Заказ") <> 0) или (спРеквШ.НайтиЗначение("ДокументОснование") <> 0) Тогда
	    	ВозможноВосстановление = 1;	
		КонецЕсли;
	КонецЕсли;            
	Если Найти(Восст,"Р") <> 0 Тогда
	    ВосстановитьРеквизиты();   //реквизиты		
	КонецЕсли;                     
	Если Найти(Восст,"У") <> 0 Тогда
		ВосстановитьРеквизиты(0);  //условия 		
	КонецЕсли;	
	ИзмСписокДействий();
КонецПроцедуры                    

// ===============================
Процедура ЗаполнитьСписокДок()           	
	Инд = спДок.ТекущаяСтрока();
	СтароеЗн = ?(Инд=0,"РасходнаяНакладная",спДок.ПолучитьЗначение(Инд));
	
	спДок.УдалитьВсе();
	Для Инд  = 1 По Метаданные.Документ() Цикл
		  спДок.ДобавитьЗначение (Метаданные.Документ(Инд).Идентификатор,Метаданные.Документ(Инд).Представление());
	КонецЦикла;

	спДок.Сортировать();	
		
	Инд = спДок.НайтиЗначение (СтароеЗн);
	Инд = макс (Инд,1);
	спДок.ТекущаяСтрока (Инд);
	
    ЗаполнитьСписокРекв();		
КонецПроцедуры

// ===============================
Процедура ПриОткрытии()        
	рЗамещать = 1;
	ИБПр = 0;
	ТекстЛог = СоздатьОбъект("Текст");	
	ТекстЛог.Очистить();
	ИмяЛогФайла = КаталогИБ()+"NEW_STRU\_report.log";
	ИмяФайлаОтката = КаталогИБ()+"NEW_STRU\_backup.log";
	ТекстЛог.ДобавитьСтроку("Начало работы: "+СокрЛП(РабочаяДата())+" время: "+СокрЛП(ТекущееВремя())+" версия: "+Версия);
		
	ИзмСписокДействий();  
	ИзмДействие();
	
	Если ПустоеЗначение(ИмяФайла) = 1 Тогда    
	    ИмяФайла = КаталогИБ()+"!download.ddf";
	КонецЕсли;	                               
    
	рЗагр = 0;
	рОбр = 0;
	
	тУсл.Очистить();
	тУсл.НоваяКолонка ("Представление");
	тУсл.НоваяКолонка ("Реквизит","Строка");
	тУсл.НоваяКолонка ("Значение");
	тУсл.НоваяКолонка ("Тип");            
	тУсл.НоваяКолонка ("Длина");            
	тУсл.НоваяКолонка ("Точность");            	
	тУсл.НоваяКолонка ("НовоеЗначение",,,,"Новое значение");
	тУсл.НоваяКолонка ("Х","Перечисление.ДаНет");
	тУсл.НоваяКолонка ("Шапка","Число",1,0);
	
	ОчиститьОкноСообщений();    
	//Сообщить("Мастер обработки документов 'версия': "+СокрЛП(Версия)+". г.Харьков 2003.(Украина)","i");
	//Сообщить("нажмите кнопку '?' в правом нижнем углу для получения справки.","i");
	
	ЗаполнитьСписокДок();        
	Инд = спУсл.ТекущаяСтрока();
	спУсл.УдалитьВсе();
	спУсл.ДобавитьЗначение("Все","Все");
	спУсл.ДобавитьЗначение("Проведенные","Проведенные");
	спУсл.ДобавитьЗначение("НеПроведенные","Не проведенные");
	Инд = Макс(Инд,1);
	спУсл.ТекущаяСтрока(Инд);    
	
	Инд = спБолМен.ТекущаяСтрока();
	Инд = Макс(Инд,1);
	спБолМен.УдалитьВсе();
	спБолМен.ДобавитьЗначение (0,"=");
	спБолМен.ДобавитьЗначение (1,"<=");
	спБолМен.ДобавитьЗначение (2,"=>");
	спБолМен.ТекущаяСтрока(Инд);
	
	Инд = спСтр.ТекущаяСтрока();
	Инд = Макс(Инд,1);
	спСтр.УдалитьВсе();
	спСтр.ДобавитьЗначение (0,"точное соответствие");
	спСтр.ДобавитьЗначение (1,"вхождение в строку");
	спСтр.ТекущаяСтрока(Инд);
	
	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Реквизиты");
	Форма.Закладки.ДобавитьЗначение("Условия","Условия");
	Форма.ИспользоватьСлой("Основной, Общий",2);	
КонецПроцедуры

// ===============================
Процедура ПометитьРекв(Зн,сп)
	// пометить все реквизиты                        
	Если сп.РазмерСписка() = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	Если Зн = 3 Тогда
	    Зн = 1-сп.Пометка(1);	    
	КонецЕсли;                              
	
	Размер = сп.РазмерСписка();
	Для Инд = 1 По сп.РазмерСписка() Цикл
		сп.Пометка (Инд,Зн);   
		Процент = Цел(Инд/Размер*100);
		Состояние ("Пометка реквизитов: ["+Процент+"%]");
		ПоказатьИндикатор(Процент);
	КонецЦикла;		
КонецПроцедуры  

// ===============================
Процедура ОчиститьУсл(ТекПоз=0)
	тУсл.ВыбратьСтроки();                                   
	НачПоз = ?(ТекПоз=0,1,ТекПоз);
	КонПоз = ?(ТекПоз=0,тУсл.КоличествоСтрок(),ТекПоз);
	тУсл.Заполнить(ПолучитьПустоеЗначение(тУсл.НомерСтроки),НачПоз,КонПоз,"Значение");
	тУсл.Заполнить(ПолучитьПустоеЗначение(тУсл.НомерСтроки),НачПоз,КонПоз,"НовоеЗначение");
	тУсл.Заполнить(Перечисление.ДаНет.Нет,НачПоз,КонПоз,"Х");
		
	//Если Флаг = 0 Тогда      
	//	Пусто = ПолучитьПустоеЗначение (СокрЛП(тУсл.ПолучитьЗначение(тУсл.ТекущаяСтрока(),"Тип")));
	//    тУсл.УстановитьЗначение (тУсл.ТекущаяСтрока(),"Значение",Пусто);			
	//	Возврат;
	//КонецЕсли;
	//Пока тУсл.ПолучитьСтроку() = 1 Цикл
	//	Пусто = ПолучитьПустоеЗначение (СокрЛП(тУсл.ПолучитьЗначение(тУсл.ТекущаяСтрока(),"Тип")));
	//    тУсл.Значение = Пусто;
	//КонецЦикла;            
	
КонецПроцедуры

// ===============================
Функция УстДост()                
	//Кнопки(1);
	Фл = ?(спТекДок.ТекущаяСтрока()=0,0,1);
	Фл = Фл * Форма.спТекДок.Доступность();
	Форма.кОткр.Доступность(Фл); 
	Форма.кУдДок.Доступность(Фл); 	
	Форма.кМинусДок.Доступность(Фл); 	
	Форма.кПлюсДок.Доступность(Фл); 	
	Форма.кДобДок.Доступность(Форма.спТекДок.Доступность());	
	
	Фл = ?(спРеквТ.РазмерСписка()=0,0,1);
	Фл = Фл * Форма.спРеквТ.Доступность();
	Форма.кМинусТ.Доступность(Фл);
	Форма.кПлюсТ.Доступность(Фл);        
	Фл2 = ?(спРеквТ.ТекущаяСтрока()=0,0,1);
	Форма.кВверхТ.Доступность(Фл*Фл2*?(спРеквТ.ТекущаяСтрока()=1,0,1));
	Форма.кВНизТ.Доступность(Фл*Фл2*?(спРеквТ.ТекущаяСтрока()=спРеквТ.РазмерСписка(),0,1));
	
	Фл = ?(спРеквШ.РазмерСписка()=0,0,1);  
	Фл = Фл * Форма.спРеквШ.Доступность();
	Форма.кМинусШ.Доступность(Фл);
	Форма.кПлюсШ.Доступность(Фл);	      
	Фл2= ?(спРеквШ.ТекущаяСтрока()=0,0,1);
	Форма.кВверхШ.Доступность(Фл*Фл2*?(спРеквШ.ТекущаяСтрока()=1,0,1));
	Форма.кВНизШ.Доступность(Фл*Фл2*?(спРеквШ.ТекущаяСтрока()=спРеквШ.РазмерСписка(),0,1));
	
КонецФункции  
    
// ===============================
Функция ПоказатьТекУсл()
    Усл = тУсл.Значение;
	НовУсл = тУсл.НовоеЗначение;
	Если ПустоеЗначение (Усл) = 1 Тогда
	    Усл = "нет условия для "+Симв(34)+СокрЛП(тУсл.Представление)+Симв(34);
	Иначе
		Усл = Симв(34)+СокрЛП(тУсл.Представление)+Симв(34)+ " = "+Симв(34)+СокрЛП(Усл)+Симв(34);
	КонецЕсли;       
	ТипДействия = спВид.ПолучитьЗначение(спВид.ТекущаяСтрока());
	Если ТипДействия = 3 Тогда
		Если (ПустоеЗначение (НовУсл) = 1) и (ПустоеЗначение(тУсл.Значение)=1) и (тУсл.Х=Перечисление.ДаНет.Нет) Тогда
		    Усл = Усл+"
			|не задано новое значение для "+Симв(34)+СокрЛП(тУсл.Представление)+Симв(34);
		ИначеЕсли (ПустоеЗначение(НовУсл)=1) и (тУсл.Х=Перечисление.ДаНет.Да) Тогда
			Усл = Усл+"
			|новое значение = "+Симв(34)+"очистить!"+Симв(34);
		Иначе
			Усл = Усл+"
			|новое значение = "+Симв(34)+СокрЛП(НовУсл)+Симв(34);
		КонецЕсли;         
	КонецЕсли;
	Возврат Усл;
КонецФункции

// ОБРАБОТКА
// ===============================
// Назначение:
//		
// Аргументы:
//		
// Возвращает:
//		
Функция Откат()      
	Перем Док,Рекв;
	
	ТекстЛог.ДобавитьСтроку(" - - - - = = = = = = - - - -");
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": + Режим 'Откат' : "+СокрЛП(ИмяФайлаОтката));		    
	Если ФС.СуществуетФайл(ИмяФайлаОтката) = 0 Тогда
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! не найден файл отката : "+СокрЛП(ИмяФайлаОтката));		    
	    Возврат 0;
	КонецЕсли;
	Текст = СоздатьОбъект("Текст");
	Текст.Очистить();
	Текст.Открыть(ИмяФайлаОтката);
	Кнопки(0);          	
	НачатьТранзакцию();                           
	спТекДок.УдалитьВсе();
	КвоУд = 0;
	Для Инд = 1 По Текст.КоличествоСтрок() Цикл
		Значение = Текст.ПолучитьСтроку(Инд);
		Действие = Лев(СокрЛП(Значение),1);
		Зн = Прав(СокрЛП(Значение),СтрДлина(Значение)-1);
		Если Действие = "В" Тогда                             // вид документа
			ВидДок = Зн;
		    Док = СоздатьОбъект("Документ."+ВидДок);		
		ИначеЕсли Действие = "Д" Тогда                        // документ новый
		    Если Док.НайтиДокумент(ЗначениеИзСтрокиВнутр(Зн)) = 0 Тогда
				ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка нахождения док : "+ВидДок+":"+ЗН);		    
		        Возврат 0;
		    КонецЕсли;
		ИначеЕсли Действие = "Р" Тогда                        // реквизит
			Рекв = Зн;
		ИначеЕсли Действие = "З" Тогда						  // значение
			Док.УстановитьАтрибут(Рекв,ЗначениеИзСтрокиВнутр(Зн));
		ИначеЕсли Действие = "Н" Тогда                        // новая строка
			Док.НоваяСтрока();                                               
		ИначеЕсли Действие = "С" Тогда                        // сохранить
			Попытка
				Док.Записать();         
				КвоУД = КвоУД + 1;
				Если спТекДок.НайтиЗначение(Док.ТекущийДокумент()) = 0 Тогда
					спТекДок.ДобавитьЗначение(Док.ТекущийДокумент());    
					спТекДок.п(Док.ТекущийДокумент());    
				КонецЕсли;								
			Исключение   
				ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка записи док : "+ВидДок+":"+Док);		    
			КонецПопытки;	
		КонецЕсли;
		Процент = Цел(Инд/Текст.КоличествоСтрок()*100);		
		Состояние ("Восстановление документов из резерва: ["+СокрЛП(Процент)+"%]");
		ПоказатьИндикатор(Процент);
	КонецЦикла;	          
	ЗафиксироватьТранзакцию();
	ПометитьРекв(1,спТекДок);
	Сообщить ("Успешно восстановлено: ["+СокрЛП(КвоУд)+"] док.");
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": успешно восстановлено : "+ВидДок+"["+СокрЛП(КвоУд)+"]");		    
	Кнопки(1);
КонецФункции //Откат


// ОБРАБОТКА
// ===============================
Функция ПроверитьРеквизит(Реквизит,ДокЗначение,Значение)
	// если нет условия, то все о.к.
	Если ПустоеЗначение(Значение) = 1 Тогда
	    Возврат 1;
	КонецЕсли;    
	
	// -- проверка
	Если ТипЗначенияСтр(Значение) = "Строка" Тогда
		Если рРег = 1 Тогда
		    Значение = Нрег (Значение);				
			ДокЗначение = Нрег(ДокЗначение);
		КонецЕсли;                     
	    ДокЗначение = СокрЛП(ДокЗначение);			
		Значение = СокрЛП(Значение);			
		Тип = спСтр.ПолучитьЗначение (спСтр.ТекущаяСтрока()); // тип сверки
		Если (Тип = 0) и (Значение <> ДокЗначение) Тогда
		    Возврат 0;                              
		ИначеЕсли (Тип = 1) и (Найти (ДокЗначение,Значение)=0) Тогда
			Возврат 0;
		КонецЕсли;
		Возврат 1;
	ИначеЕсли ТипЗначенияСтр(Значение) = "Число" Тогда
		Тип = спБолМен.ПолучитьЗначение (спБолМен.ТекущаяСтрока()); // тип сверки
		Если (Тип = 0) и (Значение<>Число(ДокЗначение)) Тогда
		    Возврат 0;
		ИначеЕсли (Тип = 1) и (Число(ДокЗначение)>Значение) Тогда
		    Возврат 0;
		ИначеЕсли (Тип = 2) и (Число(ДокЗначение)<Значение) Тогда
		    Возврат 0;
		КонецЕсли;
		Возврат 1;		
	ИначеЕсли ТипЗначения(ДокЗначение) = 11 Тогда // справочник   			 
	     спПров = СоздатьОбъект("СписокЗначений");
		 спПров.УдалитьВсе();
		 спПров.ДобавитьЗначение(Значение);			 
		 Если спПров.Принадлежит (ДокЗначение) = 0 Тогда // принадлежит ли группе спр. или = элементу ?
		     Возврат 0;
	 	 КонецЕсли;
         Возврат 1;
	ИначеЕсли ДокЗначение <> Значение Тогда
         Возврат 0;        
	КонецЕсли;
	Возврат 1;    
КонецФункции

// ===============================
Процедура Обработать()
	Индикатор = "";
	Форма.Обновить();
	
	Действие = "";
	ТипДействия = спВид.ПолучитьЗначение(спВид.ТекущаяСтрока(),Действие);
	
	ТекстЛог.ДобавитьСтроку(" - - - - = = = = = = - - - -");
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": Режим 'Обработка' :"+СокрЛП(Действие));
	
	Кнопки(0);
	Если ТипДействия = 7 Тогда // откат
		Если Откат() = 0 Тогда                    
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": !Откат не прошел!"+СокрЛП(Действие));
		    Предупреждение("Откат не получился!");
		КонецЕсли;		
		Возврат;
	КонецЕсли;	
    
	Если ТипДействия = 8 Тогда // Резерв
		Если ВыполнитьРезерв() = 0 Тогда                    
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": !Резерв не прошел!"+СокрЛП(Действие));
		    Предупреждение("Резерв не получился!");
		КонецЕсли;		
		Возврат;
	КонецЕсли;	
	
	Если Вопрос ("Рекомендуется сделать РЕЗЕРВ обрабатываемых данных
	|(будет возможность сделать откат изменений путем выбора пункта"+Симв(34)+"Откат изменений"+Симв(34)+" )","Да+Нет") ="Да" Тогда
	    Если ВыполнитьРезерв(0) = 0 Тогда
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! Резерв данных не удался!");
	        Возврат;
	    КонецЕсли;
	КонецЕсли;
	
	тДок = СоздатьОбъект("ТаблицаЗначений");
	тДок.Очистить();
	тДок.НоваяКолонка("Док");
	
	Кво = 0;
	Размер = 0;
	Для Инд = 1 По спТекДок.РазмерСписка() Цикл
		Если спТекДок.Пометка(Инд) = 0 Тогда
		    Продолжить;
		КонецЕсли;        
		Док = спТекДок.ПолучитьЗначение(Инд);
		Если ПроверитьУсл(Док) = 0 Тогда
		    Продолжить;
		КонецЕсли;   
		
		Размер = Размер + 1;
		тДок.НоваяСтрока();
		тДок.Док = Док;
	КонецЦикла;	
	
	Если Размер = 0 Тогда
		Предупреждение("Нет помеченных документов!");
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": Нет помеченных документов!");
	    Возврат;
	КонецЕсли;  	
		
	ВидДок = (спДок.ПолучитьЗначение (спДок.ТекущаяСтрока()));
	
	НачатьТранзакцию();			
	Док = СоздатьОбъект("Документ."+ВидДок);
	
	тДок.ВыбратьСтроки();
	Пока тДок.ПолучитьСтроку() = 1 Цикл

		Док.НайтиДокумент(тДок.Док.ТекущийДокумент());
		Док.СделатьНеПроведенным();
		
	// НАЧАЛО ОБРАБОТКИ РЕКВИЗИТОВ
		
		// --- Пометка удаления
		Если ТипДействия = 4 Тогда
		    Док.СнятьПометкуУдаления();			
		ИначеЕсли ТипДействия = 5 Тогда 
		    Док.Удалить(0);
		КонецЕсли;
		
		// --- Восстановление контрагентов
		Если ТипДействия = 6 Тогда              
			СтарыйКонтр = Док.Контрагент;
			Если спРеквШ.НайтиЗначение("Договор") <> 0 Тогда
				Если ПустоеЗначение(Док.Договор) = 0 Тогда
				    Док.Контрагент = Док.Договор.Контрагент;    
				КонецЕсли;					
			КонецЕсли;
			
			Если спРеквШ.НайтиЗначение("Заказ") <> 0 Тогда                                        
				Если ПустоеЗначение(Док.Заказ) = 0 Тогда
					Док.Контрагент = Док.Заказ.Контрагент;    
				КонецЕсли;	
			КонецЕсли;
			
			Если спРеквШ.НайтиЗначение("ДокументОснование") <> 0 Тогда                                        
				Если ПустоеЗначение(Док.ДокументОснование) = 0 Тогда
					Док.Контрагент = Док.ДокументОснование.Контрагент;    
				КонецЕсли;	
			КонецЕсли;
			
			Если Док.Контрагент <> СтарыйКонтр Тогда
		         Если ПустоеЗначение(СтарыйКонтр) = 1 Тогда
		             СтарыйКонтр = "Пустое значение!";
				 КонецЕсли; 
		         Позиция = спТекДок.НайтиЗначение(Док.ТекущийДокумент());
				 Если Позиция <> 0 Тогда
				     спТекДок.Пометка(Позиция,1);
				 КонецЕсли;  
		         Сообщить ("Восстановление контрагентов. Документ: "+СокрЛП(Док)+" Изменение: "+СокрЛП(СтарыйКонтр)+" => "+СокрЛП(Док.Контрагент),"i");
				 ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": + Восстановление контрагентов: Документ: "+СокрЛП(Док)+" Изменение: "+СокрЛП(СтарыйКонтр)+" => "+СокрЛП(Док.Контрагент)+" Документ: "+СокрЛП(Док));
			КонецЕсли;	        
		КонецЕсли;
		
		// --- Установка значений         
		Если ТипДействия = 3 Тогда
			тУсл.ВыбратьСтроки();		
			Пока тУсл.ПолучитьСтроку() = 1 Цикл			
				Если (тУсл.Х = Перечисление.ДаНет.Нет) и (ПустоеЗначение(тУсл.НовоеЗначение) = 1) Тогда					
					Продолжить;
				КонецЕсли;	                                                                                        		
				//--- Установка нового значения
			    Если тУсл.Шапка = 1 Тогда
					// шапка
			        Попытка         
						СтароеЗн = "н/д";
						Попытка
							СтароеЗн = Док.ПолучитьАтрибут(тУсл.Реквизит);
						Исключение           
							ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! Не удалось получить реквизит документа: "+СокрЛП(Док)+"; Реквизит: "+СокрЛП(тУсл.Реквизит)+" = "+СокрЛП(тУсл.НовоеЗначение)+" Документ: "+СокрЛП(Док));			
						КонецПопытки;	
						// ------------------
						Если ПустоеЗначение(СтароеЗн) = 1 Тогда
						    СтароеЗн = "пустое!";
						КонецЕсли;                                                       
						НовЗн = ?(ПустоеЗначение(тУсл.НовоеЗначение)=1,"пустое!",тУсл.НовоеЗначение);
						Док.УстановитьАтрибут(СокрЛП(тУсл.Реквизит), тУсл.НовоеЗначение);			
						ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": + Изменение реквизитов: ["+СокрЛП(тУсл.Реквизит)+"] было: "+СокрЛП(СтароеЗН)+" => "+СокрЛП(НовЗн));						
					Исключение  
						Сообщить("Не удалось обновить реквизит документа: "+СокрЛП(Док)+"; Реквизит: "+СокрЛП(тУсл.Реквизит)+" = "+СокрЛП(тУсл.НовоеЗначение),"!");			
						ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! Не удалось обновить реквизит документа: "+СокрЛП(Док)+"; Реквизит: "+СокрЛП(тУсл.Реквизит)+" = "+СокрЛП(тУсл.НовоеЗначение)+" Документ: "+СокрЛП(Док));			
					КонецПопытки;	
				Иначе
					// табл часть
					Док.ВыбратьСтроки();              
					Реквизит = СокрЛП(тУсл.Реквизит);
					Пока Док.ПолучитьСтроку() = 1 Цикл						
						Если ПроверитьРеквизит(Реквизит,Док.ПолучитьАтрибут(Реквизит),тУсл.Значение) = 0 Тогда
						    Продолжить;
						КонецЕсли;         
						Док.УстановитьАтрибут(Реквизит,тУсл.НовоеЗначение);
					КонецЦикла;
			    КонецЕсли;							
			КонецЦикла;	// условия	
		КонецЕсли;		
			
		// --- Запись сделанных изменений
		Попытка	
			Док.Записать();                                   
			// ---	Проведение 	
			Если рПроводить = 1 Тогда
		    	Док.Провести();
			КонецЕсли;    
			
			Поз = спТекДок.НайтиЗначение(Док.ТекущийДокумент());
			Если Поз <> 0 Тогда
			    спТекДок.Пометка(Поз,0);
			КонецЕсли;
			Кво = Кво + 1;                                    
			Процент = Цел(тДок.НомерСтроки/Размер*100);
			Состояние ("Обработано: ( "+Процент+" % )");
			ПоказатьИндикатор(Процент);
		Исключение
			Сообщить("Ошибка записи документа: "+СокрЛП(Док),"!");
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! Ошибка записи документа: "+СокрЛП(Док));			
		КонецПопытки;			
	КонецЦикла;	
	ЗафиксироватьТранзакцию();
	Сообщить("Обработано: ["+СокрЛП(Кво)+"] документов.","i");
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": Обработано: ["+СокрЛП(Кво)+"/"+СокрЛП(спТекДок.РазмерСписка())+"] документов.");
	
	Кнопки(1);
КонецПроцедуры

// АВТО СОЗДАНИЕ РЕКВИЗИТОВ
// ===============================
Функция ИнитБазыПереноса()
	// проверка пути
	Если ФС.СуществуетФайл(КаталогИБПереноса+"\1cv7.md")=0 тогда
		Сообщить ("Неправильно указан каталог информационной базы-приемника!
		|Авто создание реквизитов невозможно!","!");
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": фатальная ошибка: Неправильный каталог ИБ переноса реквизитов: "+КаталогИБПереноса);
		рСозд = 0;
		Возврат 0;
	КонецЕсли;
                                     
	// Инициализируем ИБ-приемник
	ИБПр=CreateObject("V77.Application");
	Если ИБПр.Initialize(ИБПр.RMTrade, "/d "+КаталогИБПереноса+
						" /m /n"+ИмяПользователя(), "No_splash_show") =0 тогда
		Сообщить ("Ошибка открытия информационной базы для переноса реквизитов!","!");
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": фатальная ошибка: Ошибка открытия ИБ: "+КаталогИБПереноса+" пользователь: "+СокрЛП(ИмяПользователя()));
		рСозд = 0;
		Возврат 0;
	КонецЕсли;       
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": + Успешное открытие ИБ: "+КаталогИБПереноса);
	Возврат 1;
КонецФункции

// ЗАГРУЗКА
// ===============================
Процедура Загрузить()	    	
	Индикатор = "";
	Форма.Обновить();
	
	ОчиститьОкноСообщений();
	Если Вопрос("ВНИМАНИЕ! перед загрузкой документов РЕКОМЕНДУЕТСЯ сохранить информационную базу в архив!"+РазделительСтрок+"Вы уверены что хотите продолжить?","Да+Нет") = "Нет" Тогда
	    Возврат;
	КонецЕсли;             
		
	ТекстЛог.ДобавитьСтроку(" - - - - = = = = = = - - - -");
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": Режим 'Загрузка документов'");
	
	Если ФС.СуществуетФайл(ИмяФайла) = 0 Тогда
	    Предупреждение ("ФАЙЛ: "+СокрЛП(ИмяФайла)+" не найден!");
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": фатальная ошибка: ФАЙЛ: "+СокрЛП(ИмяФайла)+" - не найден!");
		Возврат;
	КонецЕсли;
	
	Кнопки(0);  
	
	Текст = СоздатьОбъект("Текст");
	Текст.Очистить();
	Текст.Открыть(ИмяФайла); 	
	
	Размер = Текст.КоличествоСтрок();
	
	ТаблТ = СоздатьОбъект("ТаблицаЗначений");;
	ТаблТ.Очистить();		   	
	Кво = 0;    //кво новых док             
	КвоОбн = 0; //кво обновленных док
		
	// оперделим первый реквизит (чтобы знать когда менять строку в табличной части!)
	// появился этот реквизит - следующая строка
	
	ПервРекв = "";
	ПровВерсия = "";
	КаталогИБПереноса = "";
	
	спТекДок.УдалитьВсе();
//	НачатьТранзакцию();
	Для Инд = 1 По Текст.КоличествоСтрок() Цикл
		Значение = Текст.ПолучитьСтроку(Инд);
		// обработка полученных значений
		Если ПустоеЗначение(Значение) = 1 Тогда
		    Продолжить;
		КонецЕсли;         
		 
		Поз = Найти(Значение,"|");       
		
		// проверка версии
		Если (Поз = 0) и (Лев(Значение,4)="вер:") Тогда
		    ПровВерсия = Сред(Значение,5);
			Если СокрЛП(ПровВерсия) <> Версия Тогда                                                   
				ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+":  - Несоответствие версий! Версия обработки: ["+Версия+"], а версия файла ["+ПровВерсия+"]!");
				Сообщить("Версия обработки: ["+Версия+"], а версия файла ["+ПровВерсия+"]!","!");
				Сообщить("Возможна не корректная работа обработки из-за несоответствия версий!","!");
			    Если Вопрос("Внимание! Выгрузка была осуществлена из более старой версии!"+РазделительСтрок+"Все равно продолжить?","Да+Нет")="Нет" Тогда
					Сообщить("загрузка остановлена: [несоответствие версий]!","!");
					ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+":  - загрузка остановлена!");
					Кнопки(1);
			        Возврат;
				Иначе
					Сообщить("загрузка продолжена несмотря на: [несоответствие версий]!","!");
					ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+":  ! загрузка продолжена!");
			    КонецЕсли;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если ПустоеЗначение(ПровВерсия) = 1 Тогда
			Сообщить("Загружаемый файл имеет не верный формат! Повторите выгрузку данных.","!");    
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+":  ! не верный формат файла !");
		    Кнопки(1);
			Возврат;
		КонецЕсли;
		
		// путь ИБ выгрузки
		Если (Поз = 0) и (Лев(Значение,7)="ПутьИБ:") Тогда
		    КаталогИБПереноса = Сред(Значение,8); 
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+":  каталог ИБ выгрузки данных: "+СокрЛП(КаталогИБПереноса));
			Если рСозд = 0 Тогда
			    Продолжить;
			КонецЕсли;     
			// -------------
			Если ПустоеЗначение(ИБПр) = 0 Тогда
				// база уже открыта!
			    Продолжить;
			КонецЕсли;   
			// инит базы
			Если ИнитБазыПереноса() = 0 Тогда
			    Предупреждение ("Ошибка находждения базы из которой были выгружены документы или
				|ошибка инициализации ИБ!
				|авто восстановление реквизитов не доступно!");
				рСозд = 0;             
				Если Вопрос("Все равно продолжить?","Да+Нет") = "Нет" Тогда
				    Возврат;
				КонецЕсли;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если Поз = 0 Тогда
			//**Лида (Если длина неограниченной длины, тогда выдается сообщение)
		//	Сообщить("Неправильный формат строки: "+СокрЛП(Инд)+" = "+СокрЛП(Значение),"!");
			ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+":  - не верный формат строки: ["+СокрЛП(Инд)+"] = "+СокрЛП(Значение));
			Продолжить;
		КонецЕсли;     
			
		// начало загрузки
		ПервЗн = Лев(Значение,Поз-1);		
				
		Если Лев(ПервЗн,9) = "НовыйДок:" Тогда 
			ПервРекв = "";
			Табл = СоздатьОбъект("ТаблицаЗначений");
			Табл.Очистить();
			Табл.НоваяКолонка("Зн");
			РазобратьСтроку(Значение,Табл,"|");
									
		   	ДокВид = Табл.ПолучитьЗначение(2,"Зн");
		   	ДатДок = Табл.ПолучитьЗначение(3,"Зн");
		   	НомДок = Табл.ПолучитьЗначение(4,"Зн");		   	
		   	
		   	Док = СоздатьОбъект("Документ."+ДокВид);    		   			   			   	
			Обновить = 0;		   			
			Если рЗамещать = 1 Тогда
				Если Док.НайтиПоНомеру(НомДок,ДатДок,ДокВид) = 0 Тогда
		   	    	Док.Новый();
		            Док.НомерДок = НомДок;					
				Иначе
					Док.СделатьНеПроведенным();
					Если Док.КоличествоСтрок() <> 0 Тогда
					    Док.УдалитьСтроки();
					КонецЕсли;					
					Обновить = 1;
		   		КонецЕсли;		
		   	Иначе  
		   		Док.Новый();     				   		
			КонецЕсли;                 
	
		   	Док.ДатаДок = Дата(ДатДок);
			ДатаДокумента = Док.ДатаДок;		   	
		ИначеЕсли Лев(ПервЗн,9) = "Записать:" Тогда
		   	// табл часть
		   	Если ТаблТ.КоличествоСтрок() <> 0 Тогда 
		   		Если Док.Вид()="Операция" тогда
		   			Док.Записать();
		   			Опер=СоздатьОбъект("Операция");
		   			Если Опер.НайтиОперацию(Док)=1 тогда
		   				ТаблТ.выбратьСтроки();
		   				Пока ТаблТ.ПолучитьСтроку()=1 Цикл
		   					Опер.НоваяПроводка();
		   					Опер.Дебет.Счет=ТаблТ.СчетДт;
		   					Опер.Дебет.Субконто(1,ТаблТ.СубконтоДт1);
		   					Опер.Дебет.Субконто(2,ТаблТ.СубконтоДт2);
		   					Опер.Дебет.Субконто(3,ТаблТ.СубконтоДт3);
		   					Опер.Кредит.Счет=ТаблТ.СчетКт;
		   					Опер.Кредит.Субконто(1,ТаблТ.СубконтоКт1);
		   					Опер.Кредит.Субконто(2,ТаблТ.СубконтоКт2);
		   					Опер.Кредит.Субконто(3,ТаблТ.СубконтоКт3);
		   					Опер.Количество=ТаблТ.Количество;
		   					Опер.Сумма=ТаблТ.Сумма;
		   					Опер.ВалСумма=ТаблТ.ВалСумма; 
		   					Опер.Валюта=ТаблТ.Валюта;
		   				КонецЦикла;
		   				Опер.Записать();
		   			иначе
		   				Сообщить("Операция не найдена");		   				
		   			КонецЕсли;          
		   		иначе
		   			Док.ЗагрузитьТабличнуюЧасть(ТаблТ);		   		
		   		КонецЕсли;
		   	КонецЕсли;
		   	ТаблТ.Очистить();		   
	   			
		   	Если Док.Вид()<>"Операция" тогда
		   		Док.Записать();
		   		
		   		Если рПроводить = 1 Тогда
		   			Попытка
		   				Док.Провести();
		   			исключение
		   			КонецПопытки;
		   		КонецЕсли;
		   	КонецЕсли;
			
			Если спТекДок.НайтиЗначение(Док.ТекущийДокумент()) = 0 Тогда
				спТекДок.ДобавитьЗначение(Док.ТекущийДокумент());    
			КонецЕсли;
			
			Если Обновить = 0 Тогда
				Кво = Кво + 1;   
			Иначе
				КвоОбн = КвоОбн + 1;
			КонецЕсли;
			
		ИначеЕсли ПервЗн = "ТабличнаяЧасть" Тогда
		   	Табл = СоздатьОбъект("ТаблицаЗначений");
			Табл.Очистить();
			Табл.НоваяКолонка("Зн");
			РазобратьСтроку(Значение,Табл,",");
			Табл.УдалитьСтроку(1); // "Табличная часть|"
			Табл.ВыбратьСтроки();
			// заполним колонки
			Пока Табл.ПолучитьСтроку() = 1 Цикл
				ТаблТ.НоваяКолонка(Табл.Зн);
			КонецЦикла;    			
		ИначеЕсли Лев(ПервЗн,1) = "!" Тогда
			// шапка
			Реквизит = Сред(ПервЗн,2);
			РеквЗн = Преобразовать(Сред(Значение,Поз+1),1);			
			Если ПустоеЗначение(РеквЗн) = 0 Тогда
			    Если ТипЗначенияСтр(РеквЗн) = "Справочник" Тогда
					Попытка
						Док.УстановитьАтрибут(Реквизит,РеквЗн.ТекущийЭлемент());				
					Исключение   
						ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": !! ошибка установки реквизита: "+Реквизит+"="+РеквЗн);
					КонецПопытки;
				ИначеЕсли ТипЗначенияСтр(РеквЗн) = "Документ" Тогда
					Попытка
						Док.УстановитьАтрибут(Реквизит,РеквЗн.ТекущийДокумент());
					Исключение   
						ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": !! ошибка установки реквизита: "+Реквизит+"="+РеквЗн);
					КонецПопытки;	
				Иначе
					Попытка
						Док.УстановитьАтрибут(Реквизит,РеквЗн);
					Исключение   
						ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": !! ошибка установки реквизита: "+Реквизит+"="+РеквЗн);
					КонецПопытки;	
				КонецЕсли;                                                                         
			Иначе       
				Попытка					
					Док.УстановитьАтрибут(Реквизит,РеквЗн);
				Исключение   
					ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": !! ошибка установки реквизита: "+Реквизит+"="+РеквЗн);					
				КонецПопытки;	
			КонецЕсли;
		Иначе         
			Реквизит = ПервЗн;
			Если ПустоеЗначение (ПервРекв) = 1 Тогда
			    ПервРекв = Реквизит;
			КонецЕсли;
			Если ПервРекв = Реквизит Тогда
			    ТаблТ.НоваяСтрока();			
			КонецЕсли;			
			
			РеквЗн = Преобразовать(Сред(Значение,Поз+1),1);			
			Если ПустоеЗначение(РеквЗн) = 0 Тогда
			    Если ТипЗначенияСтр(РеквЗн) = "Справочник" Тогда
					ТаблТ.УстановитьЗначение(ТаблТ.НомерСтроки,Реквизит,РеквЗн.ТекущийЭлемент());    						
				ИначеЕсли ТипЗначенияСтр(РеквЗн) = "Документ" Тогда
					ТаблТ.УстановитьЗначение(ТаблТ.НомерСтроки,Реквизит,РеквЗн.ТекущийДокумент());    			
				Иначе
					ТаблТ.УстановитьЗначение(ТаблТ.НомерСтроки,Реквизит,РеквЗн);    			
				КонецЕсли;                                                                         
			Иначе
				ТаблТ.УстановитьЗначение(ТаблТ.НомерСтроки,Реквизит,РеквЗн);    			
			КонецЕсли;			
		КонецЕсли;     		         
		Процент = Цел(Инд/Размер*100);
		Состояние("Загружено: ["+СокрЛП(Процент)+"%]");
		ПоказатьИндикатор(Процент);
	КонецЦикла;	
	//ЗафиксироватьТранзакцию(); 
	Если Кво <> 0 Тогда
		Сообщить("Загружено: ["+Кво+"] документов!","i");    
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": Загружено: ["+Кво+"/"+СокрЛП(спТекДок.РазмерСписка())+"] документов!");
	КонецЕсли;
	Если КвоОбн <> 0 Тогда
		Сообщить("Обновлено: ["+КвоОбн+"] документов!","i");    
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": Обновлено: ["+Кво+"/"+СокрЛП(спТекДок.РазмерСписка())+"] документов!");
	КонецЕсли;
	
	ПриВыбореЗакладки(,"Основной");
	Кнопки(1);	
КонецПроцедуры


// ВЫГРУЗКА

// ===============================
Процедура ВыгрузитьВФайл()     
	Текст = СоздатьОбъект("Текст");
	Текст.Очистить();
	
	тДок = СоздатьОбъект("ТаблицаЗначений");
	тДок.Очистить();
	тДок.НоваяКолонка("Док");
	
	Размер = 0;
	Для Инд = 1 По спТекДок.РазмерСписка() Цикл
		Если спТекДок.Пометка(Инд) = 0 Тогда
		    Продолжить;
		КонецЕсли;     
		Размер = Размер + 1;
		тДок.НоваяСтрока();
		тДок.Док = спТекДок.ПолучитьЗначение(Инд);
	КонецЦикла;	
	
	Если Размер = 0 Тогда
		Предупреждение("Нет помеченных документов!");
	    Возврат;
	КонецЕсли;  	
	
	МД = Метаданные.Документ (спДок.ПолучитьЗначение (спДок.ТекущаяСтрока()));
	
	Текст.ДобавитьСтроку("вер:"+СокрЛП(Версия));    
	КаталогИБПереноса = СокрЛП(КаталогИБ());
	Если Прав(КаталогИБПереноса,1) = "\" Тогда
	    КаталогИБПереноса = Лев(КаталогИБПереноса,СтрДлина(КаталогИБПереноса)-1);
	КонецЕсли;
	Текст.ДобавитьСтроку("ПутьИБ:"+КаталогИБПереноса);
			
	тДок.ВыбратьСтроки();
	Пока тДок.ПолучитьСтроку() = 1 Цикл
		Док = тДок.Док;
	    //*********** Лида
		ВД=Док.Вид();
		номерПозиции =	СпДок.НайтиЗначение(ВД);
		СпДок.ТекущаяСтрока(номерПозиции);
		
		ЗаполнитьСписокРекв ();
		//***********
		МД = Метаданные.Документ (Док.вид());
		Текст.ДобавитьСтроку("НовыйДок:"+"|"+СокрЛП(Док.Вид())+"|"+СокрЛП(Док.ДатаДок)+"|"+СокрЛП(Док.НомерДок)); //Данные док
		// Шапка		           
		Для Н=1 По Метаданные.Документ(ВД).РеквизитШапки() Цикл
			//Рекв=Док.ПолучитьАтрибут(Метаданные.Документ(ВД).РеквизитШапки(Н));
			Рекв = МД.РеквизитШапки(н).Идентификатор;
			Значение = Док.ПолучитьАтрибут(Рекв);
			Если ТипЗначения(Значение) > 3 Тогда
				Попытка
					Вид = МД.РеквизитШапки(Рекв).Вид;                   
				Исключение                                              
					Вид = Метаданные.ОбщийРеквизитДокумента(Рекв).Вид;                   
				КонецПопытки;	
				Вид = ?(ПустоеЗначение(Вид)=0,Вид,"-");				
			Иначе
				Вид = "-";
			КонецЕсли;
					
			Значение = Преобразовать(Значение,Вид);
			Текст.ДобавитьСтроку("!"+Рекв+"|"+Значение); //значение реквизита		
		КонецЦикла;
		
		// Табличная Часть
				
		РеквТ = спНужРеквТ.ВСтрокуСРазделителями();
		РеквТ = СтрЗаменить(РеквТ,Симв(34),"");
				
		РеквТ="";
		Для Н=1 По Метаданные.Документ(ВД).РеквизитТабличнойЧасти() Цикл
			Рекв = МД.РеквизитТабличнойЧасти(н).Идентификатор;
			РеквТ=РеквТ+""+Рекв+",";
		КонецЦикла;                        
       
		Если Док.Вид()="Операция" тогда
			СписокРеквОпер=СоздатьОбъект("СписокЗначений");
			СписокРеквОпер.ДобавитьЗначение("СчетДт");
			СписокРеквОпер.ДобавитьЗначение("СубконтоДт1");
			СписокРеквОпер.ДобавитьЗначение("СубконтоДт2");
			СписокРеквОпер.ДобавитьЗначение("СубконтоДт3");
			СписокРеквОпер.ДобавитьЗначение("СчетКт");
			СписокРеквОпер.ДобавитьЗначение("СубконтоКт1");
			СписокРеквОпер.ДобавитьЗначение("СубконтоКт2");
			СписокРеквОпер.ДобавитьЗначение("СубконтоКт3");
			СписокРеквОпер.ДобавитьЗначение("Количество");
			СписокРеквОпер.ДобавитьЗначение("Валюта");
			СписокРеквОпер.ДобавитьЗначение("ВалСумма");
			СписокРеквОпер.ДобавитьЗначение("Сумма");
			РеквТ="";
			Для н=1 по СписокРеквОпер.РазмерСписка() Цикл        
				Если н=СписокРеквОпер.РазмерСписка() тогда
					РеквТ=РеквТ+СписокРеквОпер.ПолучитьЗначение(н);
				иначе                                              
					РеквТ=РеквТ+СписокРеквОпер.ПолучитьЗначение(н)+",";
				КонецЕсли;
			КонецЦикла;
			Текст.ДобавитьСтроку("ТабличнаяЧасть|,"+РеквТ);
			
			//Для Н=1 По Метаданные.Документ(ВД).РеквизитТабличнойЧасти() Цикл
              Опер=СоздатьОбъект("Операция");
			  Опер.НайтиОперацию(Док);
			  Опер.ВыбратьПроводки();
			  Пока Опер.ПолучитьПроводку()=1 Цикл 
			  	Для н=1 по СписокРеквОпер.РазмерСписка() Цикл
			  		Рекв = СписокРеквОпер.ПолучитьЗначение(н);
			  		Значение="";
			  		Если Рекв="СчетДт" тогда
			  			Значение = Опер.Дебет.Счет;
			  		иначеЕсли Рекв="СчетКт" тогда
			  			Значение = Опер.Кредит.Счет;
			  		иначеЕсли Рекв="СубконтоДт1" тогда
			  			Значение = Опер.Дебет.Субконто(1);
			  		иначеЕсли Рекв="СубконтоДт2" тогда
			  			Значение = Опер.Дебет.Субконто(2);
			  		иначеЕсли Рекв="СубконтоДт3" тогда
			  			Значение = Опер.Дебет.Субконто(3);
			  		иначеЕсли Рекв="СубконтоКт1" тогда
			  			Значение = Опер.Кредит.Субконто(1);
			  		иначеЕсли Рекв="СубконтоКт2" тогда
			  			Значение = Опер.Кредит.Субконто(2);
			  		иначеЕсли Рекв="СубконтоКт3" тогда
			  			Значение = Опер.Кредит.Субконто(3);
			  		иначеЕсли Рекв="Количество" тогда
			  			Значение = Опер.Количество;
			  		иначеЕсли Рекв="Валюта" тогда
			  			Значение = Опер.Валюта;
			  		иначеЕсли Рекв="ВалСумма" тогда
			  			Значение = Опер.ВалСумма;
			  		иначеЕсли Рекв="Сумма" тогда
			  			Значение = Опер.Сумма;
			  		КонецЕсли;

			  		// преобразование в тип значения	
			  		Если ТипЗначения(Значение) > 3 Тогда
			  			Вид = Значение.Вид();//МД.РеквизитТабличнойЧасти(Рекв).Вид;
			  			Вид = ?(ПустоеЗначение(Вид)=0,Вид,"-");				
			  		Иначе
			  			Вид = "-";
			  		КонецЕсли;
			  		Значение = Преобразовать(Значение,Вид);
			  		Текст.ДобавитьСтроку(Рекв+"|"+Значение); // значение рекв. т.ч.
			  	КонецЦикла;
			КонецЦикла;
			
		иначе
			Док.ВыгрузитьТабличнуюЧасть(ТаблТ,РеквТ);
			Если ТаблТ.КоличествоСтрок() <> 0 Тогда
				Текст.ДобавитьСтроку("ТабличнаяЧасть|,"+РеквТ);
			КонецЕсли;
			
			ТаблТ.ВыбратьСтроки();
			Пока ТаблТ.ПолучитьСтроку() = 1 Цикл 
				Для Н=1 По Метаданные.Документ(ВД).РеквизитТабличнойЧасти() Цикл
					Рекв = МД.РеквизитТабличнойЧасти(н).Идентификатор;
					Значение = ТаблТ.ПолучитьЗначение(ТаблТ.НомерСтроки,Рекв);
					
					// преобразование в тип значения	
					Если ТипЗначения(Значение) > 3 Тогда
						Вид = МД.РеквизитТабличнойЧасти(Рекв).Вид;
						Вид = ?(ПустоеЗначение(Вид)=0,Вид,"-");				
					Иначе
						Вид = "-";
					КонецЕсли;
					Значение = Преобразовать(Значение,Вид);
					Текст.ДобавитьСтроку(Рекв+"|"+Значение); // значение рекв. т.ч.
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		Текст.ДобавитьСтроку("Записать:|");
		Текст.ДобавитьСтроку("");		             
		Процент = Цел(тДок.НомерСтроки/Размер*100);
		Состояние("Выгружено: "+СокрЛП(Процент)+"%");
		ПоказатьИндикатор(Процент);
		Поз = спТекДок.НайтиЗначение(Док.ТекущийДокумент());
		Если Поз <> 0 Тогда
			спТекДок.Пометка(Поз,0);
		КонецЕсли;
	КонецЦикла;	   
	
	Текст.Записать(ИмяФайла);                         
	Сообщить("Выгружено ["+тДок.КоличествоСтрок()+"] документов в файл: "+ИмяФайла,"i");
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": + Выгружено ["+тДок.КоличествоСтрок()+"/"+СокрЛП(спТекДок.РазмерСписка())+"] документов в файл: "+СокрЛП(ИмяФайла));
КонецПроцедуры

// ===============================
Процедура Сформировать()
	Перем Запрос, ТекстЗапроса;
	Кнопки(0);
	
	Если рДоб = 0 Тогда
	    спТекДок.УдалитьВсе();
	КонецЕсли;	
	
	Если флВсеДок=1 тогда
		Сп="";
	    Для н=1 по СпДок.РазмерСписка() Цикл
			ДокВид = спДок.ПолучитьЗначение (н);       
			Если н=СпДок.РазмерСписка() Тогда
				Сп=Сп+"Документ."+ДокВид+".ТекущийДокумент;";    
			Иначе
				Сп=Сп+"Документ."+ДокВид+".ТекущийДокумент,";
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	ДокВид = спДок.ПолучитьЗначение (спДок.ТекущаяСтрока());
	Усл = спУсл.ПолучитьЗначение(спУсл.ТекущаяСтрока());
	ТипУсл = "ОбрабатыватьДокументы "+Усл+";";
	
	ТипДействия = спВид.ПолучитьЗначение(спВид.ТекущаяСтрока());
	ТипУсл = ТипУсл+?(ТипДействия=4,"Обрабатывать ПомеченныеНаУдаление","Обрабатывать НеПомеченныеНаУдаление");
		
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	Если флВсеДок=1 тогда
		ТекстЗапроса = 
		"//{{ЗАПРОС(ВыгрузитьДок)
		|Период с НачДата по КонДата;	           
		|"+ТипУсл+";
		|Док = "+Сп+"	
		|Группировка Док упорядочить по Док.ДатаДок;
		|"//}}ЗАПРОС
		; 
	иначе 
		ТекстЗапроса = 
		"//{{ЗАПРОС(ВыгрузитьДок)
		|Период с НачДата по КонДата;	           
		|"+ТипУсл+";
		|Док = Документ."+ДокВид+".ТекущийДокумент;	
		|Группировка Док упорядочить по Док.ДатаДок;
		|"//}}ЗАПРОС
		; 
	КонецЕсли;
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! ошибка в запросе при формировании документов");
		Возврат;
	КонецЕсли;
	
	ТаблТ = СоздатьОбъект("ТаблицаЗначений");;
    ТаблТ.Очистить();
	
	тДок = СоздатьОбъект("ТаблицаЗначений");
	тДок.Очистить();
	тДок.НоваяКолонка("Док");
	
	Запрос.Выгрузить(тДок);
	
	Если тДок.КоличествоСтрок() <> 0 Тогда
	    тДок.УдалитьСтроку(1);
	КонецЕсли;	
	
	Если тДок.КоличествоСтрок() = 0 Тогда
		Предупреждение("За выбранный период документов НЕТ!
		| ("+спУсл.ПолучитьЗначение(спУсл.ТекущаяСтрока())+?(ТипДействия=4,"+Удаленные","")+")");
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ! за выбранный период: "+ПериодСтр(НачДата,КонДата)+" документов нет!");
	    Возврат;
	КонецЕсли;  	
	
	Размер = тДок.КоличествоСтрок();	
	
	тДок.ВыбратьСтроки();
	Пока тДок.ПолучитьСтроку() =1 Цикл
		Если (тДок.Док.Вид()<>"Операция") и (тДок.Док.Вид()<>"ПлатежноеПоручение") тогда
			Если ПроверитьУсл(тДок.Док,1)=0 Тогда
				Продолжить;
			КонецЕсли; 
		КонецЕсли; 
		
		Процент = Цел(тДок.НомерСтроки/Размер*100);
		Состояние("Загрузка документов в список: ["+СокрЛП(Процент)+"%]");
		ПоказатьИндикатор(Процент);
		Если спТекДок.НайтиЗначение(тДок.Док) = 0 Тогда
		    спТекДок.ДобавитьЗначение(тДок.Док);
		КонецЕсли;		
	КонецЦикла;
    
	ПометитьРекв(1,спТекДок);		
	Кнопки(1);          
	ПриВыбореЗакладки(,"Основной");	
КонецПроцедуры

// ===============================
Процедура Выгрузить()	
	Индикатор = "";
	Форма.Обновить();
	
	Кнопки(0);
	
	ТекстЛог.ДобавитьСтроку(" - - - - = = = = = = - - - -");
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": Режим 'Выгрузка'");
	
	// настройка таблицы (ТабличнаяЧасть)
	спНужРеквТ = СоздатьОбъект("СписокЗначений");;
	спНужРеквТ.УдалитьВсе();
	
	Для Инд = 1 По спРеквТ.РазмерСписка() Цикл
		Если спРеквТ.Пометка(Инд) = 0 Тогда
		    Продолжить;
		КонецЕсли;            
		спНужРеквТ.ДобавитьЗначение (спРеквТ.ПолучитьЗначение(Инд));
	КонецЦикла;	                
	
	ВыгрузитьВФайл();              
	
	ПриВыбореЗакладки(,"Основной");
	
	Кнопки(1);          	
КонецПроцедуры                

// ===============================
Функция Инфо()
    Инфо = "Сформировано к обработке: "+СокрЛП(спТекДок.РазмерСписка())+" док.";
	Если спТекДок.РазмерСписка() = 0 Тогда
	    Инфо = "Выберите период, тип документа, а затем нажмите кнопку 'Сформировать'";
	ИначеЕсли (спРеквШ.НайтиЗначение("Контрагент") <> 0) и (спТекДок.ТекущаяСтрока() <> 0) и (Форма.кЗагр.Доступность()=0) Тогда 
		Попытка
			Инфо = Инфо + " | "+спТекДок.ПолучитьЗначение(спТекДок.ТекущаяСтрока()).Контрагент;	
		исключение
		КонецПопытки;
	КонецЕсли;                                                                         
	// -----------
	Если Форма.кЗагр.Доступность() = 1 Тогда
	    Инфо = "Выберите имя файла и нажмите ЗАГРУЗИТЬ";
	КонецЕсли;
	Возврат Инфо;
КонецФункции

// ===============================
// Назначение:
//		
// Аргументы:
//		
Процедура ДобавитьДокумент()
	ВидДок = (спДок.ПолучитьЗначение (спДок.ТекущаяСтрока()));
	
	Док = ПолучитьПустоеЗначение("Документ."+ВидДок);
	Если спТекДок.РазмерСписка() <> 0 Тогда
	    Док = спТекДок.ПолучитьЗначение(спТекДок.РазмерСписка());
	КонецЕсли;
	Если ВвестиЗначение(Док,"Выберите документ:"+"Документ."+ВидДок) = 0 Тогда
	    Возврат;
	КонецЕсли;  
	Если спТекДок.НайтиЗначение(Док) = 0 Тогда
		спТекДок.ДобавитьЗначение(Док);
		спТекДок.Пометка(спТекДок.РазмерСписка(),1);    
	Иначе
		Предупреждение("Документ: "+СокрЛП(Док)+" уже был сформирован к обработке!");
	КонецЕсли;
КонецПроцедуры //ДобавитьДокумент


// ===============================
// Назначение:
//		
// Аргументы:
//		
Процедура Помощь(Зн=0,Обн=0)      
	Если Обн = 0 Тогда
		Таб = СоздатьОбъект("Таблица");    
	КонецЕсли;
	
	Таб.ИсходнаяТаблица("Помощь");	
	Таб.Очистить();      
	
	Таб.ВывестиСекцию("Помощь");
	Таб.Опции(0,0,Таб.ВысотаТаблицы(),0);
	Если Зн = 0 Тогда
		ТипДействия = спВид.ПолучитьЗначение(спВид.ТекущаяСтрока());
		Если Форма.Закладки.ПолучитьЗначение(Форма.Закладки.ТекущаяСтрока()) = "Условия" Тогда
			Таб.ВывестиСекцию("Усл");
		КонецЕсли;
		
	    Если ТипДействия = 2 Тогда
			Таб.ВывестиСекцию("Пред");
		    Таб.ВывестиСекцию("Загр");
		ИначеЕсли ТипДействия = 1 Тогда     
			Таб.ВывестиСекцию("Печать");
			Таб.ВывестиСекцию("Выгр");					
		Иначе		
			Таб.ВывестиСекцию("Пред");
			Таб.ВывестиСекцию("Усл");
			Таб.ВывестиСекцию("ОбрУсл");	
		КонецЕсли;
	Иначе
		Если Зн = "Обр" Тогда         
			Таб.ВывестиСекцию("Пред");
			Таб.ВывестиСекцию("Усл");	    
			Зн = "ОбрУсл";
		КонецЕсли;                    
		Если Зн = "Загр" Тогда
			Таб.ВывестиСекцию("Пред");
		КонецЕсли;                  
		Если Зн = "Выгр" Тогда
		    Таб.ВывестиСекцию("Печать");
		КонецЕсли;		
		Таб.ВывестиСекцию(Зн);
	КонецЕсли;
		
	Таб.ВывестиСекцию("Примечание");
	
	Таб.ТолькоПросмотр(1);
	Таб.Защита(1);         
	Таб.Показать("Справка по использованию");
КонецПроцедуры //Помощь

// ===============================
Процедура ИзмПорядок()
	Инд = спПорядок.ТекущаяСтрока();
	Если Инд = 0 Тогда
	    Возврат;
	КонецЕсли;  
	Действие = спПорядок.ПолучитьЗначение(Инд);
	// Действия: 1 - вид док;
	//			 2 - выб. периода
	//			 3 - выб. имя файла
	//			 4 - условия
	//			 5 - кн Сформировать
	//			 6 - кн Выгрузить
	//			 7 - кн Загрузить
	//			 8 - кн Обработать
	//			 9 - контроль переключателей
	Если Действие  = 1 Тогда    
		Зн = спДок.ПолучитьЗначение(спДок.ТекущаяСтрока());
	    спДок.ВыбратьЗначение(Зн,"Выберите вид документа:",,,0);
	ИначеЕсли Действие = 2 Тогда
		ВвестиПериод(НачДата,КонДата);
	ИначеЕсли Действие = 3 Тогда
		ВыбрФайл();
	ИначеЕсли Действие = 4 Тогда
		Предупреждение("Закладка УСЛОВИЯ - выберите условия
		|(не обязательное действие)");
	ИначеЕсли Действие = 5 Тогда
		Если Форма.кСформ.Доступность() = 0 Тогда
		    Возврат;
		КонецЕсли;
		Сформировать();
	ИначеЕсли Действие = 6 Тогда
		Если Форма.кВыгр.Доступность() = 0 Тогда
		    Возврат;
		КонецЕсли;
		Выгрузить();
	ИначеЕсли Действие = 7 Тогда
		Если Форма.кЗагр.Доступность() = 0 Тогда
		    Возврат;
		КонецЕсли;
		Загрузить();		
	ИначеЕсли Действие = 8 Тогда
		Если Форма.кОбр.Доступность() = 0 Тогда
		    Возврат;
		КонецЕсли;
		Обработать();		 
	ИначеЕсли Действие = 9 Тогда
		Предупреждение ("Установите переключатели 'проводить', 'замещать', 'авто-создание рек-тов'
		|в нужное вам положение
		|(наведитесь на переключатель для получения справки по переключателю)");
	КонецЕсли;
КонецПроцедуры  

// ===============================
Процедура ПриЗакрытии()
	Если ФС.СуществуетФайл(КаталогИБ()+"NEW_STRU") = 0 Тогда
	    ФС.СоздатьКаталог(КаталогИБ()+"NEW_STRU");
	КонецЕсли; 
	
	ТекстЛог.ДобавитьСтроку(" - - - - = = = = = = - - - -");
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": конец...");
	ТекстЛог.Записать(ИмяЛогФайла);
	СохранитьРеквизиты();  // реквизиты
	СохранитьРеквизиты(0); // условия
КонецПроцедуры

// ===============================
Процедура Предупр()
	Если рСозд = 1 Тогда
	    Предупреждение ("Опция находится в стадии разработки
		|Возможен не корректный перенос данных!");
	КонецЕсли;
КонецПроцедуры

// ===============================
Процедура Печать(Обн=0)    
	Индикатор = "";
	Форма.Обновить();
	
	ТекстЛог.ДобавитьСтроку(" - - - - = = = = = = - - - -");
	ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": Режим 'Печать'");
	
	тДок = СоздатьОбъект("ТаблицаЗначений");
	тДок.Очистить();
	тДок.НоваяКолонка("Док");
	
	Кво = 0;
	Размер = 0;
	Для Инд = 1 По спТекДок.РазмерСписка() Цикл
		Если спТекДок.Пометка(Инд) = 0 Тогда
		    Продолжить;
		КонецЕсли;        
		Док = спТекДок.ПолучитьЗначение(Инд);
		Если ПроверитьУсл(Док) = 0 Тогда
		    Продолжить;
		КонецЕсли;   
		
		Размер = Размер + 1;
		тДок.НоваяСтрока();
		тДок.Док = Док;		
	КонецЦикла;	
	
	Если Размер = 0 Тогда
		Предупреждение("Нет помеченных документов или неверно заданы условия!");
		ТекстЛог.ДобавитьСтроку(СокрЛП(ТекущееВремя())+": ПУСТО - Нет помеченных документов или неверно заданы условия!");
	    Возврат;
	КонецЕсли;  	
	
	Кнопки(0);                                               
	
	тИтоги = СоздатьОбъект("ТаблицаЗначений"); //итоги числовых реквизитов
	тИтоги.Очистить();
	тИтоги.НоваяКолонка("Реквизит"); 
	тИтоги.НоваяКолонка("Итог","Число",15,4);
	
	Если Обн = 0 Тогда
	    ТабПечать = СоздатьОбъект("Таблица");
	КонецЕсли;	                             
	
	ТабПечать.ИсходнаяТаблица("ПечатьДокументов");
	ТабПечать.Очистить();	
	ТабПечать.ВывестиСекцию("Сервис|верт");         				
	ТабПечать.ВывестиСекцию("Шапка|верт");         				
	
	ТабПечать.ПрисоединитьСекцию("Шапка|рекв");
	ТабПечать.ПрисоединитьСекцию("Шапка|документ");	
	
	ТабПечать.ВывестиСекцию("Заголовок|верт");	                             
	
	ТабПечать.Опции(0,0,ТабПечать.ВысотаТаблицы(),2);	
	
	// вывод заголовков реквизитов
	Для Инд = 1 По спРеквШ.РазмерСписка() Цикл
		Если спРеквШ.Пометка(Инд) = 0 Тогда
		    Продолжить;
		КонецЕсли;     
		// печать шапки документа
		Рекв = "";
		РеквИдент = СокрЛП(спРеквШ.ПолучитьЗначение(Инд,Рекв));
		ВидРекв = "шапки";		
		ТабПечать.ПрисоединитьСекцию("Заголовок|рекв");
		Ном = 0;                                                              
		
		МД = Метаданные.Документ (спДок.ПолучитьЗначение (спДок.ТекущаяСтрока()));
		Попытка
	    	ТипРекв = СокрЛП(МД.РеквизитШапки(РеквИдент).Тип);
		Исключение   
			ТипРекв = Метаданные.ОбщийРеквизитДокумента(РеквИдент).Тип;
		КонецПопытки;	
		
		Если ТипРекв = "Число" Тогда
		    тИтоги.НоваяСтрока();
			тИтоги.Итог = 0;
			тИтоги.Реквизит = РеквИдент;
		КонецЕсли;	                           		
	КонецЦикла;	  
    
	ПослНом = Инд;
	Для Инд = 1 По спРеквТ.РазмерСписка() Цикл
		Если спРеквТ.Пометка(Инд) = 0 Тогда
		    Продолжить;
		КонецЕсли;     
		// печать ТабПечатьл.части документа
		Рекв = "";
		РеквИдент = СокрЛП(спРеквТ.ПолучитьЗначение(Инд,Рекв));
		ВидРекв = "табл.части";		
		ТабПечать.ПрисоединитьСекцию("Заголовок|рекв");		
		МД = Метаданные.Документ (спДок.ПолучитьЗначение (спДок.ТекущаяСтрока()));
	    ТипРекв = СокрЛП(МД.РеквизитТабличнойЧасти(РеквИдент).Тип);
		Если ТипРекв = "Число" Тогда
		    тИтоги.НоваяСтрока();
			тИтоги.Итог = 0;
			тИтоги.Реквизит = РеквИдент;
		КонецЕсли;			
	КонецЦикла;	
	ТабПечать.ПрисоединитьСекцию("Заголовок|Документ");
	
	// вывод значений 	
	тДок.ВыбратьСтроки();
	Пока тДок.ПолучитьСтроку() = 1 Цикл
		Процент = Цел(тДок.НомерСтроки/тДок.КоличествоСтрок()*100);
		Состояние("Вывод на печать: ["+СокрЛП(Процент)+"]%");
		ПоказатьИндикатор(Процент);
		Док = тДок.Док;                        
		Док.ВыбратьСтроки();                                
		Если Док.КоличествоСтрок() = 0 Тогда
			// док. без строк!
		    ТабПечать.ВывестиСекцию("Строка|Верт");
			Для Инд = 1 По спРеквШ.РазмерСписка() Цикл
				Если спРеквШ.Пометка(Инд) = 0 Тогда
				    Продолжить;
				КонецЕсли;     
				// печать шапки документа
				Рекв = "";
				РеквИдент = СокрЛП(спРеквШ.ПолучитьЗначение(Инд,Рекв));
				РеквЗн = Док.ПолучитьАтрибут(РеквИдент);
				Если ТипЗначенияСтр(РеквЗн) = "Число" Тогда
				    РеквЗн = СокрЛП(Формат(РеквЗн,"Ч-15.4")); 					
					Ном = 0;
					Если тИтоги.НайтиЗначение (Рекв,Ном,"Реквизит") = 1 Тогда
					    ТекИтог =  тИтоги.ПолучитьЗначение (Ном,"Итог");
						Итог = ТекИтог + Число(РеквЗн);
						тИтоги.УстановитьЗначение (Ном,"Итог",Итог);
					КонецЕсли;
				ИначеЕсли ТипЗначенияСтр(РеквЗн) = "Строка" Тогда
					РеквЗн = СокрЛП(РеквЗн);
				КонецЕсли;      				
				ТабПечать.ПрисоединитьСекцию("Строка|рекв");
			КонецЦикла;			   
			// ходим по строкам документа и печатаем реквизиты
			Для Инд = 1 По спРеквТ.РазмерСписка() Цикл
				Если спРеквТ.Пометка(Инд) = 0 Тогда
				    Продолжить;
				КонецЕсли;          
				// печать табличной части документа
				Рекв = "";
				РеквИдент = СокрЛП(спРеквТ.ПолучитьЗначение(Инд,Рекв));
				РеквЗн = "-";				
				ТабПечать.ПрисоединитьСекцию("Строка|рекв");
			КонецЦикла;	                                    			
			ТабПечать.ПрисоединитьСекцию("Строка|Документ");
		КонецЕсли;                                 
		
		// ---- попробуем получить строки документа
		Пока Док.ПолучитьСтроку() = 1 Цикл
			ТабПечать.ВывестиСекцию("Строка|Верт");
			Для Инд = 1 По спРеквШ.РазмерСписка() Цикл
				Если спРеквШ.Пометка(Инд) = 0 Тогда
				    Продолжить;
				КонецЕсли;     
				// печать шапки документа
				Рекв = "";
				РеквИдент = СокрЛП(спРеквШ.ПолучитьЗначение(Инд,Рекв));
				РеквЗн = Док.ПолучитьАтрибут(РеквИдент);
				Если ТипЗначенияСтр(РеквЗн) = "Число" Тогда
				    РеквЗн = СокрЛП(Формат(РеквЗн,"Ч-15.4"));
				ИначеЕсли ТипЗначенияСтр(РеквЗн) = "Строка" Тогда
					РеквЗн = СокрЛП(РеквЗн);
				КонецЕсли;    
				Ном = 0;
				Если тИтоги.НайтиЗначение (РеквИдент,Ном,"Реквизит") = 1 Тогда
				    ТекИтог =  тИтоги.ПолучитьЗначение (Ном,"Итог");
					Итог = ТекИтог + Число(РеквЗн);
					тИтоги.УстановитьЗначение (Ном,"Итог",Итог);
				КонецЕсли;
				ТабПечать.ПрисоединитьСекцию("Строка|рекв");
			КонецЦикла;			
			// ходим по строкам документа и печатаем реквизиты
			Для Инд = 1 По спРеквТ.РазмерСписка() Цикл
				Если спРеквТ.Пометка(Инд) = 0 Тогда
				    Продолжить;
				КонецЕсли;          
				// печать табличной части документа
				Рекв = "";
				РеквИдент = СокрЛП(спРеквТ.ПолучитьЗначение(Инд,Рекв));
				РеквЗн = Док.ПолучитьАтрибут(РеквИдент);
				Если ТипЗначенияСтр(РеквЗн) = "Число" Тогда
				    РеквЗн = СокрЛП(Формат(РеквЗн,"Ч-15.4"));
				ИначеЕсли ТипЗначенияСтр(РеквЗн) = "Строка" Тогда
					РеквЗн = СокрЛП(РеквЗн);
				КонецЕсли;       
				Ном = 0;
				Если тИтоги.НайтиЗначение (РеквИдент,Ном,"Реквизит") = 1 Тогда
				    ТекИтог =  тИтоги.ПолучитьЗначение (Ном,"Итог");
					Итог = ТекИтог + Число(РеквЗн);
					тИтоги.УстановитьЗначение (Ном,"Итог",Итог);
				КонецЕсли;
				ТабПечать.ПрисоединитьСекцию("Строка|рекв");
			КонецЦикла;	                 
			ТабПечать.ПрисоединитьСекцию("Строка|Документ");
		КонецЦикла;	//получить строку    		
	КонецЦикла;		//перебор документов
	ТабПечать.ВывестиСекцию("Итог|верт");
	// итоги
	Для Инд = 1 По спРеквШ.РазмерСписка() Цикл
		Если спРеквШ.Пометка(Инд) = 0 Тогда
		    Продолжить;
		КонецЕсли;     				
		Рекв = "";                                
		Итог = "-";
		РеквИдент = СокрЛП(спРеквШ.ПолучитьЗначение(Инд,Рекв));
		Ном = 0;
		Если тИтоги.НайтиЗначение (РеквИдент,Ном,"Реквизит") = 1 Тогда
			Итог = тИтоги.ПолучитьЗначение (Ном,"Итог");					
			Итог = СокрЛП(Формат(Итог,"Ч-15.4"));
		КонецЕсли;	                                         
		Итог = СокрЛП(Рекв)+": "+Итог;
		ТабПечать.ПрисоединитьСекцию("Итог|рекв");
	КонецЦикла;			
	Для Инд = 1 По спРеквТ.РазмерСписка() Цикл
		Если спРеквТ.Пометка(Инд) = 0 Тогда
		    Продолжить;
		КонецЕсли;     				
		Рекв = "";                                
		Итог = "-";
		РеквИдент = СокрЛП(спРеквТ.ПолучитьЗначение(Инд,Рекв));
		Ном = 0;
		Если тИтоги.НайтиЗначение (РеквИдент,Ном,"Реквизит") = 1 Тогда
			Итог = тИтоги.ПолучитьЗначение (Ном,"Итог");					
			Итог = СокрЛП(Формат(Итог,"Ч-15.4"));
		КонецЕсли;	                  
		Итог = СокрЛП(Рекв)+": "+Итог;
		ТабПечать.ПрисоединитьСекцию("Итог|рекв");
	КонецЦикла;						
	ТабПечать.ПрисоединитьСекцию("Итог|Документ");
	
	ТабПечать.ПараметрыСтраницы(2);
	ТабПечать.ТолькоПросмотр(1);
	ТабПечать.Показать(спДок.ПолучитьЗначение(спДок.ТекущаяСтрока())+": за период: "+ПериодСтр(НачДата,КонДата));
	Кнопки(1);
КонецПроцедуры

// ===============================
// Назначение:
//		
// Аргументы:
//		
Процедура ОбработкаЯчейкиТаблицы(Зн)
	Если ТипЗначения(Зн) >10 Тогда
	    ОткрытьФорму(Зн);
		Возврат;		
	КонецЕсли;           
	Если Зн = "обновить" Тогда
	    Печать(1);
		Возврат;
	КонецЕсли;
	Если Лев(СокрЛП(Зн),1) = "!" Тогда
		Помощь(Прав(СокрЛП(Зн),СтрДлина(СокрЛП(Зн))-1),1);    
	КонецЕсли;
КонецПроцедуры //ОбработкаЯчейкиТаблицы

// ===============================
Процедура Переместить(сп,Напр)
	сп.СдвинутьЗначение(Напр,сп.ТекущаяСтрока());
КонецПроцедуры

Версия = "1.37";