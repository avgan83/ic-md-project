Перем СписокДействий;
Перем БИ,БИпф,Ит;

Процедура СубкАлиментов()
	НазначитьВид(Кому,Счет.ВидСубконто(1));
	Форма.Кому.НеизменятьВид(1);
КонецПроцедуры

Процедура ПризнакСХ()
	Если флСоцФондСХ=1 Тогда
		Форма.Объект.видимость(1);
		Форма.Объект.Доступность(1);
	Иначе
		Форма.Объект.видимость(0);
		Форма.Объект.Доступность(0);
	КонецЕсли; 
КонецПроцедуры	

Процедура ПроверкаАлиментов()
	Если ПустоеЗначение(Счет)=1 Тогда
		Кому=0;
		Форма.Кому.Доступность(0);
		Алименты=0;
		Форма.Алименты.Доступность(0);
	ИначеЕсли (ПустоеЗначение(Счет)=0) И (ПустоеЗначение(Кому)=1) Тогда
		Форма.Кому.Доступность(1);
		Форма.Кому.НеИзменятьВид(1);
		Алименты=0;
		Форма.Алименты.Доступность(0);
	ИначеЕсли (ПустоеЗначение(Счет)=0) И (ПустоеЗначение(Кому)=0) Тогда
		Форма.Алименты.Доступность(1);
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаУв()
	Если ПустоеЗначение(Сотрудник.ДатаУвольнения)=0 Тогда
		Если ДатаДок>=Сотрудник.ДатаУвольнения Тогда
			Предупреждение("Данный сотрудник уволен!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СубкПрочих()
	НазначитьВид(ПрочиеКому,ПрочиеСчет.ВидСубконто(1));
	Форма.ПрочиеКому.НеизменятьВид(1);
КонецПроцедуры

Процедура ПроверкаПрочих()
	Если ПустоеЗначение(ПрочиеСчет)=1 Тогда
		ПрочиеКому=0;
		Форма.ПрочиеКому.Доступность(0);
		ПрочиеУдержания=0;
		Форма.ПрочиеУдержания.Доступность(0);
	ИначеЕсли (ПустоеЗначение(ПрочиеСчет)=0) И (ПустоеЗначение(ПрочиеКому)=1) Тогда
		Форма.ПрочиеКому.Доступность(1);
		Форма.ПрочиеКому.НеИзменятьВид(1);
		ПрочиеУдержания=0;
		Форма.ПрочиеУдержания.Доступность(0);
	ИначеЕсли (ПустоеЗначение(ПрочиеСчет)=0) И (ПустоеЗначение(ПрочиеКому)=0) Тогда
		Форма.ПрочиеУдержания.Доступность(1);
	КонецЕсли;
КонецПроцедуры

Процедура ПровРабДней()
	Если Кол_воРабДней<0 Тогда
		Предупреждение("Введите нормальное кол-во рабочих дней");
	КонецЕсли;
КонецПроцедуры

Процедура ВыбЗП()
	НазначитьВид(СубконтоЗ_П,СчетЗатратЗ_П.ВидСубконто(1));
	Форма.СубконтоЗ_П.НеизменятьВид(1);
КонецПроцедуры

Процедура ВыбСФ()
	НазначитьВид(СубконтоС_Ф,СчетЗатратС_Ф.ВидСубконто(1));
	Форма.СубконтоС_Ф.НеизменятьВид(1);
КонецПроцедуры

Процедура ВводНового(ПК)
	Автор=глПользователь;
	Если ПК=0 Тогда
		Кол_воРабДней=Константа.Кол_воРабДней.Получить(ДатаДок);
		СчетЗатратЗ_П=СчетПоКоду("713.3");
		СчетЗатратС_Ф=СчетПоКоду("713.31");
		СчетБолнЛист=СчетПоКоду("533.1");
		СчетПенсФонда=СчетПоКоду("533.1");
		СчетЗатратМедСтрах = СчетПоКоду("713.3");
	КонецЕсли;		
	Если Кол_воРабДней=0 Тогда
		Кол_воРабДней=22;
	КонецЕсли;
КонецПроцедуры

Процедура ПриНачалеРедактированияСтроки()
	ПроверкаАлиментов();
КонецПроцедуры

Процедура ПроверкаМатПом()
	МатПомощьДляСФ = 0;
	Если ДатаДок>='01.01.2010' тогда
		Если Ит.ПолучитьСубконто(ВидыСубконто.Сотрудники,,Сотрудник)=1 тогда
			ОборотСНачГода = Ит.КО();
		иначе
			ОборотСНачГода = 0;
		КонецЕсли;
		Ограничение = Константа.СреднеМесячнаяЗП.Получить(ДатаДок);
		Разница = ОборотСНачГода + БезСоцФонда - Ограничение;
		Если Разница > 0 тогда
			МатПомощьДляСФ = Разница;
		иначе
			МатПомощьДляСФ = 0;
		КонецЕсли;
	иначе
		МатПомощьДляСФ = 0;
	КонецЕсли;
	БезСоцФонда = БезСоцФонда - МатПомощьДляСФ;
КонецПроцедуры

Процедура МесяцНачисления()
	Спр=СоздатьОбъект("Справочник.ГодМесяц");
	Спр.НайтиПоНаименованию(Строка(ДатаГод(ДатаДок)));
	МесяцНачисления=ВернутьПоКоду("ГодМесяц",Строка(Спр.Код)+"/"+Строка(Формат(ДатаМесяц(ДатаДок),"Ч(0)2")));
КонецПРоцедуры

Процедура Заполнение()
	МесяцНачисления();
	Оклад=Сотрудник.Оклад.Получить(ДатаДок);  
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(Начисление)
	|Период с (НачМесяца(ДатаДок)) по (КонМесяца(ДатаДок));
	|Начисления = Документ.РасчетОтпускных.ТекущийДокумент;
	|Сотруд = Документ.РасчетОтпускных.Сотрудник;
	|СуммаОтпускных = Документ.РасчетОтпускных.СуммаОтпускных;
	|ЗаДн = Документ.РасчетОтпускных.ДнейОтпуска;
	|Функция СуммаОтпускныхСумма = Сумма(СуммаОтпускных);
	|Функция ЗаДнСумма = Сумма(ЗаДн);
	|Группировка Сотруд;
	|Условие(Сотруд = Сотрудник);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	Иначе
		Отпускные=Запрос.СуммаОтпускныхСумма;
		ОтпДней=Запрос.ЗаДнСумма;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(Начисление)
	|Период с (НачМесяца(ДатаДок)) по (КонМесяца(ДатаДок));
	|Обрабатывать НеПомеченныеНаУдаление; 
	|ОбрабатыватьДокументы Все; 
	|Начисления = Документ.РасчетБольничныхИндивидуальный.ТекущийДокумент,Документ.РасчетБольничных.ТекущийДокумент;
	|Сотруд = Документ.РасчетБольничныхИндивидуальный.Сотрудник,Документ.РасчетБольничных.Сотрудник;
	|СуммаБольничных = Документ.РасчетБольничныхИндивидуальный.СуммаБольничных,Документ.РасчетБольничных.СуммаБольничных;
	|ЗаДн = Документ.РасчетБольничныхИндивидуальный.БольничныхДней,Документ.РасчетБольничных.БольничныхДней; 
	|Код = Документ.РасчетБольничныхИндивидуальный.КодРасходов.Код,Документ.РасчетБольничных.КодРасходов.Код;
	|Функция СуммаБольничныхСумма = Сумма(СуммаБольничных);
	|Функция ЗаДнСумма = Сумма(ЗаДн);
	|Группировка Сотруд;
	|Условие((Сотруд = Сотрудник) И ((Число(Код)=12) ИЛИ (Код=13) ИЛИ (Код=14) ИЛИ (Код=15) ИЛИ (Код=16)));
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	Иначе
		Если ДатаДок > Дата(2006,9,30) Тогда
			БольничныеБезПН=Запрос.СуммаБольничныхСумма;
		Иначе
			БольнЛист=Запрос.СуммаБольничныхСумма;
		КонецЕсли; 
		
		БолДней=Запрос.ЗаДнСумма;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(Начисление)
	|Период с (НачМесяца(ДатаДок)) по (КонМесяца(ДатаДок));
	|Обрабатывать НеПомеченныеНаУдаление; 
	|ОбрабатыватьДокументы Все; 
	|Начисления = Документ.РасчетБольничныхИндивидуальный.ТекущийДокумент,Документ.РасчетБольничных.ТекущийДокумент;
	|Сотруд = Документ.РасчетБольничныхИндивидуальный.Сотрудник,Документ.РасчетБольничных.Сотрудник;
	|СуммаСоцВыплат = Документ.РасчетБольничныхИндивидуальный.СуммаБольничных,Документ.РасчетБольничных.СуммаБольничных;
	|Код = Документ.РасчетБольничныхИндивидуальный.КодРасходов.Код,Документ.РасчетБольничных.КодРасходов.Код;
	|Функция СуммаСоцВыплатСумма = Сумма(СуммаСоцВыплат);
	|Группировка Сотруд;
	|Условие((Сотруд = Сотрудник) И (Число(Код)<>12) И (Число(Код)<>13) И (Число(Код)<>14) И (Число(Код)<>15) И (Число(Код)<>16));
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	Иначе
		БезСоцФонда=Запрос.СуммаСоцВыплатСумма;
	КонецЕсли; 
	
	ПроверкаМатПом();
	
	Запрос = СоздатьОбъект("Запрос");
	
	ТекстЗапроса =
	"//{{ЗАПРОС(Табель)
	|Период с (НачМесяца(ДатаДок)) по (КонМесяца(ДатаДок));
	|Обрабатывать НеПомеченныеНаУдаление; 
	|ОбрабатыватьДокументы Все; 
	|Табель = Документ.ТабельРабВремени.ТекущийДокумент;
	|Сотруд = Документ.ТабельРабВремени.Сотрудник; 
	|ЗаДн = Документ.ТабельРабВремени.Явки;
	|Функция ЗаДнСумма = Сумма(ЗаДн);      
	|Группировка Сотруд;
	|Условие(Сотруд = Сотрудник);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
	ОтработанныеДни=Запрос.ЗаДнСумма;
	
	Если ОтработанныеДни=0 Тогда
		ОтработанныеДни=Кол_воРабДней;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(Начисление)
	|Период с (НачМесяца(ДатаДок)) по (КонМесяца(ДатаДок));
	|Начисления = Документ.РасчетПраздничных.ТекущийДокумент;
	|Сотруд = Документ.РасчетПраздничных.Сотрудник;
	|СуммаПраздничных = Документ.РасчетПраздничных.СуммаПраздничных;
	|Функция СуммаПраздничныхСумма = Сумма(СуммаПраздничных);
	|Группировка Сотруд;
	|Условие(Сотруд = Сотрудник);
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		//Возврат;
	Иначе
		Праздничные=Запрос.СуммаПраздничныхСумма;
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетПоДням()
	Если ОтработанныеДни=0 Тогда
		ОтработанныеДни=Кол_воРабДней;
	ИначеЕсли ОтработанныеДни>0 Тогда
		Если ОтработанныеДни>Кол_воРабДней Тогда
			ОтработанныеДни=Кол_воРабДней;
		КонецЕсли;
		ОтработаннаяСумма=Оклад/Кол_воРабДней*ОтработанныеДни;
	КонецЕсли;
КонецПроцедуры                                                            

Функция ПолучитьДатуПоСпр(МесяцНачисленияТЗ)
	Год=МесяцНачисленияТЗ.Родитель;
	Мес=МесяцНачисленияТЗ.Код;
	Дат=Дата("01."+Мес+"."+Год);
	
	Возврат Дат;
КонецФункции

Функция ПолучитьТЗпоСотрудникуВТекДок()
	ТЗ1=СоздатьОбъект("ТаблицаЗначений");
	ТЗ=СоздатьОбъект("ТаблицаЗначений");
	ВыгрузитьТабличнуюЧасть(ТЗ1);
	ТЗ.НоваяКолонка("МесяцНачисления","Справочник.ГодМесяц");
	ТЗ.НоваяКолонка("МесяцНачисленияДата","Дата");
	ТЗ.НоваяКолонка("БазаДляРасчетаПФ","Число",20,2);
	ТЗ.НоваяКолонка("Пенс","Число",20,2);
	
	МесяцГод=ПолучитьДатуПоСпр(МесяцНачисления);
	Если ДатаГод(МесяцГод)>ДатаГод(ДатаДок) тогда //типа отпускные начисляем наперед в этом году, тогда ПенсФонд начисляется без ограничения 
		БазаДляРасчетаПФ= ИтогоНачислений-БезСоцФонда-БольнЛист-БольничныеБезПН;
		Если БазаДляРасчетаПФ<>Отпускные тогда
			Сообщить("Наперед мы можем начислять только отпускные или больничные");	
		КонецЕсли;
		Возврат ТЗ;	
	КонецЕсли;	
	ТЗ.УдалитьСтроки();
	ТЗ1.ВыбратьСтроки();
	Пока ТЗ1.ПолучитьСтроку()=1 Цикл 
		БазаДляРасчетаПФ= ТЗ1.ИтогоНачислений-ТЗ1.БезСоцФонда-ТЗ1.БольнЛист-ТЗ1.БольничныеБезПН;
		Если БазаДляРасчетаПФ=0 Тогда
			продолжить;
		КонецЕсли;
		Если Тз1.номерСтроки=номерСтроки Тогда
			продолжить;
		КонецЕсли;       
		Если (ТЗ1.Сотрудник=Сотрудник) и (ДатаГод(ПолучитьДатуПоСпр(ТЗ1.МесяцНачисления))=ДатаГод(ПолучитьДатуПоСпр(МесяцНачисления))) тогда
		    Если ПустоеЗначение(ТЗ1.Сотрудник.ДатаУвольнения)=0 Тогда
				Если НачМесяца(ТЗ1.Сотрудник.ДатаУвольнения)<МесяцГод Тогда 
				    продолжить;
				КонецЕсли; 
			КонецЕсли; 
			Если ДатаГод(МесяцГод)<>ДатаГод(ДатаДок) тогда
				продолжить;	
			КонецЕсли;
			ТЗ.НоваяСтрока();
			ТЗ.МесяцНачисления=ТЗ1.МесяцНачисления;
			ТЗ.БазаДляРасчетаПФ=БазаДляРасчетаПФ;
			ТЗ.Пенс=ТЗ1.Пенс;			
			ТЗ.МесяцНачисленияДата=ПолучитьДатуПоСпр(ТЗ1.МесяцНачисления);
		КонецЕсли;
	КонецЦикла;
	ТЗ.Свернуть("МесяцНачисленияДата,МесяцНачисления","БазаДляРасчетаПФ,Пенс");
	Тз.Сортировать("МесяцНачисленияДата");
	Возврат ТЗ;	
КонецФункции

ПРоцедура РасчетПенсФонда(БазаДляРасчетаПФ)
	ТЗ=ПолучитьТЗпоСотрудникуВТекДок();
	МесяцГод=ПолучитьДатуПоСпр(МесяцНачисления);
	
	БазаОгрПенсФондаВМесяц=Константа.ОгрПенсФонда.Получить(ДатаДок)*100/Константа.СтавкаПенсФонда.Получить(ДатаДок);       //15700
	Пенс=0;
	Если БазаДляРасчетаПФ=0 тогда
		Пенс=0;
	иначеЕсли (БазаДляРасчетаПФ<>0) и ((ПустоеЗначение(Сотрудник.ДатаУвольнения)=1) или (Сотрудник.ДатаУвольнения>МесяцГод))  тогда
		Если КонМесяца(МесяцГод)<>КонМесяца(ДатаДок) тогда
			БИпф=СоздатьОбъект("БухгалтерскиеИтоги");                                                          		
			БИпф.ИспользоватьСубконто(ВидыСубконто.Сотрудники,Сотрудник,2);
			БИпф.ИспользоватьСубконто(ВидыСубконто.МесяцГода,,1);
			
			Если ДатаГод(МесяцГод)<>ДатаГод(ДатаДок) тогда             //Если начисление не за этот год  
				Сообщить("Внимание!!! Вы начисляете не за текущий год, а за "+МесяцНачисления.Родитель+"!!!"); 
				
				Если ДатаГод(МесяцГод)<ДатаГод(ДатаДок) тогда             //Если начисление за прошлый год  
					БИпф.ВыполнитьЗапрос(НачГода(ДобавитьМесяц(ДатаДок,-12)),КонМесяца(МесяцГод),"ПФ.1,ПФ.2");
				иначеЕсли ДатаГод(МесяцГод)>ДатаГод(ДатаДок) тогда             //Если начисление за Будующий год  
					БИпф.ВыполнитьЗапрос(НачГода(ДобавитьМесяц(ДатаДок,12)),КонМесяца(МесяцГод),"ПФ.1,ПФ.2"); 
					
					//Если мы начисляем за следующий год, тогда ПенсФонд начисляется по полной программе без проверки на ограничение
					
					Пенс=БазаДляРасчетаПФ*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100;
					Возврат;
				КонецЕсли;
				БазаОгрПенсФондаВМесяц=Константа.ОгрПенсФонда.Получить(ДатаДок)*100/Константа.СтавкаПенсФонда.Получить(ДатаДок);       //15700
			иначе
				БИпф.ВыполнитьЗапрос(НачГода(ДатаДок),КонМесяца(МесяцГод),"ПФ.1,ПФ.2");
			КонецЕсли;
			БИпф.ВыбратьСубконто(ВидыСубконто.Сотрудники);	
		КонецЕсли;
		КоличествоМесяцев = 0;
		БазаЗаГод		  = 0;
		ПФЗаГодНачислено  = 0;
		ПоследнийМесяц=0;
		Если БИпф.ПолучитьСубконто(ВидыСубконто.Сотрудники,,Сотрудник)=1 тогда
			БИпф.ВыбратьСубконто(ВидыСубконто.МесяцГода,,1,,,"Код");
			Пока БИпф.ПолучитьСубконто(ВидыСубконто.МесяцГода)=1 Цикл 
				Если Число(БИпф.Субконто(ВидыСубконто.МесяцГода).Код)>Число(МесяцНачисления.Код) тогда
					продолжить;
				КонецЕсли;  
				ТЗ.НоваяСтрока();
				ТЗ.МесяцНачисления=БИпф.Субконто(ВидыСубконто.МесяцГода);
				ТЗ.МесяцНачисленияДата=ПолучитьДатуПоСпр(БИпф.Субконто(ВидыСубконто.МесяцГода));
				
				БИпф.ВыбратьСчета();
				Пока БИпф.ПолучитьСчет()=1 Цикл
					Если БИпф.ДО()<>0 тогда
						Если БИпф.Счет=СчетПоКоду("ПФ.2") тогда
							ТЗ.БазаДляРасчетаПФ=БИпф.ДО();
						иначе
							ТЗ.Пенс=БИпф.ДО();
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;     
			
			ТЗ.Свернуть("МесяцНачисленияДата,МесяцНачисления","БазаДляРасчетаПФ,Пенс");
			ТЗ.Сортировать("МесяцНачисленияДата"); 
			//ТЗ.ВыбратьСтроку();
			
			БазаЗаГод=ТЗ.Итог("БазаДляРасчетаПФ");
			ПФЗаГодНачислено=ТЗ.Итог("Пенс");
			КоличествоМесяцев=ТЗ.КоличествоСтрок();
			
			Если ТЗ.КоличествоСтрок()>0 тогда
				ТЗ.ПолучитьСтрокуПоНомеру(ТЗ.КоличествоСтрок());
				ПоследнийМесяц=ТЗ.МесяцНачисленияДата;
			иначе
				КоличествоМесяцев=1;
				ПоследнийМесяц=ПолучитьДатуПоСпр(МесяцНачисления);
			КонецЕсли;
			//Проверяем - это начисление повторное в тек. месяце или нет
			Если ПоследнийМесяц=ПолучитьДатуПоСпр(МесяцНачисления) тогда
				КолВоПрибавляемыхМесяцев=0;
			Иначе
				КолВоПрибавляемыхМесяцев=1;
			КонецЕсли; 
			
			ОграничениеПФЗаГод=БазаОгрПенсФондаВМесяц*(КоличествоМесяцев+КолВоПрибавляемыхМесяцев);
			
			Разница=ОграничениеПФЗаГод-(БазаЗаГод+БазаДляРасчетаПФ); 
			
			Если Разница<0 Тогда  //База больше
				Пенс=ОграничениеПФЗаГод*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100-ПФЗаГодНачислено;
			Иначе                                             
				ПФЗаГодПоложено=Мин(ОграничениеПФЗаГод,БазаЗаГод+БазаДляРасчетаПФ)*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100;
				//отнимаем уже начисленный ПФ за год
				Пенс=ПФЗаГодПоложено-ПФЗаГодНачислено;
			КонецЕсли; 
		иначе
			Если ТЗ.КоличествоСтрок()=0 тогда
				Пенс=БазаДляРасчетаПФ*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100;
				Если БИ.ПолучитьСубконто(ВидыСубконто.Сотрудники,,Сотрудник)=1 Тогда
					Факт=БИ.ДО();
				Иначе
					Факт=0;
				КонецЕсли;
				Пенс=Мин((Константа.ОгрПенсФонда.Получить(ДатаДок)-Факт),Пенс);
			иначе
				БазаЗаГод=ТЗ.Итог("БазаДляРасчетаПФ");
				ПФЗаГодНачислено=ТЗ.Итог("Пенс");
				КоличествоМесяцев=ТЗ.КоличествоСтрок();
				
				Если ТЗ.КоличествоСтрок()>0 тогда
					ТЗ.ПолучитьСтрокуПоНомеру(ТЗ.КоличествоСтрок());
					ПоследнийМесяц=ТЗ.МесяцНачисленияДата;
				иначе
					КоличествоМесяцев=1;
					ПоследнийМесяц=ПолучитьДатуПоСпр(МесяцНачисления);
				КонецЕсли;
				
				Если ПоследнийМесяц=ПолучитьДатуПоСпр(МесяцНачисления) тогда
					КолВоПрибавляемыхМесяцев=0;
				Иначе
					КолВоПрибавляемыхМесяцев=1;
				КонецЕсли; 
				
				ОграничениеПФЗаГод=БазаОгрПенсФондаВМесяц*(КоличествоМесяцев+КолВоПрибавляемыхМесяцев);
				
				Разница=ОграничениеПФЗаГод-(БазаЗаГод+БазаДляРасчетаПФ); 
				
				Если Разница<0 Тогда  //База больше
					Пенс=ОграничениеПФЗаГод*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100-ПФЗаГодНачислено;
				Иначе                                             
					ПФЗаГодПоложено=Мин(ОграничениеПФЗаГод,БазаЗаГод+БазаДляРасчетаПФ)*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100;
					//отнимаем уже начисленный ПФ за год
					Пенс=ПФЗаГодПоложено-ПФЗаГодНачислено;
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли;
	иначеЕсли (Сотрудник.ДатаУвольнения<МесяцГод) и (ПустоеЗначение(Сотрудник.ДатаУвольнения)=0) тогда     
		БазаОгрПенсФондаВМесяц=Константа.ОгрПенсФонда.Получить(ДатаДок)*100/Константа.СтавкаПенсФонда.Получить(ДатаДок);       //15700
		
		БИпф=СоздатьОбъект("БухгалтерскиеИтоги");                                                          		
		БИпф.ИспользоватьСубконто(ВидыСубконто.Сотрудники,Сотрудник,2);
		БИпф.ИспользоватьСубконто(ВидыСубконто.МесяцГода,,1);
		БИпф.ВыполнитьЗапрос(Сотрудник.ДатаУвольнения,КонМесяца(МесяцГод),"ПФ.1,ПФ.2");
		БИпф.ВыбратьСубконто(ВидыСубконто.Сотрудники);	
		
		КоличествоМесяцев = 0;
		БазаЗаГод		  = 0;
		ПФЗаГодНачислено  = 0;
		ПоследнийМесяц=0;
		Если БИпф.ПолучитьСубконто(ВидыСубконто.Сотрудники,,Сотрудник)=1 тогда
			БИпф.ВыбратьСубконто(ВидыСубконто.МесяцГода,,,,,"Код");
			Пока БИпф.ПолучитьСубконто(ВидыСубконто.МесяцГода)=1 Цикл
				Если Число(БИпф.Субконто(ВидыСубконто.МесяцГода).Код)>Число(МесяцНачисления.Код) тогда
					продолжить;
				КонецЕсли;
				ТЗ.НоваяСтрока();
				ТЗ.МесяцНачисления=БИпф.Субконто(ВидыСубконто.МесяцГода);
				ТЗ.МесяцНачисленияДата=ПолучитьДатуПоСпр(БИпф.Субконто(ВидыСубконто.МесяцГода));
				
				БИпф.ВыбратьСчета();
				Пока БИпф.ПолучитьСчет()=1 Цикл
					Если БИпф.ДО()<>0 тогда
						Если БИпф.Счет=СчетПоКоду("ПФ.2") тогда
							ТЗ.БазаДляРасчетаПФ=БИпф.ДО();
						иначе
							ТЗ.Пенс=БИпф.ДО();
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;     
			
			ТЗ.Свернуть("МесяцНачисленияДата,МесяцНачисления","БазаДляРасчетаПФ,Пенс");
			ТЗ.Сортировать("МесяцНачисленияДата"); 
			
			БазаЗаГод=ТЗ.Итог("БазаДляРасчетаПФ");
			ПФЗаГодНачислено=ТЗ.Итог("Пенс");
			КоличествоМесяцев=ТЗ.КоличествоСтрок();
			
			Если ТЗ.КоличествоСтрок()>0 тогда
				ТЗ.ПолучитьСтрокуПоНомеру(ТЗ.КоличествоСтрок());
				ПоследнийМесяц=ТЗ.МесяцНачисленияДата;
			иначе
				КоличествоМесяцев=1;
				ПоследнийМесяц=ПолучитьДатуПоСпр(МесяцНачисления);
			КонецЕсли;
			//Проверяем - это начисление повторное в тек. месяце или нет
			Если ПоследнийМесяц=ПолучитьДатуПоСпр(МесяцНачисления) тогда
				КолВоПрибавляемыхМесяцев=0;
			Иначе
				КолВоПрибавляемыхМесяцев=1;
			КонецЕсли; 
			
			ОграничениеПФЗаГод=БазаОгрПенсФондаВМесяц*(КоличествоМесяцев+КолВоПрибавляемыхМесяцев);
			
			Разница=ОграничениеПФЗаГод-(БазаЗаГод+БазаДляРасчетаПФ); 
			
			Если Разница<0 Тогда  //База больше
				Пенс=ОграничениеПФЗаГод*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100-ПФЗаГодНачислено;
			Иначе                                             
				ПФЗаГодПоложено=Мин(ОграничениеПФЗаГод,БазаЗаГод+БазаДляРасчетаПФ)*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100;
				//отнимаем уже начисленный ПФ за год
				Пенс=ПФЗаГодПоложено-ПФЗаГодНачислено;
			КонецЕсли;
		иначеЕсли ТЗ.КоличествоСтрок()=0 тогда
			Пенс=БазаДляРасчетаПФ*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100;
			Если БИ.ПолучитьСубконто(ВидыСубконто.Сотрудники,,Сотрудник)=1 Тогда
				Факт=БИ.ДО();
			Иначе
				Факт=0;
			КонецЕсли;
			Пенс=Мин((Константа.ОгрПенсФонда.Получить(ДатаДок)-Факт),Пенс);
		иначе   
			БазаЗаГод=ТЗ.Итог("БазаДляРасчетаПФ");
			ПФЗаГодНачислено=ТЗ.Итог("Пенс");
			КоличествоМесяцев=ТЗ.КоличествоСтрок();
			
			Если ТЗ.КоличествоСтрок()>0 тогда
				ТЗ.ПолучитьСтрокуПоНомеру(ТЗ.КоличествоСтрок());
				ПоследнийМесяц=ТЗ.МесяцНачисленияДата;
			иначе
				КоличествоМесяцев=1;
				ПоследнийМесяц=ПолучитьДатуПоСпр(МесяцНачисления);
			КонецЕсли;
			
			Если ПоследнийМесяц=ПолучитьДатуПоСпр(МесяцНачисления) тогда
				КолВоПрибавляемыхМесяцев=0;
			Иначе
				КолВоПрибавляемыхМесяцев=1;
			КонецЕсли; 
			
			ОграничениеПФЗаГод=БазаОгрПенсФондаВМесяц*(КоличествоМесяцев+КолВоПрибавляемыхМесяцев);
			
			Разница=ОграничениеПФЗаГод-(БазаЗаГод+БазаДляРасчетаПФ); 
			
			Если Разница<0 Тогда  //База больше
				Пенс=ОграничениеПФЗаГод*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100-ПФЗаГодНачислено;
			Иначе                                             
				ПФЗаГодПоложено=Мин(ОграничениеПФЗаГод,БазаЗаГод+БазаДляРасчетаПФ)*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100;
				//отнимаем уже начисленный ПФ за год
				Пенс=ПФЗаГодПоложено-ПФЗаГодНачислено;
			КонецЕсли; 
			
		КонецЕсли;			
	КонецЕсли;			
КонецПРоцедуры

Процедура ИтогНачисл()
	ИтогоНачислений=ОтработаннаяСумма+Премия+БольнЛист+БольничныеБезПН+Отпускные+БезСоцФонда+МатПомощьДляСФ+Праздничные;
	
	БазаДляРасчетаПФ=ОтработаннаяСумма+Премия+Отпускные+МатПомощьДляСФ+Праздничные;
	
	Если флСоцФондСХ = 0 Тогда
		ДляСоцФонда=БазаДляРасчетаПФ*Константа.ПроцентСоцФонда.Получить(ДатаДок)/100;    
	Иначе
		ДляСоцФонда=БазаДляРасчетаПФ*Константа.ПроцентСоцФондаСХ.Получить(ДатаДок)/100;
	КонецЕсли; 
	
	
	Если (ДатаДок>='01.01.2008')  тогда
		РасчетПенсФонда(БазаДляРасчетаПФ);
		
	иначе
		Пенс=БазаДляРасчетаПФ*Константа.СтавкаПенсФонда.Получить(ДатаДок)/100;
		Если БИ.ПолучитьСубконто(ВидыСубконто.Сотрудники,,Сотрудник)=1 Тогда
			Факт=БИ.ДО();
		Иначе
			Факт=0;
		КонецЕсли;
		Пенс=Мин((Константа.ОгрПенсФонда.Получить(ДатаДок)-Факт),Пенс);
	КонецЕсли;
КонецПроцедуры

Процедура ИтогУдерж()
	ИтогоУдержаний=Алименты;
КонецПроцедуры

Процедура Печать()
	Таб=СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Начисление");
	Таб.ВывестиСекцию("Шапка");
	ВыбратьСтроки();
	Пока ПолучитьСтроку()>0 Цикл
		Состояние("Выполняется обработка данных для "+Сотрудник);
		Таб.ПрисоединитьСекцию("Строка");		
	КонецЦикла;
	Таб.ВывестиСекцию("Итог");
	Таб.Опции(0,0,0,0);
	Таб.ПараметрыСтраницы(1);
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Начисление № "+СокрЛП(НомерДок)+" от "+СокрЛП(ДатаДок));
КонецПроцедуры 

Процедура РБИ()
	БИ=СоздатьОбъект("БухгалтерскиеИтоги");
	БИ.ИспользоватьСубконто(ВидыСубконто.УдержанияСоцФонда,ВернутьПоКоду("УдержанияСоцФонда","1"),2);
	БИ.ИспользоватьСубконто(ВидыСубконто.Сотрудники,,);
	БИ.ВыполнитьЗапрос(НачМесяца(ДатаДок),КонМесяца(ДатаДок),"Соц");
	БИ.ВыбратьСубконто(ВидыСубконто.Сотрудники);
	
	Если ДатаДок>='01.01.2008' тогда
		БИпф=СоздатьОбъект("БухгалтерскиеИтоги");                                                          		
		БИпф.ИспользоватьСубконто(ВидыСубконто.Сотрудники,,);
		БИпф.ИспользоватьСубконто(ВидыСубконто.МесяцГода,,1);
		БИпф.ВыполнитьЗапрос(НачГода(ДатаДок),КонМесяца(ДатаДок),"ПФ.1,ПФ.2");
		БИпф.ВыбратьСубконто(ВидыСубконто.Сотрудники);	
	КонецЕсли;
	
	СписокМатПомощи = СоздатьОбъект("СписокЗначений");
	СписокМатПомощи.ДобавитьЗначение(ВернутьПоКоду("НачисленийИУдержаний",5));
	
	Ит = СоздатьОбъект("БухгалтерскиеИтоги");
	Ит.ИспользоватьСубконто(ВидыСубконто.Сотрудники,,1);
	Ит.ИспользоватьСубконто(ВидыСубконто.ВидНачислений_Удержаний,СписокМатПомощи,2);
	Ит.ВыполнитьЗапрос(НачГода(ДатаДок),ДатаДок,"НАЧ");
	Ит.ВыбратьСубконто(ВидыСубконто.Сотрудники);	
КонецПРоцедуры

Процедура ПриОткрытии()
	Форма.КнопкаПоУмолчанию("ОК");   
	ПризнакСХ();
	ВыбЗП();
	ВыбСФ();
	
	Если ПустоеЗначение(Форма.Параметр)=0 Тогда
		Если Форма.Параметр="Начисление" Тогда
			Печать();
			СтатусВозврата(0);
		Иначе
			глПроверкаРазрешенияРедактирования(Контекст);
		КонецЕсли;
	Иначе
		глПроверкаРазрешенияРедактирования(Контекст);
	КонецЕсли;  
	
	РБИ();
КонецПроцедуры    

Процедура ВводНаОсновании(ДокОсн)
	Автор=глПользователь;
	ВидДеятельности=Константа.ОсновнойВидДеятельности;
	ВвестиДату(ДатаДок,"На какую дату начисляем?");  
	
	Кол_воРабДней=Константа.Кол_воРабДней.Получить(ДатаДок);
	СчетЗатратЗ_П=СчетПоКоду("713.3");
	СчетЗатратС_Ф=СчетПоКоду("713.31");
	СчетБолнЛист=СчетПоКоду("533.1");
	СчетПенсФонда=СчетПоКоду("533.1");
	СчетЗатратМедСтрах = СчетПоКоду("713.3");
	Кол_воРабДней=22;
	
	РБИ();
	
	ДокОсн.ВыбратьСтроки();
	Пока ДокОсн.ПолучитьСтроку()=1 Цикл
		НоваяСтрока();
		Сотрудник			= ДокОсн.Сотрудник;
		МесяцНачисления		= ДокОсн.МесяцНачисления;
		ОтработаннаяСумма	= ДокОсн.Оклад;
		БезСоцФонда			= ДокОсн.БезСоцФонда;
		Премия				= ДокОсн.Премия;
		БолДней				= ДокОсн.БДней;
		БольничныеБезПН		= ДокОсн.БольничныеБезПН;
		ОтпДней				= ДокОсн.ОДней;
		Отпускные			= ДокОсн.Отпускные;
		Алименты			= ДокОсн.Алименты;
		ПрочиеСчет			= ДокОсн.ПрочиеСчет;
		ПрочиеКому			= ДокОсн.ПрочиеКому;
		ПрочиеУдержания		= ДокОсн.ПрочиеУдержания;
		МатПомощьДляСФ 		= ДокОсн.МатПомощьДляСФ;
		Праздничные			= ДокОсн.Праздничные;
		ИтогНачисл();
	КонецЦикла;
КонецПроцедуры


Процедура ПриЗаписи()
	Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
		СтатусВозврата(0);
	КонецЕсли;
	
	ЖурналДокумента=глВыбратьЖурнал(ТекущийДокумент());
КонецПроцедуры

СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Открыть  в журнале");

