Перем ТекЗакладка;
Перем гСек,гСекцВладелец,гПериодРекв,гКолСтолбцов,гСписСпрВлад,гРедДок;
Перем гРазмерШрифта,гВысотаСтроки,гУровеньРекурсии;
Перем гСпВариантов,гСпПомечРеквизитов,ФлВладелец,гПодчинен;

Процедура ВывестиЭлементы(СпрМД,Спр,Код,Имя,Таб,СекцВладелец,МаксШирВладельца,ФлКолВладелец,ФлВыб) Далее

Функция Ф(Знач ПарамЧисло, Знач ПарамТочность)
	Если Окр(ПарамЧисло, ПарамТочность) = 0 Тогда
	    Возврат " ";
	КонецЕсли;

	ПарамЧисло = Формат(ПарамЧисло, "Ч(0)20." + ПарамТочность);
	Пока (Лев(ПарамЧисло, 1) = "0") И (Лев(ПарамЧисло, 2) <> "0.") Цикл
		ПарамЧисло = Прав(ПарамЧисло, СтрДлина(ПарамЧисло) - 1);
	КонецЦикла;

	Возврат ПарамЧисло;
КонецФункции

Функция ИницПериодРекв()
	Перем СтрТип;
	СпрМД = Метаданные.Справочник(ФормСправочник.ТекущаяСтрока());
	ПериодРекв = СоздатьОбъект("ТаблицаЗначений");
	ПериодРекв.Очистить();
	ПериодРекв.НоваяКолонка("Имя");
	ПериодРекв.НоваяКолонка("Знач");
	ПериодРекв.НоваяКолонка("История");
	ПериодРекв.НоваяКолонка("Дата");
	ПериодРекв.НоваяКолонка("ЕстьЗначения");
	ПериодРекв.НоваяКолонка("Позиция");
	ПериодРекв.НоваяКолонка("Точность");
	ПериодРекв.НоваяКолонка("Документ");

	Позиция = 3;
	гСпПомечРеквизитов.ВыбратьСтроки();
	Пока гСпПомечРеквизитов.ПолучитьСтроку()=1 Цикл
		ТекРекв=гСпПомечРеквизитов.Имя;
		Если (гСпПомечРеквизитов.Периодический = 1) Тогда
			ПериодРекв.НоваяСтрока();
			ПериодРекв.Имя = ТекРекв;
			ПериодРекв.История = СоздатьОбъект("Периодический");
			ПериодРекв.Позиция = Позиция;
			Если СтрТип = "Число" Тогда
				   ПериодРекв.Точность = гСпПомечРеквизитов.Точность;
			КонецЕсли;
		КонецЕсли;
		Позиция = Позиция + 1;
	КонецЦикла;

	Возврат ПериодРекв;
КонецФункции

Функция УстВыборка(ПарамПериодРекв, ПарамСправочник)
	ПарамПериодРекв.ВыбратьСтроки();
	Пока ПарамПериодРекв.ПолучитьСтроку() = 1 Цикл
		ПарамПериодРекв.История.ИспользоватьОбъект(ПарамПериодРекв.Имя, ПарамСправочник);

		Если (ПустоеЗначение(НачДата) = 1) Или (ПустоеЗначение(КонДата) = 1) Тогда
			ПарамПериодРекв.История.ВыбратьЗначения();
		Иначе
			ПарамПериодРекв.История.ВыбратьЗначения(НачДата, КонДата);
		КонецЕсли;

		Если ПарамПериодРекв.История.ПолучитьЗначение() = 1 Тогда
			ПарамПериодРекв.Дата = ПарамПериодРекв.История.ДатаЗнач;
			ПарамПериодРекв.Знач = ПарамПериодРекв.История.Значение;
			ПарамПериодРекв.Документ = ПарамПериодРекв.История.ТекущийДокумент();
			ПарамПериодРекв.ЕстьЗначения = 1;
		Иначе
			ПарамПериодРекв.ЕстьЗначения = 0;
		КонецЕсли;
	КонецЦикла;

	Возврат ?(ПарамПериодРекв.Итог("ЕстьЗначения") > 0, 1, 0);
КонецФункции

Процедура ВывестиПериодРекв(ПарамОбластьТаблицы, ПарамЗначение, ПарамТочность)
	Если ТипЗначенияСтр(ПарамЗначение) = "Число" Тогда
		ПарамОбластьТаблицы.Текст = Ф(ПарамЗначение, ПарамТочность);
	Иначе
		ПарамОбластьТаблицы.Текст = СокрЛП(ПарамЗначение);
	КонецЕсли;

	ПарамОбластьТаблицы.Контроль(3);
КонецПроцедуры

Процедура УстСортировку(Спр)
	ЗначСорт=СписРеквСорт.ПолучитьЗначение(СписРеквСорт.ТекущаяСтрока());
	Если ЗначСорт="Наименование" Тогда
		Спр.ПорядокНаименований();
	ИначеЕсли ЗначСорт="Код" Тогда
		Спр.ПорядокКодов();
	ИначеЕсли СписРеквСорт.РазмерСписка()>0 Тогда
		Спр.ПорядокРеквизита(СписРеквСорт.ПолучитьЗначение(СписРеквСорт.ТекущаяСтрока()));
	КонецЕсли;
КонецПроцедуры

Функция ПеремУсловия(ТекСпр)
	Текст="";
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку()>0 Цикл
		ТекЗнач = ТабУсловия.КолИдентификатор;
		Если ПустоеЗначение(ТекЗнач)=1 Тогда
			Продолжить;
		КонецЕсли;
		Если ФормРеквизиты.ПолучитьЗначение(ФормРеквизиты.НайтиЗначение(ТекЗнач)) = 0 Тогда
			Текст = Текст + "
			|" + ТекЗнач + " = Справочник." + ТекСпр + "." + ТекЗнач + ";";
		КонецЕсли;
	КонецЦикла;
	Возврат Текст;
КонецФункции

Процедура ВыбратьУсловие(НомТекСтр)
	Перем СтрПуть,СтрИмя,СтрИмяДиалога;

	Если НомТекСтр>ТабУсловия.КоличествоСтрок() Тогда
		НомТекСтр=0;
	КонецЕсли;

	Если (НомТекСтр>0)И(ТабУсловия.ТекущаяКолонка()="ФлВкл") Тогда
		Если  СокрЛП(ТабУсловия.ФлВкл)="" Тогда
			ТабУсловия.ФлВкл="+";
		Иначе
			ТабУсловия.ФлВкл="";
		КонецЕсли;
		Возврат;
	КонецЕсли;

	СписокПарам=СоздатьОбъект("СписокЗначений");
	СтрИмяДиалога="DlgQuery.ert";
	РасположениеФайла(СтрПуть,СтрИмя);

	СписокПарам.ДобавитьЗначение("Справочник","Режим");
	СписокПарам.ДобавитьЗначение(Метаданные.Справочник(ФормСправочник.ТекущаяСтрока()),"Объект");
	Если НомТекСтр>0 Тогда
		Если СокрЛП(ТабУсловия.ПолучитьЗначение(НомТекСтр,"ФлВкл"))="+" Тогда
			Вкл=1;
		Иначе
			Вкл=0;
		КонецЕсли;
		СписокПарам.ДобавитьЗначение(Вкл,"ВклУсловие");
		СписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолИдентификатор"),"Атрибут");
		СписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолПредставление"),"Представление");
		СписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолУсловие"),"Условие");
		СписокПарам.ДобавитьЗначение(ТабУсловия.ПолучитьЗначение(НомТекСтр,"КолЗначение"),"Значение");
	КонецЕсли;
	ПеремКонт=СписокПарам;
    ОткрытьФормуМодально("Обработка.ВыборУсловия",ПеремКонт) ;
	Если ПустоеЗначение(ПеремКонт)=1 Тогда
		Возврат;
	КонецЕсли;
	Если ПеремКонт.РазмерСписка()=0 Тогда
		Возврат;
	КонецЕсли;
	ВыбАтриб=ПеремКонт.Получить("Атрибут");
	Если НомТекСтр=0 Тогда
		ТабУсловия.ВыбратьСтроки();
		Пока ТабУсловия.ПолучитьСтроку()=1  Цикл
	        Если ВыбАтриб=ТабУсловия.КолИдентификатор Тогда
				Предупреждение("Внимание,условие для "+Строка(ВыбАтриб)+" уже определено!");
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Если НомТекСтр<=0 Тогда
		ТабУсловия.НоваяСтрока();
	КонецЕсли;
	СтрФл="";
	Если ПеремКонт.Получить("ВклУсловие")=1 Тогда
		СтрФл="+";
	КонецЕсли;
	ТабУсловия.ФлВкл = СтрФл;
	ТабУсловия.КолИдентификатор = ВыбАтриб;
	ТабУсловия.КолУсловие = ПеремКонт.Получить("Условие");
	ТабУсловия.КолПредставление = ПеремКонт.Получить("Представление");
	ТабУсловия.КолЗначение = ПеремКонт.Получить("Значение");
	Если НомТекСтр <= 0 Тогда
		ТабУсловия.ТекущаяСтрока(ТабУсловия.НомерСтроки);
	КонецЕсли;
КонецПроцедуры


Функция СравнитьЗначЗапроса(СтрЗнак,Знач1,Знач2)
	Рез=1;
	Если ТипЗначенияСтр(Знач1)<>ТипЗначенияСтр(Знач2) Тогда
		Возврат 0;
	КонецЕсли;
	Если (СтрЗнак="<>") Тогда
		Рез=?(Знач1<>Знач2,1,0);
	ИначеЕсли (СтрЗнак="<=") Тогда
		Рез=?(Знач1<=Знач2,1,0);
	ИначеЕсли (СтрЗнак=">=") Тогда
		Рез=?(Знач1>=Знач2,1,0);
	ИначеЕсли (СтрЗнак=">") Тогда
		Рез=?(Знач1>Знач2,1,0);
	ИначеЕсли (СтрЗнак="<") Тогда
		Рез=?(Знач1<Знач2,1,0);
	ИначеЕсли (СтрЗнак="=") Тогда
		Рез=?(Знач1=Знач2,1,0);
	КонецЕсли;
	Возврат Рез;
КонецФункции

Функция УстановитьВладельца(ЗначВлад,Спр,Режим)
	Рез=0;
	ТабУсловия.ВыбратьСтроки();
	НайденоВладельцев=0;
	Пока ТабУсловия.ПолучитьСтроку()>0 Цикл
		Если (ПустоеЗначение(ТабУсловия.КолИдентификатор)=1)ИЛИ(ТабУсловия.ФлВкл="") Тогда
			Продолжить;
		КонецЕсли;
		Знач2=ТабУсловия.КолЗначение;
		Если ТипЗначенияСтр(Знач2)<>"Справочник" Тогда
			Возврат 0;
		КонецЕсли;
		Усл=СокрЛП(ТабУсловия.КолУсловие);
		Если (ТабУсловия.КолИдентификатор ="Владелец") Тогда
			Если (Усл="=")И(Режим="Владелец") Тогда
				Спр.ИспользоватьВладельца(Знач2);
				ЗначВлад=Знач2;
				Возврат 1;
			ИначеЕсли (Усл="=")И(Режим="Текущий")И(Спр.Вид()=Знач2.Вид()) Тогда
				ЗначВлад=Знач2;
				Возврат 1;
			ИначеЕсли (Усл="В")И(Знач2.ЭтоГруппа()=1)И(Режим="Текущий")И(Спр.Вид()=Знач2.Вид()) Тогда
				Спр.ИспользоватьРодителя(Знач2);
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат  0;
КонецФункции

Функция УстановитьГруппу(Спр,Режим)
	ТабУсловия.ВыбратьСтроки();
	НайденоГрупп=0;
	Пока ТабУсловия.ПолучитьСтроку()>0 Цикл
		Если (ПустоеЗначение(ТабУсловия.КолИдентификатор)=1)ИЛИ(ТабУсловия.ФлВкл="") Тогда
			Продолжить;
		КонецЕсли;
		Усл=СокрЛП(ТабУсловия.КолУсловие);
		Если ТипЗначенияСтр(ТабУсловия.КолЗначение)<>"Справочник" Тогда
			Возврат 0;
		КонецЕсли;
		Если (ТабУсловия.КолИдентификатор =Режим)И
			(Спр.Вид()=ТабУсловия.КолЗначение.Вид())И
			((Усл="В")ИЛИ(Усл="=")) Тогда
				Знач2=ТабУсловия.КолЗначение;
				НайденоГрупп=1;
				Прервать;
		КонецЕсли;
	КонецЦикла;
	Если (НайденоГрупп=1)И (ТипЗначенияСтр(Знач2)="Справочник") Тогда
		Если Знач2.ЭтоГруппа()=1 Тогда
			Спр.ИспользоватьРодителя(Знач2);
			Возврат 1;
		КонецЕсли;
	КонецЕсли;
	Возврат 0;
КонецФункции

Функция ПроверкаАтрибутов(ЭлемСпр,Режим)
	ТабУсловия.ВыбратьСтроки();
	НайденоГрупп=0;
	Пока ТабУсловия.ПолучитьСтроку()>0 Цикл
		Если (ПустоеЗначение(ТабУсловия.КолИдентификатор)=1)ИЛИ(ТабУсловия.ФлВкл="") Тогда
			Продолжить;
		КонецЕсли;
		Если СокрЛП(ТабУсловия.КолИдентификатор) =СокрЛП(Режим) Тогда
			Если ЭлемСпр.Вид()=ТабУсловия.КолЗначение.Вид() Тогда
				Знач2=ТабУсловия.КолЗначение;
				НайденоГрупп=1;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если НайденоГрупп=0 Тогда
		Возврат 1;
	КонецЕсли;
	Усл=СокрЛП(ТабУсловия.КолУсловие);
	Если Усл="В" Тогда
		 Возврат  ЭлемСпр.ПринадлежитГруппе(Знач2);
	КонецЕсли;
    Если СокрЛП(ТабУсловия.КолИдентификатор)="Родитель" Тогда
		Возврат СравнитьЗначЗапроса(Усл,ЭлемСпр.Родитель,Знач2);
	Иначе
		Возврат СравнитьЗначЗапроса(Усл,ЭлемСпр,Знач2);
	КонецЕсли;
КонецФункции

Функция ПроверкаУсловий(ЭлемСпр)
	ТабУсловия.ВыбратьСтроки();
	Пока ТабУсловия.ПолучитьСтроку()>0 Цикл
		Знач2=ТабУсловия.КолЗначение;
		Если (ПустоеЗначение(ТабУсловия.КолИдентификатор)=1)ИЛИ(ТабУсловия.ФлВкл="")
			 ИЛИ(ТабУсловия.КолИдентификатор="Родитель")ИЛИ(ТабУсловия.КолИдентификатор="Владелец") Тогда
			Продолжить;
		КонецЕсли;
		Знач1 = ЭлемСпр.ПолучитьАтрибут(ТабУсловия.КолИдентификатор);
		Если ТабУсловия.КолИдентификатор = "Наименование" Тогда
			Знач1 = СокрП(Знач1);
			Знач2 = СокрП(Знач2);
		КонецЕсли;
		Если СравнитьЗначЗапроса(СокрЛП(ТабУсловия.КолУсловие),Знач1,Знач2)=0 Тогда
			Возврат 0;
		КонецЕсли;
	КонецЦикла;
    Возврат 1;
КонецФункции

Процедура ПолучитьИерархСпр()
	Поз=гСписСпрВлад.РазмерСписка();
	Если Поз=0 Тогда
		Возврат;
	КонецЕсли;
	ИдСпр=гСписСпрВлад.ПолучитьЗначение(Поз);
	СпрМД = Метаданные.Справочник(ИдСпр);
	Спр = СоздатьОбъект("Справочник." + СпрМД.Идентификатор);
	Если СокрЛП(СпрМД.Владелец)<>"Метаданные" Тогда
		гСписСпрВлад.ДобавитьЗначение(СпрМД.Владелец.Идентификатор,Поз+1);
	КонецЕсли;
КонецПроцедуры

Функция ЗаполнитьПодчиненных(ЭлемВладелец,ТабПодчиненных)
	Перем Стр,ЗначВлад;
	гУровеньРекурсии = гУровеньРекурсии + 1;
	УровТек=гУровеньРекурсии;
    Если гСписСпрВлад.РазмерСписка()< гУровеньРекурсии Тогда
		Возврат 0;
	КонецЕсли;
	ИдСпр=гСписСпрВлад.ПолучитьЗначение(гУровеньРекурсии);
	СпрМД = Метаданные.Справочник(ИдСпр);
	Спр = СоздатьОбъект("Справочник." + СпрМД.Идентификатор);
		Спр.ИспользоватьВладельца(ЭлемВладелец);
		УстановитьГруппу(Спр,"Владелец");
		УстСортировку(Спр);
		Спр.ВыбратьЭлементы();
		КолКонечнЭлем=0;
  		Пока Спр.ПолучитьЭлемент()=1 Цикл
  			Если ПроверкаАтрибутов(Спр.ТекущийЭлемент(),"Владелец")=0 Тогда
  				Продолжить;
  			КонецЕсли;
        	Если (гУровеньРекурсии= гСписСпрВлад.РазмерСписка())И(Спр.ЭтоГруппа()=0) Тогда
				Если ПроверкаУсловий(Спр.ТекущийЭлемент())=0 Тогда
					Продолжить;
				КонецЕсли;
	    	КонецЕсли;
			ТабПодчиненных.НоваяСтрока();
			ТабПодчиненных.Владелец=ЭлемВладелец;
			ТабПодчиненных.Подчиненный=Спр.ТекущийЭлемент();
			ТабПодчиненных.Уровень= гУровеньРекурсии;
			КолКонечнЭлем=КолКонечнЭлем+1;
			Если гУровеньРекурсии < гСписСпрВлад.РазмерСписка() Тогда
				ПолучитьКолКон=ЗаполнитьПодчиненных(Спр.ТекущийЭлемент(),ТабПодчиненных);
				Если (ПолучитьКолКон=0)И(Спр.ТекущийЭлемент().ЭтоГруппа()=0) Тогда
					Стр=0;
					Если ТабПодчиненных.НайтиЗначение(Спр.ТекущийЭлемент(),Стр,"Подчиненный")=1 Тогда
						ТабПодчиненных.УдалитьСтроку(Стр);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	гУровеньРекурсии = гУровеньРекурсии - 1;
	Возврат КолКонечнЭлем;
КонецФункции

Процедура ВывестиЗаголовок(Элемент,Код,Имя,Таб,УвеличШрифт)
	Код.Код.Текст = Элемент.Код;
	Имя.Имя.Текст = СокрЛП(Элемент.Наименование);
	Код.Код.Расшифровка(Элемент.ТекущийЭлемент(), 1);
	Таб.ВывестиСекцию(Код);
	Таб.ПрисоединитьСекцию(Имя);
	Обл = Таб.Область(Таб.ВысотаТаблицы(), 1, Таб.ВысотаТаблицы(), гКолСтолбцов);
	Обл.ЦветФона(255, 200, 255);
	Обл.ЦветТекста(16711680);
	Обл.РазмерШрифта(гРазмерШрифта+УвеличШрифт);
	Если Элемент.ЭтоГруппа()=1 Тогда
		Обл.Курсив(1);
	Иначе
		Обл.Курсив(0);
	КонецЕсли;
	ВысСтроки=гВысотаСтроки+УвеличШрифт;
	Обл.Полужирный(1);
КонецПроцедуры

Процедура ВывестиЭлемент(СпрМД,ТекСпр,Код,Имя,Таб,СекцВладелец,МаксШирВладельца,ФлКолВладелец,КоличествоСтрок,ФлПровВладелец,ФлПровРодитель)
		Перем СтрТип;
		Если (ФлПровВладелец=1)И(ФлВладелец=1) Тогда
			Если ПроверкаАтрибутов(ТекСпр.Владелец,"Владелец")=0 Тогда
				Возврат ;
			КонецЕсли;
		КонецЕсли;
		Если ФлПровРодитель=1 Тогда
			Если ПроверкаАтрибутов(ТекСпр,"Родитель")=0 Тогда
				Возврат ;
			КонецЕсли;
		КонецЕсли;
		Если  ТекСпр.ЭтоГруппа() = 0 Тогда
			Если ПроверкаУсловий(ТекСпр)=0 Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;

		КоличествоСтрок=КоличествоСтрок+1;
		КолСтрПечать=Цел(КоличествоСтрок/50);
		Если КолСтрПечать>0 Тогда
			Состояние(" Обработано строк "+КолСтрПечать*50);
    	КонецЕсли;
        Если  ФлКолВладелец=1  Тогда
			НаимВлад=ТекСпр.Владелец.Наименование;
	   		СекцВладелец.Область(1,1).Текст =НаимВлад ;
	   		Если СтрДлина(НаимВлад)>МаксШирВладельца Тогда
	   		    МаксШирВладельца=СтрДлина(НаимВлад);
	   		КонецЕсли;
	   		Таб.ВывестиСекцию(СекцВладелец);
		КонецЕсли;
		Код.Код.Текст = ТекСпр.Код;
		Имя.Имя.Текст = СокрЛП(ТекСпр.Наименование);
		Код.Код.Расшифровка(ТекСпр.ТекущийЭлемент(), 1);
		Если  ФлКолВладелец=0  Тогда
			Таб.ВывестиСекцию(Код);
		Иначе
			Таб.ПрисоединитьСекцию(Код);
		КонецЕсли;
		Таб.ПрисоединитьСекцию(Имя);

		гСпПомечРеквизитов.ВыбратьСтроки();
		Пока гСпПомечРеквизитов.ПолучитьСтроку()=1 Цикл
			ТекРекв=гСпПомечРеквизитов.Имя;
			ЗначРекв = СокрЛП(ТекСпр.ПолучитьАтрибут(ТекРекв));
			Если СтрТип = "Число" Тогда
				гСек.Реквизит.Текст = Ф(ЗначРекв, гСпПомечРеквизитов.Точность);
			Иначе
				гСек.Реквизит.Текст = ЗначРекв;
			КонецЕсли;
			Таб.ПрисоединитьСекцию(гСек);
		КонецЦикла;

		Если ТекСпр.ЭтоГруппа() = 1 Тогда
			Обл = Таб.Область(Таб.ВысотаТаблицы(), 1, Таб.ВысотаТаблицы(), гКолСтолбцов);
			Обл.ЦветФона(255, 200, 255);
			Обл.Курсив(1);
			Обл.Полужирный(1);
		КонецЕсли;

		Если ФормПечПериод = 1 Тогда
			Если УстВыборка(гПериодРекв, ТекСпр) = 1 Тогда
				Пока гПериодРекв.Итог("ЕстьЗначения") > 0 Цикл
					ТекСтрока = Таб.ВысотаТаблицы() + 1;

					гПериодРекв.Сортировать("ЕстьЗначения-, Дата+");
					гПериодРекв.ВыбратьСтроки();
					ТекДата = ПолучитьПустоеЗначение("Дата");
					Пока гПериодРекв.ПолучитьСтроку() = 1 Цикл
						Если ПустоеЗначение(ТекДата) = 1 Тогда
						    ТекДата = гПериодРекв.Дата;
							ТабДата = Таб.Область(ТекСтрока, 2+ФлКолВладелец);
							ТабДата.Текст = ТекДата;
							Если гРедДок=1 Тогда
								Документ=гПериодРекв.Документ;
								ТабДата.Текст=ТабДата.Текст+" "+Документ;
								ТабДата.Расшифровка(Документ);
								ТабДата.Контроль(4);
							КонецЕсли;
							ТабДата.Рамка(3,3,3,3);
							ТабДата.Полужирный(1);
						ИначеЕсли (ТекДата <> гПериодРекв.Дата)
							ИЛИ (гПериодРекв.ЕстьЗначения = 0) Тогда
							Прервать;
						КонецЕсли;
                        КоличествоСтрок=КоличествоСтрок+1;
						ВывестиПериодРекв(Таб.Область(ТекСтрока, гПериодРекв.Позиция+ФлКолВладелец), гПериодРекв.Знач, гПериодРекв.Точность);
						Если гПериодРекв.История.ПолучитьЗначение() = 1 Тогда
						    гПериодРекв.ЕстьЗначения = 1;
							гПериодРекв.Дата = гПериодРекв.История.ДатаЗнач;
							гПериодРекв.Знач = гПериодРекв.История.Значение;
							гПериодРекв.Документ = гПериодРекв.История.ТекущийДокумент();
						Иначе
							гПериодРекв.ЕстьЗначения = 0;
						КонецЕсли;
					КонецЦикла;
					Таб.Область(ТекСтрока, 1, ТекСтрока, гКолСтолбцов).Рамка(3,3,3,3);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
КонецПроцедуры

Процедура ПечатьВладельца(СпрВладелец,Код,Имя,Таб,КолСтолбцов,КоличествоСтрок,СекцВладелец,ТабПодчиненных,СпрМД,Спр)
  		Если ПроверкаАтрибутов(СпрВладелец,"Владелец")=0 Тогда
  			Возврат;
  		КонецЕсли;
	 	гУровеньРекурсии=1;
	 	ТабПодчиненных.УдалитьСтроки();
	 	ЗаполнитьПодчиненных(СпрВладелец,ТабПодчиненных);
	 	КолВыб=0;
	 	ТабПодчиненных.ВыбратьСтроки();
	 	Пока  ТабПодчиненных.ПолучитьСтроку()=1 Цикл
	 		Если ТабПодчиненных.Уровень=гСписСпрВлад.РазмерСписка() Тогда
	 			КолВыб=КолВыб+1;
	 		КонецЕсли;
	 	КонецЦикла;
	 	Если (КолВыб=0)И(СпрВладелец.ТекущийЭлемент().ЭтоГруппа()=0) Тогда
	 		Возврат;
	 	КонецЕсли;
		ВывестиЗаголовок(СпрВладелец,Код,Имя,Таб,гСписСпрВлад.РазмерСписка());
	 	ТабПодчиненных.ВыбратьСтроки();
	 	Пока  ТабПодчиненных.ПолучитьСтроку()=1 Цикл
	 		Уровень= гСписСпрВлад.РазмерСписка()-ТабПодчиненных.Уровень;
	 		КоличествоСтрок=КоличествоСтрок+1;
	 		Если Уровень>0 Тогда
	 	     	ВывестиЗаголовок(ТабПодчиненных.Подчиненный,Код,Имя,Таб,Уровень);
	 		Иначе
	 		 	МаксШирВладельца=0;
	 		 	Спр.НайтиЭлемент(ТабПодчиненных.Подчиненный);
	 		 	ВывестиЭлемент(СпрМД,Спр,Код,Имя,Таб,СекцВладелец,МаксШирВладельца,0,КоличествоСтрок,1,1);
	 		КонецЕсли;
	 	КонецЦикла;
КонецПроцедуры

Процедура ПечатьИерархииВладельца(СпрМД,Спр,Таб,Код,Имя,СекцВладелец,КолСтолбцов)
	Перем ЗначВлад;
	 ТабПодчиненных=СоздатьОбъект("ТаблицаЗначений");
	 ТабПодчиненных.НоваяКолонка("Владелец");
	 ТабПодчиненных.НоваяКолонка("Подчиненный");
	 ТабПодчиненных.НоваяКолонка("Уровень");
	 СпрВладелецМД = Метаданные.Справочник(гСписСпрВлад.ПолучитьЗначение(1));
	 СпрВладелец = СоздатьОбъект("Справочник." + СпрВладелецМД.Идентификатор);
	 Если УстановитьВладельца(ЗначВлад,СпрВладелец,"Текущий")=1 Тогда
	 	КоличествоСтрок=0;
	 	ПечатьВладельца(ЗначВлад,Код,Имя,Таб,КолСтолбцов,КоличествоСтрок,СекцВладелец,ТабПодчиненных,СпрМД,Спр);
	 Иначе
	 	СпрВладелец.ПорядокНаименований();
	 	УстановитьГруппу(СпрВладелец,"Владелец");
	 	СпрВладелец.ВыбратьЭлементы();
	 	КоличествоСтрок=0;
	 	Пока СпрВладелец.ПолучитьЭлемент() = 1 Цикл
	 	    ПечатьВладельца(СпрВладелец.ТекущийЭлемент(),Код,Имя,Таб,КолСтолбцов,КоличествоСтрок,СекцВладелец,ТабПодчиненных,СпрМД,Спр);
	 	КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция ЕстьИзменДок()
	Рез=0;
	СпрМД = Метаданные.Справочник(ФормСправочник.ТекущаяСтрока());
    гСпПомечРеквизитов.ВыбратьСтроки();
	Пока гСпПомечРеквизитов.ПолучитьСтроку()=1 Цикл
		ТекРекв=гСпПомечРеквизитов.Имя;
		Если (гСпПомечРеквизитов.Периодический = 1) Тогда
			Если (СпрМД.Реквизит(ТекРекв).ИзменяетсяДокументами = 1) Тогда
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Рез;
КонецФункции

Функция ПечатьУсловия(СтрУсловия,СтрРасшифровки) Далее

Процедура КнПечать()
	Перем СтрУсловие,СтрРасшифровка;
	Таб=СоздатьОбъект("Таблица");

	СпрМД = Метаданные.Справочник(ФормСправочник.ТекущаяСтрока());
	Спр = СоздатьОбъект("Справочник." + СпрМД.Идентификатор);
	Спр.ИспользоватьДату(РабочаяДата());
    гПодчинен=0;
	ВыводКолВлад=0;
	Если СокрЛП(СпрМД.Владелец)="Метаданные" Тогда
		ФлВладелец=0;
	Иначе
		гПодчинен=1;
		ФлВладелец=1;
		Если ФлКолВладельца= 0 Тогда
			ВыводКолВлад=1;
		КонецЕсли;
	КонецЕсли;
	Заголовок="Справочник """+СпрМД.Представление()+""+?( СокрЛП(СпрМД.Владелец)="Метаданные","""",""" (подчинен """+СпрМД.Владелец+""")");
	ПечатьУсловия(СтрУсловие,СтрРасшифровка);
	Таб.ВывестиСекцию("Заголовок");
	Код = Таб.ПолучитьСекцию("Шапка|Код");
	Имя = Таб.ПолучитьСекцию("Шапка|Имя");

	Если  ВыводКолВлад=1  Тогда
	   СекцВладелец = Таб.ПолучитьСекцию("Шапка|Владелец");
	   СекцВладелец.Область(1,1).Текст = СпрМД.Владелец;
	   Таб.ВывестиСекцию(СекцВладелец);
	КонецЕсли;

	Код.шКод.Текст = "Код";
	Имя.шИмя.Текст = "Наименование";
	Если  ВыводКолВлад=0  Тогда
		Таб.ВывестиСекцию(Код);
	Иначе
		Таб.ПрисоединитьСекцию(Код);
	КонецЕсли;
	Таб.ПрисоединитьСекцию(Имя);
    гКолСтолбцов=2+ВыводКолВлад;
	Сек = Таб.ПолучитьСекцию("Шапка|Реквизит");
	гСпПомечРеквизитов.УдалитьСтроки();

	Для инд = 1 По ФормРеквизиты.РазмерСписка() Цикл
		Если ФормРеквизиты.Пометка(Инд) = 1 Тогда
			Сек.шРеквизит.Текст = СпрМД.Реквизит(Инд).Представление();
			Таб.ПрисоединитьСекцию(Сек);
			гКолСтолбцов=гКолСтолбцов+1;
			ТекРекв=ФормРеквизиты.ПолучитьЗначение(инд);
			гСпПомечРеквизитов.НоваяСтрока();
			гСпПомечРеквизитов.Имя=ТекРекв;
			гСпПомечРеквизитов.Тип=СпрМД.Реквизит(ТекРекв).Тип;
			гСпПомечРеквизитов.Точность=СпрМД.Реквизит(ТекРекв).Точность;
			гСпПомечРеквизитов.Периодический=СпрМД.Реквизит(ТекРекв).Периодический;
		КонецЕсли;
	КонецЦикла;

	гРедДок=0;
	Если (ФормПечПериод=1)И(ЕстьИзменДок()=1) Тогда
		гРедДок=1;
	КонецЕсли;
	Если ФормПечПериод=1 Тогда
		гПериодРекв = ИницПериодРекв();
	КонецЕсли;

	гСек = Таб.ПолучитьСекцию("Строка|Реквизит");
	Код = Таб.ПолучитьСекцию("Строка|Код");
	Имя = Таб.ПолучитьСекцию("Строка|Имя");
	СекцВладелец = Таб.ПолучитьСекцию("Строка|Владелец");

    КоличествоСтрок=0;
	МаксШирВладельца=0;
	Если (ФлКолВладельца=1)И(ФлВладелец=1) Тогда
		гСписСпрВлад.УдалитьВсе();
		гСписСпрВлад.ДобавитьЗначение(СпрМД.Владелец.Идентификатор,"1");
		ПолучитьИерархСпр();
		гСписСпрВлад.СортироватьПоПредставлению(1);
		гСписСпрВлад.ДобавитьЗначение(ФормСправочник.ПолучитьЗначение(ФормСправочник.ТекущаяСтрока()));
		ПечатьИерархииВладельца(СпрМД,Спр,Таб,Код,Имя,СекцВладелец,гКолСтолбцов);
	Иначе
		ФлВыб=?( СокрЛП(СпрМД.Владелец)="Метаданные", 1, 0) ;
     	ВывестиЭлементы(СпрМД,Спр,Код,Имя,Таб,СекцВладелец,МаксШирВладельца,ВыводКолВлад,ВыводГрупп);
	КонецЕсли;
	Таб.Область(,1+ВыводКолВлад,,1+ВыводКолВлад).ШиринаСтолбца(СпрМД.ДлинаКода + 1);
	Таб.Область(,2+ВыводКолВлад,,2+ВыводКолВлад).ШиринаСтолбца(Макс(Мин(СпрМД.ДлинаНаименования, 30),10));
	Номер = 3+ВыводКолВлад;
	гСпПомечРеквизитов.ВыбратьСтроки();
	Пока гСпПомечРеквизитов.ПолучитьСтроку()=1 Цикл
	    ШиринаСт=Мин(Макс(СпрМД.Реквизит(гСпПомечРеквизитов.Имя).ДлинаПредставленияЗначения(4,30,30),
			СтрДлина(гСпПомечРеквизитов.Имя)), 30);
		Таб.Область(,Номер,,Номер).ШиринаСтолбца(ШиринаСт);
		СтрТекст=Таб.Область(3,Номер,3,Номер).Текст;
		Если ШиринаСт<СтрДлина(СтрТекст) Тогда
			Таб.Область(3,Номер,3,Номер).Расшифровка(СтрТекст);
		КонецЕсли;
		Если (гСпПомечРеквизитов.Тип="Число")И(Таб.ВысотаТаблицы()>=4) Тогда
			Таб.Область(4,Номер,Таб.ВысотаТаблицы(),Номер).ГоризонтальноеПоложение(2);
		КонецЕсли;
		Номер = Номер + 1;
	КонецЦикла;
    Если  ВыводКолВлад=1  Тогда
		Если МаксШирВладельца>30 Тогда
		    МаксШирВладельца=30;
		КонецЕсли;
		Таб.Область(,1,,1).ШиринаСтолбца(МаксШирВладельца);
	КонецЕсли;

	Таб.ТолькоПросмотр(1);
	Таб.Опции(0,0,3,2+ВыводКолВлад);
	Таб.Область(3,1,Таб.ВысотаТаблицы(),гКолСтолбцов).РамкаОбвести(4,4,4,4);
	Таб.Область(,,,).ВертикальноеПоложение(2);
	Таб.Показать("Справочник """+ СпрМД.Представление() + """");
КонецПроцедуры

Процедура ВывестиЭлементы(СпрМД,Спр,Код,Имя,Таб,СекцВладелец,МаксШирВладельца,ФлКолВладелец,ФлВыб)
	Перем ЗначВлад;
	Спр.ИспользоватьДату(РабочаяДата());
	ФлИспВлад=УстановитьВладельца(ЗначВлад,Спр,"Владелец");
	ФлПровВладельца=1;
	Если ФлИспВлад=1 Тогда
		ФлПровВладельца=0;
		ФлВыб=1;
	КонецЕсли;
	ФлПровГр=1;
	ФлИспГр=УстановитьГруппу(Спр,"Родитель");
	Если (ФлИспГр=1)И(гПодчинен=0)И(ВыводГрупп=1) Тогда
		ФлПровГр=0;
	КонецЕсли;
	УстСортировку(Спр);
	Спр.ВыбратьЭлементы(ФлВыб);
	КоличествоСтрок=0;
	Пока Спр.ПолучитьЭлемент() = 1 Цикл
		ВывестиЭлемент(СпрМД,Спр,Код,Имя,Таб,СекцВладелец,МаксШирВладельца,ФлКолВладелец,КоличествоСтрок,ФлПровВладельца,ФлПровГр);
	КонецЦикла;
КонецПроцедуры

Процедура ПриВыбореЗакладки(Ном,Значен) Далее

Процедура ОбСправочник()
	СпрМД = Метаданные.Справочник(ФормСправочник.ПолучитьЗначение(ФормСправочник.ТекущаяСтрока()));
    ТабУсловия.УдалитьСтроки();
	ФормРеквизиты.УдалитьВсе();
	СписРеквСорт.УдалитьВсе();
	Если СпрМД.ДлинаКода>0 Тогда
		СписРеквСорт.ДобавитьЗначение("Код");
	КонецЕсли;
	Если СпрМД.ДлинаНаименования>0 Тогда
		СписРеквСорт.ДобавитьЗначение("Наименование");
	КонецЕсли;
	Для Инд = 1 По СпрМД.Реквизит() Цикл
		ФормРеквизиты.ДобавитьЗначение(СпрМД.Реквизит(Инд).Идентификатор, СпрМД.Реквизит(Инд).Представление());
		ФормРеквизиты.Пометка(Инд, 1);
		Если СпрМД.Реквизит(Инд).Сортировка=1 Тогда
			СписРеквСорт.ДобавитьЗначение(СпрМД.Реквизит(Инд).Идентификатор, СпрМД.Реквизит(Инд).Представление());
		КонецЕсли;
	КонецЦикла;
	Если СписРеквСорт.РазмерСписка()>0 Тогда
		Если СпрМД.ОсновноеПредставление="ВВидеНаименования" Тогда
			СписРеквСорт.ТекущаяСтрока(2);
		Иначе
			СписРеквСорт.ТекущаяСтрока(1);
 		КонецЕсли;
	КонецЕсли;
	ПриВыбореЗакладки(1,ТекЗакладка);
КонецПроцедуры


Процедура УправлениеЗакладками()
	Форма.Закладки.ДобавитьЗначение("Общие","Общие");
	Форма.Закладки.ДобавитьЗначение("Условия","Условия");
	Форма.Закладки.ДобавитьЗначение("Настройки","Настройки");
	Форма.ИспользоватьСлой("Основной,Реквизиты",2);
КонецПроцедуры

Процедура УдалУсловие()
	Если ТабУсловия.ТекущаяСтрока()>0 Тогда
		ТабУсловия.УдалитьСтроку(ТабУсловия.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Процедура ИзмУсловие()
	Если ТабУсловия.ТекущаяСтрока()>0 Тогда
		ВыбратьУсловие(ТабУсловия.ТекущаяСтрока());
	КонецЕсли;
КонецПроцедуры

Функция ПечатьУсловия(СтрУсловия,СтрРасшифровки)
	СтрУсловия="";
	СтрРасшифровки="";
	ТабУсловия.ВыбратьСтроки();
	Рез=0;
	Пока ТабУсловия.ПолучитьСтроку()=1  Цикл
		Если СокрЛП(ТабУсловия.ФлВкл)<>"+" Тогда
			Продолжить;
		КонецЕсли;
		Рез=Рез+1;
		Если ТабУсловия.ТекущаяСтрока()<=3 Тогда
	  		СтрУсловия=СтрУсловия+ТабУсловия.КолПредставление+" "+ТабУсловия.КолУсловие+" "+ТабУсловия.КолЗначение+РазделительСтрок;
	  	КонецЕсли;
	  	СтрРасшифровки=СтрРасшифровки+ТабУсловия.КолПредставление+" "+ТабУсловия.КолУсловие+" "+ТабУсловия.КолЗначение+РазделительСтрок;
	КонецЦикла;
	Возврат Рез;
КонецФункции

Процедура СохранитьПараметрыФормы()
	Перем Путь,ИмяФайла;
	Перем СтрПредст;
	РасположениеФайла(Путь,ИмяФайла);

	ПараметрыУстановки=СоздатьОбъект("СписокЗначений");
	СписВар=СоздатьОбъект("СписокЗначений");
	СохрТекст=СоздатьОбъект("Текст");
	ПараметрыУстановки.УдалитьВсе();
	гСпВариантов.Выгрузить(СписВар);
	ПараметрыУстановки.ДобавитьЗначение(СписВар,"СпВариантов");

	СохрТекст.ДобавитьСтроку(ЗначениеВСтрокуВнутр(ПараметрыУстановки));
	ИмяФайла=СокрЛП(Лев(ИмяФайла,СтрДлина(ИмяФайла)-4))+".prm";
	СохрТекст.Записать(СокрЛП(КаталогПользователя())+ИмяФайла);
КонецПроцедуры

Функция ВосстановитьПараметрыФормы()
	Перем Путь,ИмяФайла;
	ФАЙЛ= СоздатьОбъект("ФС");
    РасположениеФайла(Путь,ИмяФайла);
	ИмяФайла=СокрЛП(Лев(ИмяФайла,СтрДлина(ИмяФайла)-4))+".prm";
	Если ФАЙЛ.СуществуетФайл(КаталогПользователя()+ИмяФайла)=0 Тогда
	    Возврат 0;
	КонецЕсли;
	ПараметрыУстановки=СоздатьОбъект("СписокЗначений");
	СохрТекст=СоздатьОбъект("Текст");
	СохрТекст.Открыть(КаталогПользователя()+ИмяФайла);
	Стр="";
	Для Инд =1  По СохрТекст.КоличествоСтрок()  Цикл
	   Стр=Стр+СохрТекст.ПолучитьСтроку(Инд);
	КонецЦикла;
	ПараметрыУстановки=ЗначениеИзСтрокиВнутр(Стр);
	Форма.Обновить(1);
	Возврат 0;
КонецФункции

Процедура СоздатьВариант(ПараметрыУстановки)
	ПараметрыУстановки.УдалитьВсе();
	СписФормРеквизиты=СоздатьОбъект("СписокЗначений");
	РеквСорт=СоздатьОбъект("СписокЗначений");
	СписУсловий=СоздатьОбъект("ТаблицаЗначений");
	ПараметрыУстановки.ДобавитьЗначение(ФормСправочник.ПолучитьЗначение(ФормСправочник.ТекущаяСтрока()),"Справочник");
	ПараметрыУстановки.ДобавитьЗначение(НачДата,"НачДата");
	ПараметрыУстановки.ДобавитьЗначение(КонДата,"КонДата");
	ПараметрыУстановки.ДобавитьЗначение(ФормПечПериод,"ФормПечПериод");
    ФормРеквизиты.Выгрузить(СписФормРеквизиты);
	ПараметрыУстановки.ДобавитьЗначение(СписФормРеквизиты,"ФормРеквизиты");
	ПараметрыУстановки.ДобавитьЗначение(ФлКолВладельца,"ФлКолВладельца");
	ТабУсловия.Выгрузить(СписУсловий);
	ПараметрыУстановки.ДобавитьЗначение(СписУсловий,"ТабУсловия");
	СписРеквСорт.Выгрузить(РеквСорт);
	ПараметрыУстановки.ДобавитьЗначение(РеквСорт,"СписРеквСорт");
	ПараметрыУстановки.ДобавитьЗначение(ВыводГрупп,"ВыводГрупп");
КонецПроцедуры

Процедура ВосстановитьВариант(НаимВарианта)
	Перем Стр;
	СпПарам=гСпВариантов.Получить(НаимВарианта);
	Если ПустоеЗначение(СпПарам)=1 Тогда
	   Возврат;
	КонецЕсли;
	ТекСпр=СпПарам.Получить("Справочник");
	Ном=ФормСправочник.НайтиЗначение(ТекСпр);
	Если Ном>0 Тогда
	    ФормСправочник.ТекущаяСтрока(Ном);
		Форма.Обновить(0);
		ОбСправочник();
	Иначе
		Возврат ;
	КонецЕсли;
	НачДата=СпПарам.Получить("НачДата");
	КонДата=СпПарам.Получить("КонДата");
	ВыводГрупп=СпПарам.Получить("ВыводГрупп");
	ФлСорт=СпПарам.Получить("ФлСорт");
    ФормПечПериод=СпПарам.Получить("ФормПечПериод");
	ФлКолВладельца=СпПарам.Получить("ФлКолВладельца");
	СпПарам.Получить("ФормРеквизиты").Выгрузить(ФормРеквизиты);
	СпПарам.Получить("ТабУсловия").Выгрузить(ТабУсловия);
	Если ПустоеЗначение(СпПарам.Получить("СписРеквСорт"))=0 Тогда
		СпПарам.Получить("СписРеквСорт").Выгрузить(СписРеквСорт);
	КонецЕсли;
	ТабУсловия.ВидимостьКолонки("КолИдентификатор",0);
КонецПроцедуры

Процедура ЗаписьВарианта()
	Если СокрЛП(ВыбВариант)="" Тогда
	    Предупреждение("Внимание!Не введено наименование настройки!");
		Возврат;
	КонецЕсли;
	СпПарам=гСпВариантов.Получить(СокрЛП(ВыбВариант));
	Если ПустоеЗначение(СпПарам)=1 Тогда
	   СпПарам=СоздатьОбъект("СписокЗначений");
	   СоздатьВариант(СпПарам);
	   гСпВариантов.ДобавитьЗначение(СпПарам,СокрЛП(ВыбВариант));
	Иначе
	   СоздатьВариант(СпПарам);
	   гСпВариантов.Установить(СокрЛП(ВыбВариант),СпПарам);
	КонецЕсли;
    гСпВариантов.ТекущаяСтрока(гСпВариантов.НайтиЗначение(СпПарам));
	СохранитьПараметрыФормы();
КонецПроцедуры

Процедура УдалитьВариант()
	ТекСпис=гСпВариантов.Получить(СокрЛП(ВыбВариант));
	Ном=гСпВариантов.НайтиЗначение(ТекСпис);
	ВыбВариант="";
	Если Ном>0 Тогда
		гСпВариантов.УдалитьЗначение(Ном);
		СохранитьПараметрыФормы();
	КонецЕсли;
КонецПроцедуры

Процедура ВклРеквизиты(Фл)
	Для Инд =1  По ФормРеквизиты.РазмерСписка()  Цикл
	   ФормРеквизиты.Пометка(Инд,Фл);
	КонецЦикла;
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(ЭлемДиалога,ФлагСтандОбр)
	Перем ВыбПоз,СтрПредст;
	Если ЭлемДиалога="ВыбВариант" Тогда
		ФлагСтандОбр=0;
		ВыбЗн="";
		ТекСпис=гСпВариантов.Получить(СокрЛП(ВыбВариант));
		Ном=гСпВариантов.НайтиЗначение(ТекСпис);
		Если Ном>0 Тогда
			гСпВариантов.ТекущаяСтрока(Ном);
		КонецЕсли;
		Если гСпВариантов.РазмерСписка()=0 Тогда
			Возврат;
		КонецЕсли;
		ВыбПоз=0;
		гСпВариантов.ВыбратьЗначение(ВыбЗн,,ВыбПоз,,2);
		Если (ВыбПоз>0) И(ВыбПоз<=гСпВариантов.РазмерСписка()) Тогда
			гСпВариантов.ПолучитьЗначение(ВыбПоз,СтрПредст);
			ВыбВариант=СтрПредст;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриВыбореЗакладки(Ном,Значен)
	Если Значен="Общие" Тогда
		Форма.ИспользоватьСлой("Основной,Реквизиты",2);
		Если ПустаяСтрока(Метаданные.Справочник(ФормСправочник.ТекущаяСтрока()))=1 Тогда
			Возврат;
		КонецЕсли;
		Если СокрЛП(Метаданные.Справочник(ФормСправочник.ТекущаяСтрока()).Владелец)<>"Метаданные" Тогда
			Форма.ИспользоватьСлой("Основной,Реквизиты,ВыборПечВлад",2);
		КонецЕсли;
	ИначеЕсли Значен="Условия" Тогда
		Форма.ИспользоватьСлой("Основной,Условия",2);
	ИначеЕсли Значен="Настройки" Тогда
		Форма.ИспользоватьСлой("Основной,Настройки",2);
	КонецЕсли;
	ТекЗакладка=Значен;
КонецПроцедуры


Процедура ПриОткрытии()
	УправлениеЗакладками();
	ФормСправочник.УдалитьВсе();
	Для Инд=1 По Метаданные.Справочник() Цикл
		ФормСправочник.ДобавитьЗначение(Метаданные.Справочник(Инд).Идентификатор,
			Метаданные.Справочник(Инд).Представление());
	КонецЦикла;
	Если ФормСправочник.РазмерСписка()>0 Тогда
	    ФормСправочник.ТекущаяСтрока(1);
	КонецЕсли;
	обСправочник();
	Если ВосстановитьПараметрыФормы()=0 Тогда
		ВыбВариант="Основной";
    КонецЕсли;
	ПриВыбореЗакладки(1,"Общие");
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьПараметрыФормы();
КонецПроцедуры

Процедура ПриВыбореРекв()
	ТекСтр=ФормРеквизиты.ТекущаяСтрока();
	Если ТекСтр>0 Тогда
		Фл=1;
		Если ФормРеквизиты.Пометка(ТекСтр)=1 Тогда
			Фл=0;
		КонецЕсли;
		ФормРеквизиты.Пометка(ТекСтр,Фл)
	КонецЕсли;
КонецПроцедуры

гСпВариантов=СоздатьОбъект("СписокЗначений");
ФлКолВладельца=1;
Форма.ИспользоватьЗакладки(1);

ТабУсловия.НоваяКолонка("ФлВкл",,3,,"+",3,,);
ТабУсловия.НоваяКолонка("КолПредставление",,12,,"Данные",12);
ТабУсловия.НоваяКолонка("КолУсловие","Строка","3",,"Условие",3);
ТабУсловия.НоваяКолонка("КолЗначение",,,,"Значение",12);
ТабУсловия.НоваяКолонка("КолИдентификатор");
ТабУсловия.ВидимостьКолонки("КолИдентификатор",0);
гСписСпрВлад=СоздатьОбъект("СписокЗначений");
гСпПомечРеквизитов=СоздатьОбъект("ТаблицаЗначений");
гРазмерШрифта=8;
гВысотаСтроки=11.25;
гСпПомечРеквизитов.НоваяКолонка("Имя");
гСпПомечРеквизитов.НоваяКолонка("Тип");
гСпПомечРеквизитов.НоваяКолонка("Точность");
гСпПомечРеквизитов.НоваяКолонка("Периодический");
ВыводГрупп=1;
ФлСорт=1;